/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { taxRequirementsGet } from "../../funcs/taxRequirementsGet.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations
      .GetV1CompaniesCompanyUuidTaxRequirementsStateRequest$inboundSchema,
};

export const tool$taxRequirementsGet: ToolDefinition<typeof args> = {
  name: "tax-requirements_get",
  description: `Get State Tax Requirements

Get all tax requirements for a given state.

### Metadata Examples

\`\`\`json select
{
  "type": "select",
  "options": [
    { "label": "Semiweekly",  value: "Semi-weekly" },
    { "label": "Monthly",  value: "Monthly" },
    { "label": "Quarterly",  value: "Quarterly" },
  ]
}
\`\`\`
\`\`\`json radio
{
  "type": "radio",
  "options": [
    { "label": "No, we cannot reimburse",  value: false, short_label: "Not Reimbursable" },
    { "label": "Yes, we can reimburse",  value: true, short_label: "Reimbursable" },
  ]
}
\`\`\`
\`\`\`json account_number
{
  "type": "account_number",
  "mask": "######-##',
  "prefix": null
}
\`\`\`
\`\`\`json tax_rate
{
  "type": "tax_rate",
  "validation": {
    "type": "min_max",
    "min": "0.0004",
    "max": "0.081"
  }
}
\`\`\`

scope: \`company_tax_requirements:read\`
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await taxRequirementsGet(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
