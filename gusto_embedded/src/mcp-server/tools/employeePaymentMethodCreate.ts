/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { employeePaymentMethodCreate } from "../../funcs/employeePaymentMethodCreate.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations.PostV1EmployeesEmployeeIdBankAccountsRequest$inboundSchema,
};

export const tool$employeePaymentMethodCreate: ToolDefinition<typeof args> = {
  name: "employee-payment-method_create",
  description: `Create an employee bank account

Creates an employee bank account. An employee can have multiple
bank accounts. Note that creating an employee bank account will also update
the employee's payment method.

scope: \`employee_payment_methods:write\``,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await employeePaymentMethodCreate(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
