/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { employeeAddressesGet } from "../../funcs/employeeAddressesGet.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations.GetV1EmployeesEmployeeIdHomeAddressesRequest$inboundSchema,
};

export const tool$employeeAddressesGet: ToolDefinition<typeof args> = {
  name: "employee-addresses_get",
  description: `Get an employee's home addresses

The home address of an employee is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.

Supports home address effective dating and courtesy withholding.

scope: \`employees:read\``,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await employeeAddressesGet(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
