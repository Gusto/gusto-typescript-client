/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { paySchedulesGetUnprocessedTerminationPeriods } from "../../funcs/paySchedulesGetUnprocessedTerminationPeriods.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations
      .GetV1CompaniesCompanyIdUnprocessedTerminationPayPeriodsRequest$inboundSchema,
};

export const tool$paySchedulesGetUnprocessedTerminationPeriods: ToolDefinition<
  typeof args
> = {
  name: "pay-schedules_get-unprocessed-termination-periods",
  description: `Get termination pay periods for a company

When a payroll admin terminates an employee and selects "Dismissal Payroll" as the employee's final payroll, their last pay period will appear on the list.

This endpoint returns the unprocessed pay periods for past and future terminated employees in a given company.

scope: \`payrolls:read\``,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await paySchedulesGetUnprocessedTerminationPeriods(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
