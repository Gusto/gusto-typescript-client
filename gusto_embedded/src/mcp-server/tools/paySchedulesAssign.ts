/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { paySchedulesAssign } from "../../funcs/paySchedulesAssign.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations.PostV1CompaniesCompanyIdPaySchedulesAssignRequest$inboundSchema,
};

export const tool$paySchedulesAssign: ToolDefinition<typeof args> = {
  name: "pay-schedules_assign",
  description: `Assign pay schedules for a company

This endpoint assigns employees to pay schedules based on the schedule type.
For \`by_employee\` and \`by_department\` schedules, use the \`partial_assignment\` parameter to control the assignment scope. Set it to \`true\` for partial assignments (only some employees or departments at a time) and \`false\` for full assignments (all employees or departments at once).

scope: \`pay_schedules:write\``,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await paySchedulesAssign(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};
