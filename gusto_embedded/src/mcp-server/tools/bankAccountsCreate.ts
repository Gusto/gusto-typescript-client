/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { bankAccountsCreate } from "../../funcs/bankAccountsCreate.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PostV1CompaniesCompanyIdBankAccountsRequest$inboundSchema,
};

export const tool$bankAccountsCreate: ToolDefinition<typeof args> = {
  name: "bank-accounts_create",
  description: `Create a company bank account

This endpoint creates a new company bank account.

Upon being created, two verification deposits are automatically sent to the bank account, and the bank account's verification_status is 'awaiting_deposits'. 

When the deposits are successfully transferred, the verification_status changes to 'ready_for_verification', at which point the verify endpoint can be used to verify the bank account.
After successful verification, the bank account's verification_status is 'verified'.

scope: \`company_bank_accounts:write\`

> ðŸš§ Warning
>
> If a default bank account exists, it will be disabled and the new bank account will replace it as the company's default funding method.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await bankAccountsCreate(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
