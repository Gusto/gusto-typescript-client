/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { payrollsDelete } from "../../funcs/payrollsDelete.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.DeleteV1CompaniesCompanyIdPayrollsRequest$inboundSchema,
};

export const tool$payrollsDelete: ToolDefinition<typeof args> = {
  name: "payrolls_delete",
  description: `Delete a payroll

This endpoint allows you to delete an **unprocessed** payroll.

By default the payroll and associated data is deleted synchronously. To request an asynchronous delete, use the \`async=true\` query parameter. In both cases validation of ability to delete will be performed and an Unprocessable Entity error will be returned if the payroll is not able to be deleted. A successful synchronous delete will return \`204/No Content\`. When a payroll has been enqueued for asynchronous deletion, \`202/Accepted\` will be returned.

scope: \`payrolls:run\``,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await payrollsDelete(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};
