/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { bankAccountsCreateFromPlaidToken } from "../../funcs/bankAccountsCreateFromPlaidToken.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PostV1PlaidProcessorTokenRequest$inboundSchema,
};

export const tool$bankAccountsCreateFromPlaidToken: ToolDefinition<
  typeof args
> = {
  name: "bank-accounts_create-from-plaid-token",
  description: `Create a bank account from a plaid processor token

This endpoint creates a new **verified** bank account by using a plaid processor token to retrieve its information.

scope: \`plaid_processor:write\`

> ðŸ“˜
> To create a token please use the [plaid api](https://plaid.com/docs/api/processors/#processortokencreate) and select "gusto" as processor.

> ðŸš§ Warning - Company Bank Accounts
>
> If a default company bank account exists, it will be disabled and the new bank account will replace it as the company's default funding method.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await bankAccountsCreateFromPlaidToken(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
