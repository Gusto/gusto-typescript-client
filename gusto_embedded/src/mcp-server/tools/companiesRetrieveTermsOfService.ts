/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { companiesRetrieveTermsOfService } from "../../funcs/companiesRetrieveTermsOfService.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations
      .PostPartnerManagedCompaniesCompanyUuidRetrieveTermsOfServiceRequest$inboundSchema,
};

export const tool$companiesRetrieveTermsOfService: ToolDefinition<typeof args> =
  {
    name: "companies_retrieve-terms-of-service",
    description: `Retrieve terms of service status for a company user

Retrieve the user acceptance status of the Gusto Embedded Payroll's [Terms of Service](https://flows.gusto.com/terms).

scope: \`terms_of_services:read\``,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await companiesRetrieveTermsOfService(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
