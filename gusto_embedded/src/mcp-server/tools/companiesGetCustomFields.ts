/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { companiesGetCustomFields } from "../../funcs/companiesGetCustomFields.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetV1CompaniesCompanyIdCustomFieldsRequest$inboundSchema,
};

export const tool$companiesGetCustomFields: ToolDefinition<typeof args> = {
  name: "companies_get-custom-fields",
  description: `Get the custom fields of a company

Returns a list of the custom fields of the company. Useful when you need to know the schema of custom fields for an entire company

scope: \`companies:read\``,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await companiesGetCustomFields(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
