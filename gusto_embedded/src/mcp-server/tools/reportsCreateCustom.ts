/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { reportsCreateCustom } from "../../funcs/reportsCreateCustom.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PostCompaniesCompanyUuidReportsRequest$inboundSchema,
};

export const tool$reportsCreateCustom: ToolDefinition<typeof args> = {
  name: "reports_create-custom",
  description: `Create a custom report

Create a custom report for a company. This endpoint initiates creating a custom report with custom columns, groupings, and filters. The \`request_uuid\` in the response can then be used to poll for the status and report URL upon completion using the report GET endpoint.

scope: \`company_reports:write\``,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await reportsCreateCustom(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
