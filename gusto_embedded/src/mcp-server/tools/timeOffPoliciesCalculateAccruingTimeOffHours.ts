/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { timeOffPoliciesCalculateAccruingTimeOffHours } from "../../funcs/timeOffPoliciesCalculateAccruingTimeOffHours.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations
      .PostV1PayrollsPayrollIdCalculateAccruingTimeOffHoursRequest$inboundSchema,
};

export const tool$timeOffPoliciesCalculateAccruingTimeOffHours: ToolDefinition<
  typeof args
> = {
  name: "time-off-policies_calculate-accruing-time-off-hours",
  description: `Calculate accruing time off hours

Returns a list of accruing time off for each time off policy associated with the employee.

Factors affecting the accrued hours:
  * the time off policy accrual method (whether they get pay per hour worked, per hour paid, with / without overtime, accumulate time off based on pay period / calendar year / anniversary)
  * how many hours of work during this pay period
  * how many hours of PTO / sick hours taken during this pay period (for per hour paid policies only)
  * company pay schedule frequency (for per pay period)

If none of the parameters is passed in, the accrued time off hour will be 0.

scope: \`payrolls:read\``,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await timeOffPoliciesCalculateAccruingTimeOffHours(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
