/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { contractorsUpdate } from "../../funcs/contractorsUpdate.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PutV1ContractorsContractorUuidRequest$inboundSchema,
};

export const tool$contractorsUpdate: ToolDefinition<typeof args> = {
  name: "contractors_update",
  description: `Update a contractor

Update a contractor.

scope: \`contractors:write\`

> ðŸš§ Warning
>
> Watch out when changing a contractor's type (when the contractor is finished onboarding). Specifically, changing contractor type can be dangerous since Gusto wonâ€™t recognize and file two separate 1099s if they simply change from business to individual`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await contractorsUpdate(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
