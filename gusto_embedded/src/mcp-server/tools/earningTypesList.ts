/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { earningTypesList } from "../../funcs/earningTypesList.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetV1CompaniesCompanyIdEarningTypesRequest$inboundSchema,
};

export const tool$earningTypesList: ToolDefinition<typeof args> = {
  name: "earning-types_list",
  description: `Get all earning types for a company

A payroll item in Gusto is associated to an earning type to name the type of earning described by the payroll item.

#### Default Earning Type
Certain earning types are special because they have tax considerations. Those earning types are mostly the same for every company depending on its legal structure (LLC, Corporation, etc.)

#### Custom Earning Type
Custom earning types are all the other earning types added specifically for a company.

scope: \`payrolls:read\``,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await earningTypesList(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
