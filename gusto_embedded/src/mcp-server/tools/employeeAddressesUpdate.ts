/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { employeeAddressesUpdate } from "../../funcs/employeeAddressesUpdate.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PutV1HomeAddressesHomeAddressUuidRequest$inboundSchema,
};

export const tool$employeeAddressesUpdate: ToolDefinition<typeof args> = {
  name: "employee-addresses_update",
  description: `Update an employee's home address

The home address of an employee is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.

Supports home address effective dating and courtesy withholding.

scope: \`employees:write\``,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await employeeAddressesUpdate(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
