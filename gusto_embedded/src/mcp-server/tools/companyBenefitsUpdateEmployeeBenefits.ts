/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { companyBenefitsUpdateEmployeeBenefits } from "../../funcs/companyBenefitsUpdateEmployeeBenefits.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations
      .PutV1CompanyBenefitsCompanyBenefitIdEmployeeBenefitsRequest$inboundSchema,
};

export const tool$companyBenefitsUpdateEmployeeBenefits: ToolDefinition<
  typeof args
> = {
  name: "company-benefits_update-employee-benefits",
  description: `Bulk update employee benefits for a company benefit

Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employeeâ€™s enrollment.

Create or update(if the employee is already enrolled in the company benefit previously) an employee benefit for the company benefit.

Benefits containing PHI are only visible to applications with the \`employee_benefits:read:phi\` scope.

scope: \`employee_benefits:write\``,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await companyBenefitsUpdateEmployeeBenefits(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
