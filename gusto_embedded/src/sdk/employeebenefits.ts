/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { employeeBenefitsCreate } from "../funcs/employeeBenefitsCreate.js";
import { employeeBenefitsCreateYtdBenefitAmountsFromDifferentCompany } from "../funcs/employeeBenefitsCreateYtdBenefitAmountsFromDifferentCompany.js";
import { employeeBenefitsDelete } from "../funcs/employeeBenefitsDelete.js";
import { employeeBenefitsGet } from "../funcs/employeeBenefitsGet.js";
import { employeeBenefitsGetYtdBenefitAmountsFromDifferentCompany } from "../funcs/employeeBenefitsGetYtdBenefitAmountsFromDifferentCompany.js";
import { employeeBenefitsRetrieve } from "../funcs/employeeBenefitsRetrieve.js";
import { employeeBenefitsUpdate } from "../funcs/employeeBenefitsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import {
  DeleteV1EmployeeBenefitsEmployeeBenefitIdRequest,
  DeleteV1EmployeeBenefitsEmployeeBenefitIdResponse,
} from "../models/operations/deletev1employeebenefitsemployeebenefitid.js";
import {
  GetEmployeeYtdBenefitAmountsFromDifferentCompanyRequest,
  GetEmployeeYtdBenefitAmountsFromDifferentCompanyResponse,
} from "../models/operations/getemployeeytdbenefitamountsfromdifferentcompany.js";
import {
  GetV1EmployeeBenefitsEmployeeBenefitIdRequest,
  GetV1EmployeeBenefitsEmployeeBenefitIdResponse,
} from "../models/operations/getv1employeebenefitsemployeebenefitid.js";
import {
  GetV1EmployeesEmployeeIdEmployeeBenefitsRequest,
  GetV1EmployeesEmployeeIdEmployeeBenefitsResponse,
} from "../models/operations/getv1employeesemployeeidemployeebenefits.js";
import {
  PostEmployeeYtdBenefitAmountsFromDifferentCompanyRequest,
  PostEmployeeYtdBenefitAmountsFromDifferentCompanyResponse,
} from "../models/operations/postemployeeytdbenefitamountsfromdifferentcompany.js";
import {
  PostV1EmployeesEmployeeIdEmployeeBenefitsRequest,
  PostV1EmployeesEmployeeIdEmployeeBenefitsResponse,
} from "../models/operations/postv1employeesemployeeidemployeebenefits.js";
import {
  PutV1EmployeeBenefitsEmployeeBenefitIdRequest,
  PutV1EmployeeBenefitsEmployeeBenefitIdResponse,
} from "../models/operations/putv1employeebenefitsemployeebenefitid.js";
import { unwrapAsync } from "../types/fp.js";

export class EmployeeBenefits extends ClientSDK {
  /**
   * Create an employee benefit
   *
   * @remarks
   * Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee’s enrollment.
   *
   * scope: `employee_benefits:write`
   */
  async create(
    request: PostV1EmployeesEmployeeIdEmployeeBenefitsRequest,
    options?: RequestOptions,
  ): Promise<PostV1EmployeesEmployeeIdEmployeeBenefitsResponse> {
    return unwrapAsync(employeeBenefitsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get all benefits for an employee
   *
   * @remarks
   * Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee’s enrollment.
   *
   * Returns an array of all employee benefits for this employee
   *
   * Benefits containing PHI are only visible to applications with the `employee_benefits:read:phi` scope.
   *
   * scope: `employee_benefits:read`
   */
  async get(
    request: GetV1EmployeesEmployeeIdEmployeeBenefitsRequest,
    options?: RequestOptions,
  ): Promise<GetV1EmployeesEmployeeIdEmployeeBenefitsResponse> {
    return unwrapAsync(employeeBenefitsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Get an employee benefit
   *
   * @remarks
   * Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee’s enrollment.
   *
   * Benefits containing PHI are only visible to applications with the `employee_benefits:read:phi` scope.
   *
   * scope: `employee_benefits:read`
   */
  async retrieve(
    request: GetV1EmployeeBenefitsEmployeeBenefitIdRequest,
    options?: RequestOptions,
  ): Promise<GetV1EmployeeBenefitsEmployeeBenefitIdResponse> {
    return unwrapAsync(employeeBenefitsRetrieve(
      this,
      request,
      options,
    ));
  }

  /**
   * Update an employee benefit
   *
   * @remarks
   * Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee’s enrollment.
   *
   * scope: `employee_benefits:write`
   */
  async update(
    request: PutV1EmployeeBenefitsEmployeeBenefitIdRequest,
    options?: RequestOptions,
  ): Promise<PutV1EmployeeBenefitsEmployeeBenefitIdResponse> {
    return unwrapAsync(employeeBenefitsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete an employee benefit
   *
   * @remarks
   * Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee’s enrollment.
   *
   * scope: `employee_benefits:write`
   */
  async delete(
    request: DeleteV1EmployeeBenefitsEmployeeBenefitIdRequest,
    options?: RequestOptions,
  ): Promise<DeleteV1EmployeeBenefitsEmployeeBenefitIdResponse> {
    return unwrapAsync(employeeBenefitsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Get year-to-date benefit amounts from a different company
   *
   * @remarks
   * Retrieves year-to-date benefit amounts that were contributed at a different company for the specified employee.
   * Returns benefit amounts for the requested tax year (defaults to current year if not specified).
   *
   * This endpoint only supports retrieving outside contributions for 401(k) benefits.
   *
   * scope: `employee_benefits:read`
   */
  async getYtdBenefitAmountsFromDifferentCompany(
    request: GetEmployeeYtdBenefitAmountsFromDifferentCompanyRequest,
    options?: RequestOptions,
  ): Promise<GetEmployeeYtdBenefitAmountsFromDifferentCompanyResponse> {
    return unwrapAsync(employeeBenefitsGetYtdBenefitAmountsFromDifferentCompany(
      this,
      request,
      options,
    ));
  }

  /**
   * Create year-to-date benefit amounts from a different company
   *
   * @remarks
   * Year-to-date benefit amounts from a different company represents the amount of money added to an employee's plan during a current year, made outside of the current contribution when they were employed at a different company.
   *
   * This endpoint only supports passing outside contributions for 401(k) benefits.
   *
   * scope: `employee_benefits:write`
   */
  async createYtdBenefitAmountsFromDifferentCompany(
    request: PostEmployeeYtdBenefitAmountsFromDifferentCompanyRequest,
    options?: RequestOptions,
  ): Promise<PostEmployeeYtdBenefitAmountsFromDifferentCompanyResponse> {
    return unwrapAsync(
      employeeBenefitsCreateYtdBenefitAmountsFromDifferentCompany(
        this,
        request,
        options,
      ),
    );
  }
}
