/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { paymentConfigsGet } from "../funcs/paymentConfigsGet.js";
import { paymentConfigsUpdate } from "../funcs/paymentConfigsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class PaymentConfigs extends ClientSDK {
  /**
   * Get a company's payment configs
   *
   * @remarks
   * Get payment speed for the company and fast payment limit (1-day is only applicable to partners that opt in).
   *
   * scope: `company_payment_configs:read`
   */
  async get(
    request: operations.GetV1CompanyPaymentConfigsRequest,
    options?: RequestOptions,
  ): Promise<components.PaymentConfigs> {
    return unwrapAsync(paymentConfigsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a company's payment configs
   *
   * @remarks
   * Update payment speed and fast payment limit for a company. At least one of `payment_speed` or `fast_payment_limit` parameters is required. 1-day option is only applicable to partners that opt in.
   *
   * scope: `company_payment_configs:write`
   */
  async update(
    request: operations.PutV1CompanyPaymentConfigsRequest,
    options?: RequestOptions,
  ): Promise<components.PaymentConfigs> {
    return unwrapAsync(paymentConfigsUpdate(
      this,
      request,
      options,
    ));
  }
}
