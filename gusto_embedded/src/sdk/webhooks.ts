/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { webhooksCreateSubscription } from "../funcs/webhooksCreateSubscription.js";
import { webhooksDelete } from "../funcs/webhooksDelete.js";
import { webhooksGet } from "../funcs/webhooksGet.js";
import { webhooksListSubscriptions } from "../funcs/webhooksListSubscriptions.js";
import { webhooksRequestVerificationToken } from "../funcs/webhooksRequestVerificationToken.js";
import { webhooksUpdateSubscription } from "../funcs/webhooksUpdateSubscription.js";
import { webhooksVerifySubscription } from "../funcs/webhooksVerifySubscription.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Webhooks extends ClientSDK {
  /**
   * Create a webhook subscription
   *
   * @remarks
   * Create a webhook subscription to receive events of the specified subscription_types whenever there is a state change.
   *
   * > ðŸ“˜ System Access Authentication
   * >
   * > This endpoint uses the [Bearer Auth scheme with the system-level access token in the HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/system-access).
   *
   * scope: `webhook_subscriptions:write`
   */
  async createSubscription(
    security: operations.PostV1WebhookSubscriptionSecurity,
    request: operations.PostV1WebhookSubscriptionRequest,
    options?: RequestOptions,
  ): Promise<components.WebhookSubscription> {
    return unwrapAsync(webhooksCreateSubscription(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * List webhook subscriptions
   *
   * @remarks
   * Returns all webhook subscriptions associated with the provided Partner API token.
   *
   * > ðŸ“˜ System Access Authentication
   * >
   * > This endpoint uses the [Bearer Auth scheme with the system-level access token in the HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/system-access).
   *
   * scope: `webhook_subscriptions:read`
   */
  async listSubscriptions(
    security: operations.GetV1WebhookSubscriptionsSecurity,
    request: operations.GetV1WebhookSubscriptionsRequest,
    options?: RequestOptions,
  ): Promise<Array<components.WebhookSubscription>> {
    return unwrapAsync(webhooksListSubscriptions(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Update a webhook subscription
   *
   * @remarks
   * Updates the Webhook Subscription associated with the provided UUID.
   *
   * > ðŸ“˜ System Access Authentication
   * >
   * > This endpoint uses the [Bearer Auth scheme with the system-level access token in the HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/system-access).
   *
   * scope: `webhook_subscriptions:write`
   */
  async updateSubscription(
    security: operations.PutV1WebhookSubscriptionUuidSecurity,
    request: operations.PutV1WebhookSubscriptionUuidRequest,
    options?: RequestOptions,
  ): Promise<components.WebhookSubscription> {
    return unwrapAsync(webhooksUpdateSubscription(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Get a webhook subscription
   *
   * @remarks
   * Returns the Webhook Subscription associated with the provided UUID.
   *
   * > ðŸ“˜ System Access Authentication
   * >
   * > This endpoint uses the [Bearer Auth scheme with the system-level access token in the HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/system-access).
   *
   * scope: `webhook_subscriptions:read`
   */
  async get(
    security: operations.GetV1WebhookSubscriptionUuidSecurity,
    request: operations.GetV1WebhookSubscriptionUuidRequest,
    options?: RequestOptions,
  ): Promise<components.WebhookSubscription> {
    return unwrapAsync(webhooksGet(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Delete a webhook subscription
   *
   * @remarks
   * Deletes the Webhook Subscription associated with the provided UUID.
   *
   * > ðŸ“˜ System Access Authentication
   * >
   * > This endpoint uses the [Bearer Auth scheme with the system-level access token in the HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/system-access).
   *
   * scope: `webhook_subscriptions:write`
   */
  async delete(
    security: operations.DeleteV1WebhookSubscriptionUuidSecurity,
    request: operations.DeleteV1WebhookSubscriptionUuidRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(webhooksDelete(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Verify the webhook subscription
   *
   * @remarks
   * When a webhook subscription is created, a `verification_token` is POSTed to the registered webhook subscription URL. This `verify` endpoint needs to be called with `verification_token` before webhook events can be sent to the registered webhook URL.
   *
   * Use the /v1/webhook_subscriptions/{webhook_subscription_uuid}/request_verification_token API to resend the `verification_token` to the Subscriber.
   *
   * > ðŸ“˜ System Access Authentication
   * >
   * > This endpoint uses the [Bearer Auth scheme with the system-level access token in the HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/system-access).
   *
   * scope: `webhook_subscriptions:write`
   */
  async verifySubscription(
    security: operations.PutV1VerifyWebhookSubscriptionUuidSecurity,
    request: operations.PutV1VerifyWebhookSubscriptionUuidRequest,
    options?: RequestOptions,
  ): Promise<components.WebhookSubscription> {
    return unwrapAsync(webhooksVerifySubscription(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Request the webhook subscription verification_token
   *
   * @remarks
   * Request that the webhook subscription `verification_token` be POSTed to the Subscription URL.
   *
   * > ðŸ“˜ System Access Authentication
   * >
   * > This endpoint uses the [Bearer Auth scheme with the system-level access token in the HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/system-access).
   *
   * scope: `webhook_subscriptions:read`
   */
  async requestVerificationToken(
    security: operations.GetV1WebhookSubscriptionVerificationTokenUuidSecurity,
    request: operations.GetV1WebhookSubscriptionVerificationTokenUuidRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(webhooksRequestVerificationToken(
      this,
      security,
      request,
      options,
    ));
  }
}
