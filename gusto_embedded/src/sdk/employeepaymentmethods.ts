/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { employeePaymentMethodsDelete } from "../funcs/employeePaymentMethodsDelete.js";
import { employeePaymentMethodsUpdate } from "../funcs/employeePaymentMethodsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class EmployeePaymentMethods extends ClientSDK {
  /**
   * Delete an employee bank account
   *
   * @remarks
   * Deletes an employee bank account. To update an employee's bank
   * account details, delete the bank account first and create a new one.
   *
   * scope: `employee_payment_methods:write`
   */
  async delete(
    request:
      operations.DeleteV1EmployeesEmployeeIdBankAccountsBankAccountIdRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(employeePaymentMethodsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Update an employee's payment method
   *
   * @remarks
   * Updates an employee's payment method. Note that creating an employee
   * bank account will also update the employee's payment method.
   *
   * scope: `employee_payment_methods:write`
   */
  async update(
    request: operations.PutV1EmployeesEmployeeIdPaymentMethodRequest,
    options?: RequestOptions,
  ): Promise<components.EmployeePaymentMethod> {
    return unwrapAsync(employeePaymentMethodsUpdate(
      this,
      request,
      options,
    ));
  }
}
