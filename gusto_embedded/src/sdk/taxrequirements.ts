/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { taxRequirementsGet } from "../funcs/taxRequirementsGet.js";
import { taxRequirementsGetAll } from "../funcs/taxRequirementsGetAll.js";
import { taxRequirementsUpdateState } from "../funcs/taxRequirementsUpdateState.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class TaxRequirements extends ClientSDK {
  /**
   * Get State Tax Requirements
   *
   * @remarks
   * Get all tax requirements for a given state.
   *
   * ### Metadata Examples
   *
   * ```json select
   * {
   *   "type": "select",
   *   "options": [
   *     { "label": "Semiweekly",  value: "Semi-weekly" },
   *     { "label": "Monthly",  value: "Monthly" },
   *     { "label": "Quarterly",  value: "Quarterly" },
   *   ]
   * }
   * ```
   * ```json radio
   * {
   *   "type": "radio",
   *   "options": [
   *     { "label": "No, we cannot reimburse",  value: false, short_label: "Not Reimbursable" },
   *     { "label": "Yes, we can reimburse",  value: true, short_label: "Reimbursable" },
   *   ]
   * }
   * ```
   * ```json account_number
   * {
   *   "type": "account_number",
   *   "mask": "######-##',
   *   "prefix": null
   * }
   * ```
   * ```json tax_rate
   * {
   *   "type": "tax_rate",
   *   "validation": {
   *     "type": "min_max",
   *     "min": "0.0004",
   *     "max": "0.081"
   *   }
   * }
   * ```
   *
   * scope: `company_tax_requirements:read`
   */
  async get(
    request: operations.GetV1CompaniesCompanyUuidTaxRequirementsStateRequest,
    options?: RequestOptions,
  ): Promise<operations.GetV1CompaniesCompanyUuidTaxRequirementsStateResponse> {
    return unwrapAsync(taxRequirementsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update State Tax Requirements
   *
   * @remarks
   * Update State Tax Requirements
   *
   * scope: `company_tax_requirements:write`
   */
  async updateState(
    request: operations.PutV1CompaniesCompanyUuidTaxRequirementsStateRequest,
    options?: RequestOptions,
  ): Promise<operations.PutV1CompaniesCompanyUuidTaxRequirementsStateResponse> {
    return unwrapAsync(taxRequirementsUpdateState(
      this,
      request,
      options,
    ));
  }

  /**
   * Get All Tax Requirement States
   *
   * @remarks
   * Returns objects describing the states that have tax requirements for the company
   *
   * scope: `company_tax_requirements:read`
   */
  async getAll(
    request: operations.GetV1CompaniesCompanyUuidTaxRequirementsRequest,
    options?: RequestOptions,
  ): Promise<operations.GetV1CompaniesCompanyUuidTaxRequirementsResponse> {
    return unwrapAsync(taxRequirementsGetAll(
      this,
      request,
      options,
    ));
  }
}
