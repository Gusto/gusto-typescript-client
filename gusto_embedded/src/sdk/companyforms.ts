/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { companyFormsGet } from "../funcs/companyFormsGet.js";
import { companyFormsGetAll } from "../funcs/companyFormsGetAll.js";
import { companyFormsGetPdf } from "../funcs/companyFormsGetPdf.js";
import { companyFormsSign } from "../funcs/companyFormsSign.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import {
  GetV1CompanyFormRequest,
  GetV1CompanyFormResponse,
} from "../models/operations/getv1companyform.js";
import {
  GetV1CompanyFormPdfRequest,
  GetV1CompanyFormPdfResponse,
} from "../models/operations/getv1companyformpdf.js";
import {
  GetV1CompanyFormsRequest,
  GetV1CompanyFormsResponse,
} from "../models/operations/getv1companyforms.js";
import {
  PutV1CompanyFormSignRequest,
  PutV1CompanyFormSignResponse,
} from "../models/operations/putv1companyformsign.js";
import { unwrapAsync } from "../types/fp.js";

export class CompanyForms extends ClientSDK {
  /**
   * Get all company forms
   *
   * @remarks
   * Get a list of all company's forms
   *
   * scope: `company_forms:read`
   */
  async getAll(
    request: GetV1CompanyFormsRequest,
    options?: RequestOptions,
  ): Promise<GetV1CompanyFormsResponse> {
    return unwrapAsync(companyFormsGetAll(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a company form
   *
   * @remarks
   * Get a company form
   *
   * scope: `company_forms:read`
   */
  async get(
    request: GetV1CompanyFormRequest,
    options?: RequestOptions,
  ): Promise<GetV1CompanyFormResponse> {
    return unwrapAsync(companyFormsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a company form pdf
   *
   * @remarks
   * Get the link to the form PDF
   *
   * scope: `company_forms:read`
   */
  async getPdf(
    request: GetV1CompanyFormPdfRequest,
    options?: RequestOptions,
  ): Promise<GetV1CompanyFormPdfResponse> {
    return unwrapAsync(companyFormsGetPdf(
      this,
      request,
      options,
    ));
  }

  /**
   * Sign a company form
   *
   * @remarks
   * Sign a company form. Company forms must be signed by the company signatory.
   *
   * scope: `company_forms:sign`
   */
  async sign(
    request: PutV1CompanyFormSignRequest,
    options?: RequestOptions,
  ): Promise<PutV1CompanyFormSignResponse> {
    return unwrapAsync(companyFormsSign(
      this,
      request,
      options,
    ));
  }
}
