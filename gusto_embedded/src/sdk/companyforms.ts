/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { companyFormsGet } from "../funcs/companyFormsGet.js";
import { companyFormsGetAll } from "../funcs/companyFormsGetAll.js";
import { companyFormsGetPdf } from "../funcs/companyFormsGetPdf.js";
import { companyFormsSign } from "../funcs/companyFormsSign.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CompanyForms extends ClientSDK {
  /**
   * Get all company forms
   *
   * @remarks
   * Get a list of all company's forms
   *
   * scope: `company_forms:read`
   */
  async getAll(
    request: operations.GetV1CompanyFormsRequest,
    options?: RequestOptions,
  ): Promise<Array<components.Form>> {
    return unwrapAsync(companyFormsGetAll(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a company form
   *
   * @remarks
   * Get a company form
   *
   * scope: `company_forms:read`
   */
  async get(
    request: operations.GetV1CompanyFormRequest,
    options?: RequestOptions,
  ): Promise<components.Form> {
    return unwrapAsync(companyFormsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a company form pdf
   *
   * @remarks
   * Get the link to the form PDF
   *
   * scope: `company_forms:read`
   */
  async getPdf(
    request: operations.GetV1CompanyFormPdfRequest,
    options?: RequestOptions,
  ): Promise<components.FormPdf> {
    return unwrapAsync(companyFormsGetPdf(
      this,
      request,
      options,
    ));
  }

  /**
   * Sign a company form
   *
   * @remarks
   * Sign a company form. Company forms must be signed by the company signatory.
   *
   * scope: `company_forms:sign`
   */
  async sign(
    request: operations.PutV1CompanyFormSignRequest,
    options?: RequestOptions,
  ): Promise<components.Form> {
    return unwrapAsync(companyFormsSign(
      this,
      request,
      options,
    ));
  }
}
