/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  MutationKey,
  useMutation,
  UseMutationResult,
} from "@tanstack/react-query";
import { GustoEmbeddedCore } from "../core.js";
import { employeesUpdateOnboardingDocumentsConfig } from "../funcs/employeesUpdateOnboardingDocumentsConfig.js";
import { combineSignals } from "../lib/primitives.js";
import { RequestOptions } from "../lib/sdks.js";
import {
  PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest,
  PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse,
} from "../models/operations/putv1employeesemployeeidonboardingdocumentsconfig.js";
import { unwrapAsync } from "../types/fp.js";
import { useGustoEmbeddedContext } from "./_context.js";
import { MutationHookOptions } from "./_types.js";

export type EmployeesUpdateOnboardingDocumentsConfigMutationVariables = {
  request: PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest;
  options?: RequestOptions;
};

export type EmployeesUpdateOnboardingDocumentsConfigMutationData =
  PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse;

/**
 * Update an employee's onboarding documents config
 *
 * @remarks
 * Indicate whether to include the Form I-9 for an employee during the onboarding process.
 *
 * scope: `employees:manage`
 */
export function useEmployeesUpdateOnboardingDocumentsConfigMutation(
  options?: MutationHookOptions<
    EmployeesUpdateOnboardingDocumentsConfigMutationData,
    Error,
    EmployeesUpdateOnboardingDocumentsConfigMutationVariables
  >,
): UseMutationResult<
  EmployeesUpdateOnboardingDocumentsConfigMutationData,
  Error,
  EmployeesUpdateOnboardingDocumentsConfigMutationVariables
> {
  const client = useGustoEmbeddedContext();
  return useMutation({
    ...buildEmployeesUpdateOnboardingDocumentsConfigMutation(client, options),
    ...options,
  });
}

export function mutationKeyEmployeesUpdateOnboardingDocumentsConfig(): MutationKey {
  return [
    "@gusto/embedded-api",
    "Employees",
    "updateOnboardingDocumentsConfig",
  ];
}

export function buildEmployeesUpdateOnboardingDocumentsConfigMutation(
  client$: GustoEmbeddedCore,
  hookOptions?: RequestOptions,
): {
  mutationKey: MutationKey;
  mutationFn: (
    variables: EmployeesUpdateOnboardingDocumentsConfigMutationVariables,
  ) => Promise<EmployeesUpdateOnboardingDocumentsConfigMutationData>;
} {
  return {
    mutationKey: mutationKeyEmployeesUpdateOnboardingDocumentsConfig(),
    mutationFn: function employeesUpdateOnboardingDocumentsConfigMutationFn({
      request,
      options,
    }): Promise<EmployeesUpdateOnboardingDocumentsConfigMutationData> {
      const mergedOptions = {
        ...hookOptions,
        ...options,
        fetchOptions: {
          ...hookOptions?.fetchOptions,
          ...options?.fetchOptions,
          signal: combineSignals(
            hookOptions?.fetchOptions?.signal,
            options?.fetchOptions?.signal,
          ),
        },
      };
      return unwrapAsync(employeesUpdateOnboardingDocumentsConfig(
        client$,
        request,
        mergedOptions,
      ));
    },
  };
}
