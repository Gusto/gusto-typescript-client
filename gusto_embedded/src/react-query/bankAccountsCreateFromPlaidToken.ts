/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  MutationKey,
  useMutation,
  UseMutationResult,
} from "@tanstack/react-query";
import { GustoEmbeddedCore } from "../core.js";
import { bankAccountsCreateFromPlaidToken } from "../funcs/bankAccountsCreateFromPlaidToken.js";
import { combineSignals } from "../lib/primitives.js";
import { RequestOptions } from "../lib/sdks.js";
import {
  PostV1PlaidProcessorTokenRequest,
  PostV1PlaidProcessorTokenResponse,
} from "../models/operations/postv1plaidprocessortoken.js";
import { unwrapAsync } from "../types/fp.js";
import { useGustoEmbeddedContext } from "./_context.js";
import { MutationHookOptions } from "./_types.js";

export type BankAccountsCreateFromPlaidTokenMutationVariables = {
  request: PostV1PlaidProcessorTokenRequest;
  options?: RequestOptions;
};

export type BankAccountsCreateFromPlaidTokenMutationData =
  PostV1PlaidProcessorTokenResponse;

/**
 * Create a bank account from a plaid processor token
 *
 * @remarks
 * This endpoint creates a new **verified** bank account by using a plaid processor token to retrieve its information.
 *
 * scope: `plaid_processor:write`
 *
 * > ðŸ“˜
 * > To create a token please use the [plaid api](https://plaid.com/docs/api/processors/#processortokencreate) and select "gusto" as processor.
 *
 * > ðŸš§ Warning - Company Bank Accounts
 * >
 * > If a default company bank account exists, it will be disabled and the new bank account will replace it as the company's default funding method.
 */
export function useBankAccountsCreateFromPlaidTokenMutation(
  options?: MutationHookOptions<
    BankAccountsCreateFromPlaidTokenMutationData,
    Error,
    BankAccountsCreateFromPlaidTokenMutationVariables
  >,
): UseMutationResult<
  BankAccountsCreateFromPlaidTokenMutationData,
  Error,
  BankAccountsCreateFromPlaidTokenMutationVariables
> {
  const client = useGustoEmbeddedContext();
  return useMutation({
    ...buildBankAccountsCreateFromPlaidTokenMutation(client, options),
    ...options,
  });
}

export function mutationKeyBankAccountsCreateFromPlaidToken(): MutationKey {
  return ["@gusto/embedded-api", "bankAccounts", "createFromPlaidToken"];
}

export function buildBankAccountsCreateFromPlaidTokenMutation(
  client$: GustoEmbeddedCore,
  hookOptions?: RequestOptions,
): {
  mutationKey: MutationKey;
  mutationFn: (
    variables: BankAccountsCreateFromPlaidTokenMutationVariables,
  ) => Promise<BankAccountsCreateFromPlaidTokenMutationData>;
} {
  return {
    mutationKey: mutationKeyBankAccountsCreateFromPlaidToken(),
    mutationFn: function bankAccountsCreateFromPlaidTokenMutationFn({
      request,
      options,
    }): Promise<BankAccountsCreateFromPlaidTokenMutationData> {
      const mergedOptions = {
        ...hookOptions,
        ...options,
        fetchOptions: {
          ...hookOptions?.fetchOptions,
          ...options?.fetchOptions,
          signal: combineSignals(
            hookOptions?.fetchOptions?.signal,
            options?.fetchOptions?.signal,
          ),
        },
      };
      return unwrapAsync(bankAccountsCreateFromPlaidToken(
        client$,
        request,
        mergedOptions,
      ));
    },
  };
}
