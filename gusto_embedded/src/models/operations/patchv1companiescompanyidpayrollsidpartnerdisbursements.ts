/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  HTTPMetadata,
  HTTPMetadata$inboundSchema,
  HTTPMetadata$Outbound,
  HTTPMetadata$outboundSchema,
} from "../components/httpmetadata.js";
import {
  PayrollPartnerDisbursements,
  PayrollPartnerDisbursements$inboundSchema,
  PayrollPartnerDisbursements$Outbound,
  PayrollPartnerDisbursements$outboundSchema,
} from "../components/payrollpartnerdisbursements.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion =
  {
    TwoThousandAndTwentyFourMinus04Minus01: "2024-04-01",
  } as const;
/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export type PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion =
  ClosedEnum<
    typeof PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion
  >;

/**
 * Payment method for the employee
 */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod =
  {
    DirectDeposit: "Direct Deposit",
    Check: "Check",
  } as const;
/**
 * Payment method for the employee
 */
export type PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod =
  ClosedEnum<
    typeof PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod
  >;

/**
 * Status of the payment disbursement
 */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus =
  {
    Pending: "Pending",
    Paid: "Paid",
    NotPartnerManaged: "Not partner managed",
    ConvertedToCheck: "Converted to check",
  } as const;
/**
 * Status of the payment disbursement
 */
export type PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus =
  ClosedEnum<
    typeof PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus
  >;

export type PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements =
  {
    /**
     * UUID of the employee
     */
    employeeUuid: string;
    /**
     * Payment method for the employee
     */
    paymentMethod?:
      | PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod
      | undefined;
    /**
     * Status of the payment disbursement
     */
    paymentStatus?:
      | PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus
      | undefined;
  };

export type PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody =
  {
    disbursements: Array<
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements
    >;
  };

export type PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest = {
  /**
   * The UUID of the company
   */
  companyId: string;
  /**
   * The UUID of the payroll
   */
  id: string;
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?:
    | PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion
    | undefined;
  requestBody?:
    | PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody
    | undefined;
};

export type PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse = {
  httpMeta: HTTPMetadata;
  /**
   * successful
   */
  payrollPartnerDisbursements?: PayrollPartnerDisbursements | undefined;
};

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion
  > = z.nativeEnum(
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion,
  );

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion
  > =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion$ {
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion$inboundSchema;
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion$outboundSchema;
}

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod
  > = z.nativeEnum(
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod,
  );

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod
  > =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod$ {
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod$inboundSchema;
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod$outboundSchema;
}

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus
  > = z.nativeEnum(
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus,
  );

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus
  > =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus$ {
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus$inboundSchema;
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus$outboundSchema;
}

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$inboundSchema:
  z.ZodType<
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements,
    z.ZodTypeDef,
    unknown
  > = z.object({
    employee_uuid: z.string(),
    payment_method:
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod$inboundSchema
        .optional(),
    payment_status:
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus$inboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      "employee_uuid": "employeeUuid",
      "payment_method": "paymentMethod",
      "payment_status": "paymentStatus",
    });
  });

/** @internal */
export type PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$Outbound =
  {
    employee_uuid: string;
    payment_method?: string | undefined;
    payment_status?: string | undefined;
  };

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$outboundSchema:
  z.ZodType<
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$Outbound,
    z.ZodTypeDef,
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements
  > = z.object({
    employeeUuid: z.string(),
    paymentMethod:
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod$outboundSchema
        .optional(),
    paymentStatus:
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus$outboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      employeeUuid: "employee_uuid",
      paymentMethod: "payment_method",
      paymentStatus: "payment_status",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$ {
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$inboundSchema;
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$outboundSchema;
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$Outbound` instead. */
  export type Outbound =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$Outbound;
}

export function patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursementsToJSON(
  patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements:
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements,
): string {
  return JSON.stringify(
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$outboundSchema
      .parse(
        patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements,
      ),
  );
}

export function patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursementsFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements' from JSON`,
  );
}

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$inboundSchema:
  z.ZodType<
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    disbursements: z.array(
      z.lazy(() =>
        PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$inboundSchema
      ),
    ),
  });

/** @internal */
export type PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$Outbound =
  {
    disbursements: Array<
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$Outbound
    >;
  };

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$outboundSchema:
  z.ZodType<
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$Outbound,
    z.ZodTypeDef,
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody
  > = z.object({
    disbursements: z.array(
      z.lazy(() =>
        PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements$outboundSchema
      ),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$ {
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$inboundSchema;
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$outboundSchema;
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$Outbound` instead. */
  export type Outbound =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$Outbound;
}

export function patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBodyToJSON(
  patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody:
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody,
): string {
  return JSON.stringify(
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$outboundSchema
      .parse(
        patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody,
      ),
  );
}

export function patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody' from JSON`,
  );
}

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$inboundSchema:
  z.ZodType<
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    company_id: z.string(),
    id: z.string(),
    "X-Gusto-API-Version":
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion$inboundSchema
        .default("2024-04-01"),
    RequestBody: z.lazy(() =>
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "company_id": "companyId",
      "X-Gusto-API-Version": "xGustoAPIVersion",
      "RequestBody": "requestBody",
    });
  });

/** @internal */
export type PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$Outbound =
  {
    company_id: string;
    id: string;
    "X-Gusto-API-Version": string;
    RequestBody?:
      | PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$Outbound
      | undefined;
  };

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$outboundSchema:
  z.ZodType<
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$Outbound,
    z.ZodTypeDef,
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest
  > = z.object({
    companyId: z.string(),
    id: z.string(),
    xGustoAPIVersion:
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsHeaderXGustoAPIVersion$outboundSchema
        .default("2024-04-01"),
    requestBody: z.lazy(() =>
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestBody$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      companyId: "company_id",
      xGustoAPIVersion: "X-Gusto-API-Version",
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$ {
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$inboundSchema;
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$outboundSchema;
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$Outbound` instead. */
  export type Outbound =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$Outbound;
}

export function patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestToJSON(
  patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest:
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest,
): string {
  return JSON.stringify(
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$outboundSchema
      .parse(patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest),
  );
}

export function patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsRequest' from JSON`,
  );
}

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$inboundSchema:
  z.ZodType<
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: HTTPMetadata$inboundSchema,
    "Payroll-Partner-Disbursements": PayrollPartnerDisbursements$inboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "Payroll-Partner-Disbursements": "payrollPartnerDisbursements",
    });
  });

/** @internal */
export type PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$Outbound =
  {
    HttpMeta: HTTPMetadata$Outbound;
    "Payroll-Partner-Disbursements"?:
      | PayrollPartnerDisbursements$Outbound
      | undefined;
  };

/** @internal */
export const PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$outboundSchema:
  z.ZodType<
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$Outbound,
    z.ZodTypeDef,
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse
  > = z.object({
    httpMeta: HTTPMetadata$outboundSchema,
    payrollPartnerDisbursements: PayrollPartnerDisbursements$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      payrollPartnerDisbursements: "Payroll-Partner-Disbursements",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$ {
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$inboundSchema` instead. */
  export const inboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$inboundSchema;
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$outboundSchema` instead. */
  export const outboundSchema =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$outboundSchema;
  /** @deprecated use `PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$Outbound` instead. */
  export type Outbound =
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$Outbound;
}

export function patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponseToJSON(
  patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse:
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse,
): string {
  return JSON.stringify(
    PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$outboundSchema
      .parse(patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse),
  );
}

export function patchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsResponse' from JSON`,
  );
}
