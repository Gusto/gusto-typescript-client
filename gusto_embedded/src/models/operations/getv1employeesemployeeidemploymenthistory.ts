/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  EmploymentHistoryList,
  EmploymentHistoryList$inboundSchema,
  EmploymentHistoryList$Outbound,
  EmploymentHistoryList$outboundSchema,
} from "../components/employmenthistorylist.js";
import {
  HTTPMetadata,
  HTTPMetadata$inboundSchema,
  HTTPMetadata$Outbound,
  HTTPMetadata$outboundSchema,
} from "../components/httpmetadata.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export const GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion = {
  TwoThousandAndTwentyFourMinus04Minus01: "2024-04-01",
} as const;
/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export type GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion =
  ClosedEnum<
    typeof GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion
  >;

export type GetV1EmployeesEmployeeIdEmploymentHistoryRequest = {
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?:
    | GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion
    | undefined;
  /**
   * The UUID of the employee
   */
  employeeId: string;
};

export type GetV1EmployeesEmployeeIdEmploymentHistoryResponse = {
  httpMeta: HTTPMetadata;
  /**
   * successful
   */
  employmentHistoryList?: Array<EmploymentHistoryList> | undefined;
};

/** @internal */
export const GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion
  > = z.nativeEnum(
    GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion,
  );

/** @internal */
export const GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion
  > =
    GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion$ {
  /** @deprecated use `GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion$inboundSchema` instead. */
  export const inboundSchema =
    GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion$inboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion$outboundSchema` instead. */
  export const outboundSchema =
    GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion$outboundSchema;
}

/** @internal */
export const GetV1EmployeesEmployeeIdEmploymentHistoryRequest$inboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdEmploymentHistoryRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "X-Gusto-API-Version":
      GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion$inboundSchema
        .default("2024-04-01"),
    employee_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "X-Gusto-API-Version": "xGustoAPIVersion",
      "employee_id": "employeeId",
    });
  });

/** @internal */
export type GetV1EmployeesEmployeeIdEmploymentHistoryRequest$Outbound = {
  "X-Gusto-API-Version": string;
  employee_id: string;
};

/** @internal */
export const GetV1EmployeesEmployeeIdEmploymentHistoryRequest$outboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdEmploymentHistoryRequest$Outbound,
    z.ZodTypeDef,
    GetV1EmployeesEmployeeIdEmploymentHistoryRequest
  > = z.object({
    xGustoAPIVersion:
      GetV1EmployeesEmployeeIdEmploymentHistoryHeaderXGustoAPIVersion$outboundSchema
        .default("2024-04-01"),
    employeeId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      xGustoAPIVersion: "X-Gusto-API-Version",
      employeeId: "employee_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1EmployeesEmployeeIdEmploymentHistoryRequest$ {
  /** @deprecated use `GetV1EmployeesEmployeeIdEmploymentHistoryRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV1EmployeesEmployeeIdEmploymentHistoryRequest$inboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdEmploymentHistoryRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV1EmployeesEmployeeIdEmploymentHistoryRequest$outboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdEmploymentHistoryRequest$Outbound` instead. */
  export type Outbound =
    GetV1EmployeesEmployeeIdEmploymentHistoryRequest$Outbound;
}

export function getV1EmployeesEmployeeIdEmploymentHistoryRequestToJSON(
  getV1EmployeesEmployeeIdEmploymentHistoryRequest:
    GetV1EmployeesEmployeeIdEmploymentHistoryRequest,
): string {
  return JSON.stringify(
    GetV1EmployeesEmployeeIdEmploymentHistoryRequest$outboundSchema.parse(
      getV1EmployeesEmployeeIdEmploymentHistoryRequest,
    ),
  );
}

export function getV1EmployeesEmployeeIdEmploymentHistoryRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1EmployeesEmployeeIdEmploymentHistoryRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1EmployeesEmployeeIdEmploymentHistoryRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1EmployeesEmployeeIdEmploymentHistoryRequest' from JSON`,
  );
}

/** @internal */
export const GetV1EmployeesEmployeeIdEmploymentHistoryResponse$inboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdEmploymentHistoryResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: HTTPMetadata$inboundSchema,
    "Employment-History-List": z.array(EmploymentHistoryList$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "Employment-History-List": "employmentHistoryList",
    });
  });

/** @internal */
export type GetV1EmployeesEmployeeIdEmploymentHistoryResponse$Outbound = {
  HttpMeta: HTTPMetadata$Outbound;
  "Employment-History-List"?: Array<EmploymentHistoryList$Outbound> | undefined;
};

/** @internal */
export const GetV1EmployeesEmployeeIdEmploymentHistoryResponse$outboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdEmploymentHistoryResponse$Outbound,
    z.ZodTypeDef,
    GetV1EmployeesEmployeeIdEmploymentHistoryResponse
  > = z.object({
    httpMeta: HTTPMetadata$outboundSchema,
    employmentHistoryList: z.array(EmploymentHistoryList$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      employmentHistoryList: "Employment-History-List",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1EmployeesEmployeeIdEmploymentHistoryResponse$ {
  /** @deprecated use `GetV1EmployeesEmployeeIdEmploymentHistoryResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetV1EmployeesEmployeeIdEmploymentHistoryResponse$inboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdEmploymentHistoryResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetV1EmployeesEmployeeIdEmploymentHistoryResponse$outboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdEmploymentHistoryResponse$Outbound` instead. */
  export type Outbound =
    GetV1EmployeesEmployeeIdEmploymentHistoryResponse$Outbound;
}

export function getV1EmployeesEmployeeIdEmploymentHistoryResponseToJSON(
  getV1EmployeesEmployeeIdEmploymentHistoryResponse:
    GetV1EmployeesEmployeeIdEmploymentHistoryResponse,
): string {
  return JSON.stringify(
    GetV1EmployeesEmployeeIdEmploymentHistoryResponse$outboundSchema.parse(
      getV1EmployeesEmployeeIdEmploymentHistoryResponse,
    ),
  );
}

export function getV1EmployeesEmployeeIdEmploymentHistoryResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1EmployeesEmployeeIdEmploymentHistoryResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1EmployeesEmployeeIdEmploymentHistoryResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1EmployeesEmployeeIdEmploymentHistoryResponse' from JSON`,
  );
}
