/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  ContractorPaymentGroupPartnerDisbursements,
  ContractorPaymentGroupPartnerDisbursements$inboundSchema,
  ContractorPaymentGroupPartnerDisbursements$Outbound,
  ContractorPaymentGroupPartnerDisbursements$outboundSchema,
} from "../components/contractorpaymentgrouppartnerdisbursements.js";
import {
  HTTPMetadata,
  HTTPMetadata$inboundSchema,
  HTTPMetadata$Outbound,
  HTTPMetadata$outboundSchema,
} from "../components/httpmetadata.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export const GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion =
  {
    TwoThousandAndTwentyFourMinus04Minus01: "2024-04-01",
  } as const;
/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export type GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion =
  ClosedEnum<
    typeof GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion
  >;

export type GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest = {
  /**
   * The UUID of the contractor payment group
   */
  id: string;
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?:
    | GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion
    | undefined;
};

export type GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse = {
  httpMeta: HTTPMetadata;
  /**
   * successful
   */
  contractorPaymentGroupPartnerDisbursements?:
    | ContractorPaymentGroupPartnerDisbursements
    | undefined;
};

/** @internal */
export const GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion
  > = z.nativeEnum(
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion,
  );

/** @internal */
export const GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion
  > =
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion$ {
  /** @deprecated use `GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion$inboundSchema` instead. */
  export const inboundSchema =
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion$inboundSchema;
  /** @deprecated use `GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion$outboundSchema` instead. */
  export const outboundSchema =
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion$outboundSchema;
}

/** @internal */
export const GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$inboundSchema:
  z.ZodType<
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
    "X-Gusto-API-Version":
      GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion$inboundSchema
        .default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      "X-Gusto-API-Version": "xGustoAPIVersion",
    });
  });

/** @internal */
export type GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$Outbound =
  {
    id: string;
    "X-Gusto-API-Version": string;
  };

/** @internal */
export const GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$outboundSchema:
  z.ZodType<
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$Outbound,
    z.ZodTypeDef,
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest
  > = z.object({
    id: z.string(),
    xGustoAPIVersion:
      GetV1ContractorPaymentGroupsIdPartnerDisbursementsHeaderXGustoAPIVersion$outboundSchema
        .default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      xGustoAPIVersion: "X-Gusto-API-Version",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$ {
  /** @deprecated use `GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$inboundSchema;
  /** @deprecated use `GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$outboundSchema;
  /** @deprecated use `GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$Outbound` instead. */
  export type Outbound =
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$Outbound;
}

export function getV1ContractorPaymentGroupsIdPartnerDisbursementsRequestToJSON(
  getV1ContractorPaymentGroupsIdPartnerDisbursementsRequest:
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest,
): string {
  return JSON.stringify(
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$outboundSchema
      .parse(getV1ContractorPaymentGroupsIdPartnerDisbursementsRequest),
  );
}

export function getV1ContractorPaymentGroupsIdPartnerDisbursementsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV1ContractorPaymentGroupsIdPartnerDisbursementsRequest' from JSON`,
  );
}

/** @internal */
export const GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$inboundSchema:
  z.ZodType<
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: HTTPMetadata$inboundSchema,
    "Contractor-Payment-Group-Partner-Disbursements":
      ContractorPaymentGroupPartnerDisbursements$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "Contractor-Payment-Group-Partner-Disbursements":
        "contractorPaymentGroupPartnerDisbursements",
    });
  });

/** @internal */
export type GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$Outbound =
  {
    HttpMeta: HTTPMetadata$Outbound;
    "Contractor-Payment-Group-Partner-Disbursements"?:
      | ContractorPaymentGroupPartnerDisbursements$Outbound
      | undefined;
  };

/** @internal */
export const GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$outboundSchema:
  z.ZodType<
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$Outbound,
    z.ZodTypeDef,
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse
  > = z.object({
    httpMeta: HTTPMetadata$outboundSchema,
    contractorPaymentGroupPartnerDisbursements:
      ContractorPaymentGroupPartnerDisbursements$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      contractorPaymentGroupPartnerDisbursements:
        "Contractor-Payment-Group-Partner-Disbursements",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$ {
  /** @deprecated use `GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$inboundSchema;
  /** @deprecated use `GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$outboundSchema;
  /** @deprecated use `GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$Outbound` instead. */
  export type Outbound =
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$Outbound;
}

export function getV1ContractorPaymentGroupsIdPartnerDisbursementsResponseToJSON(
  getV1ContractorPaymentGroupsIdPartnerDisbursementsResponse:
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse,
): string {
  return JSON.stringify(
    GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$outboundSchema
      .parse(getV1ContractorPaymentGroupsIdPartnerDisbursementsResponse),
  );
}

export function getV1ContractorPaymentGroupsIdPartnerDisbursementsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV1ContractorPaymentGroupsIdPartnerDisbursementsResponse' from JSON`,
  );
}
