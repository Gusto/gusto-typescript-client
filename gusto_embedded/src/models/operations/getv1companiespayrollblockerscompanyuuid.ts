/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  HTTPMetadata,
  HTTPMetadata$inboundSchema,
  HTTPMetadata$Outbound,
  HTTPMetadata$outboundSchema,
} from "../components/httpmetadata.js";
import {
  PayrollBlocker,
  PayrollBlocker$inboundSchema,
  PayrollBlocker$Outbound,
  PayrollBlocker$outboundSchema,
} from "../components/payrollblocker.js";
import {
  VersionHeader,
  VersionHeader$inboundSchema,
  VersionHeader$outboundSchema,
} from "../components/versionheader.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetV1CompaniesPayrollBlockersCompanyUuidRequest = {
  /**
   * The UUID of the company
   */
  companyUuid: string;
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?: VersionHeader | undefined;
};

export type GetV1CompaniesPayrollBlockersCompanyUuidResponse = {
  httpMeta: HTTPMetadata;
  /**
   * Example response
   */
  payrollBlockerList?: Array<PayrollBlocker> | undefined;
};

/** @internal */
export const GetV1CompaniesPayrollBlockersCompanyUuidRequest$inboundSchema:
  z.ZodType<
    GetV1CompaniesPayrollBlockersCompanyUuidRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    company_uuid: z.string(),
    "X-Gusto-API-Version": VersionHeader$inboundSchema.default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      "company_uuid": "companyUuid",
      "X-Gusto-API-Version": "xGustoAPIVersion",
    });
  });

/** @internal */
export type GetV1CompaniesPayrollBlockersCompanyUuidRequest$Outbound = {
  company_uuid: string;
  "X-Gusto-API-Version": string;
};

/** @internal */
export const GetV1CompaniesPayrollBlockersCompanyUuidRequest$outboundSchema:
  z.ZodType<
    GetV1CompaniesPayrollBlockersCompanyUuidRequest$Outbound,
    z.ZodTypeDef,
    GetV1CompaniesPayrollBlockersCompanyUuidRequest
  > = z.object({
    companyUuid: z.string(),
    xGustoAPIVersion: VersionHeader$outboundSchema.default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      companyUuid: "company_uuid",
      xGustoAPIVersion: "X-Gusto-API-Version",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1CompaniesPayrollBlockersCompanyUuidRequest$ {
  /** @deprecated use `GetV1CompaniesPayrollBlockersCompanyUuidRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV1CompaniesPayrollBlockersCompanyUuidRequest$inboundSchema;
  /** @deprecated use `GetV1CompaniesPayrollBlockersCompanyUuidRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV1CompaniesPayrollBlockersCompanyUuidRequest$outboundSchema;
  /** @deprecated use `GetV1CompaniesPayrollBlockersCompanyUuidRequest$Outbound` instead. */
  export type Outbound =
    GetV1CompaniesPayrollBlockersCompanyUuidRequest$Outbound;
}

export function getV1CompaniesPayrollBlockersCompanyUuidRequestToJSON(
  getV1CompaniesPayrollBlockersCompanyUuidRequest:
    GetV1CompaniesPayrollBlockersCompanyUuidRequest,
): string {
  return JSON.stringify(
    GetV1CompaniesPayrollBlockersCompanyUuidRequest$outboundSchema.parse(
      getV1CompaniesPayrollBlockersCompanyUuidRequest,
    ),
  );
}

export function getV1CompaniesPayrollBlockersCompanyUuidRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1CompaniesPayrollBlockersCompanyUuidRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1CompaniesPayrollBlockersCompanyUuidRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1CompaniesPayrollBlockersCompanyUuidRequest' from JSON`,
  );
}

/** @internal */
export const GetV1CompaniesPayrollBlockersCompanyUuidResponse$inboundSchema:
  z.ZodType<
    GetV1CompaniesPayrollBlockersCompanyUuidResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: HTTPMetadata$inboundSchema,
    "Payroll-Blocker-List": z.array(PayrollBlocker$inboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "Payroll-Blocker-List": "payrollBlockerList",
    });
  });

/** @internal */
export type GetV1CompaniesPayrollBlockersCompanyUuidResponse$Outbound = {
  HttpMeta: HTTPMetadata$Outbound;
  "Payroll-Blocker-List"?: Array<PayrollBlocker$Outbound> | undefined;
};

/** @internal */
export const GetV1CompaniesPayrollBlockersCompanyUuidResponse$outboundSchema:
  z.ZodType<
    GetV1CompaniesPayrollBlockersCompanyUuidResponse$Outbound,
    z.ZodTypeDef,
    GetV1CompaniesPayrollBlockersCompanyUuidResponse
  > = z.object({
    httpMeta: HTTPMetadata$outboundSchema,
    payrollBlockerList: z.array(PayrollBlocker$outboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      payrollBlockerList: "Payroll-Blocker-List",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1CompaniesPayrollBlockersCompanyUuidResponse$ {
  /** @deprecated use `GetV1CompaniesPayrollBlockersCompanyUuidResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetV1CompaniesPayrollBlockersCompanyUuidResponse$inboundSchema;
  /** @deprecated use `GetV1CompaniesPayrollBlockersCompanyUuidResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetV1CompaniesPayrollBlockersCompanyUuidResponse$outboundSchema;
  /** @deprecated use `GetV1CompaniesPayrollBlockersCompanyUuidResponse$Outbound` instead. */
  export type Outbound =
    GetV1CompaniesPayrollBlockersCompanyUuidResponse$Outbound;
}

export function getV1CompaniesPayrollBlockersCompanyUuidResponseToJSON(
  getV1CompaniesPayrollBlockersCompanyUuidResponse:
    GetV1CompaniesPayrollBlockersCompanyUuidResponse,
): string {
  return JSON.stringify(
    GetV1CompaniesPayrollBlockersCompanyUuidResponse$outboundSchema.parse(
      getV1CompaniesPayrollBlockersCompanyUuidResponse,
    ),
  );
}

export function getV1CompaniesPayrollBlockersCompanyUuidResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1CompaniesPayrollBlockersCompanyUuidResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1CompaniesPayrollBlockersCompanyUuidResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1CompaniesPayrollBlockersCompanyUuidResponse' from JSON`,
  );
}
