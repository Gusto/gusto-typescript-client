/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  ContractorBankAccount,
  ContractorBankAccount$inboundSchema,
  ContractorBankAccount$Outbound,
  ContractorBankAccount$outboundSchema,
} from "../components/contractorbankaccount.js";
import {
  HTTPMetadata,
  HTTPMetadata$inboundSchema,
  HTTPMetadata$Outbound,
  HTTPMetadata$outboundSchema,
} from "../components/httpmetadata.js";
import {
  VersionHeader,
  VersionHeader$inboundSchema,
  VersionHeader$outboundSchema,
} from "../components/versionheader.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetV1ContractorsContractorUuidBankAccountsRequest = {
  /**
   * The UUID of the contractor
   */
  contractorUuid: string;
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?: VersionHeader | undefined;
};

export type GetV1ContractorsContractorUuidBankAccountsResponse = {
  httpMeta: HTTPMetadata;
  /**
   * Example response
   */
  contractorBankAccountList?: Array<ContractorBankAccount> | undefined;
};

/** @internal */
export const GetV1ContractorsContractorUuidBankAccountsRequest$inboundSchema:
  z.ZodType<
    GetV1ContractorsContractorUuidBankAccountsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    contractor_uuid: z.string(),
    "X-Gusto-API-Version": VersionHeader$inboundSchema.default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      "contractor_uuid": "contractorUuid",
      "X-Gusto-API-Version": "xGustoAPIVersion",
    });
  });

/** @internal */
export type GetV1ContractorsContractorUuidBankAccountsRequest$Outbound = {
  contractor_uuid: string;
  "X-Gusto-API-Version": string;
};

/** @internal */
export const GetV1ContractorsContractorUuidBankAccountsRequest$outboundSchema:
  z.ZodType<
    GetV1ContractorsContractorUuidBankAccountsRequest$Outbound,
    z.ZodTypeDef,
    GetV1ContractorsContractorUuidBankAccountsRequest
  > = z.object({
    contractorUuid: z.string(),
    xGustoAPIVersion: VersionHeader$outboundSchema.default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      contractorUuid: "contractor_uuid",
      xGustoAPIVersion: "X-Gusto-API-Version",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1ContractorsContractorUuidBankAccountsRequest$ {
  /** @deprecated use `GetV1ContractorsContractorUuidBankAccountsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV1ContractorsContractorUuidBankAccountsRequest$inboundSchema;
  /** @deprecated use `GetV1ContractorsContractorUuidBankAccountsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV1ContractorsContractorUuidBankAccountsRequest$outboundSchema;
  /** @deprecated use `GetV1ContractorsContractorUuidBankAccountsRequest$Outbound` instead. */
  export type Outbound =
    GetV1ContractorsContractorUuidBankAccountsRequest$Outbound;
}

export function getV1ContractorsContractorUuidBankAccountsRequestToJSON(
  getV1ContractorsContractorUuidBankAccountsRequest:
    GetV1ContractorsContractorUuidBankAccountsRequest,
): string {
  return JSON.stringify(
    GetV1ContractorsContractorUuidBankAccountsRequest$outboundSchema.parse(
      getV1ContractorsContractorUuidBankAccountsRequest,
    ),
  );
}

export function getV1ContractorsContractorUuidBankAccountsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1ContractorsContractorUuidBankAccountsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1ContractorsContractorUuidBankAccountsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1ContractorsContractorUuidBankAccountsRequest' from JSON`,
  );
}

/** @internal */
export const GetV1ContractorsContractorUuidBankAccountsResponse$inboundSchema:
  z.ZodType<
    GetV1ContractorsContractorUuidBankAccountsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: HTTPMetadata$inboundSchema,
    "Contractor-Bank-Account-List": z.array(ContractorBankAccount$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "Contractor-Bank-Account-List": "contractorBankAccountList",
    });
  });

/** @internal */
export type GetV1ContractorsContractorUuidBankAccountsResponse$Outbound = {
  HttpMeta: HTTPMetadata$Outbound;
  "Contractor-Bank-Account-List"?:
    | Array<ContractorBankAccount$Outbound>
    | undefined;
};

/** @internal */
export const GetV1ContractorsContractorUuidBankAccountsResponse$outboundSchema:
  z.ZodType<
    GetV1ContractorsContractorUuidBankAccountsResponse$Outbound,
    z.ZodTypeDef,
    GetV1ContractorsContractorUuidBankAccountsResponse
  > = z.object({
    httpMeta: HTTPMetadata$outboundSchema,
    contractorBankAccountList: z.array(ContractorBankAccount$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      contractorBankAccountList: "Contractor-Bank-Account-List",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1ContractorsContractorUuidBankAccountsResponse$ {
  /** @deprecated use `GetV1ContractorsContractorUuidBankAccountsResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetV1ContractorsContractorUuidBankAccountsResponse$inboundSchema;
  /** @deprecated use `GetV1ContractorsContractorUuidBankAccountsResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetV1ContractorsContractorUuidBankAccountsResponse$outboundSchema;
  /** @deprecated use `GetV1ContractorsContractorUuidBankAccountsResponse$Outbound` instead. */
  export type Outbound =
    GetV1ContractorsContractorUuidBankAccountsResponse$Outbound;
}

export function getV1ContractorsContractorUuidBankAccountsResponseToJSON(
  getV1ContractorsContractorUuidBankAccountsResponse:
    GetV1ContractorsContractorUuidBankAccountsResponse,
): string {
  return JSON.stringify(
    GetV1ContractorsContractorUuidBankAccountsResponse$outboundSchema.parse(
      getV1ContractorsContractorUuidBankAccountsResponse,
    ),
  );
}

export function getV1ContractorsContractorUuidBankAccountsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1ContractorsContractorUuidBankAccountsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1ContractorsContractorUuidBankAccountsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1ContractorsContractorUuidBankAccountsResponse' from JSON`,
  );
}
