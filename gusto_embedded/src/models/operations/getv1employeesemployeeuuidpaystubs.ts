/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  EmployeePayStub,
  EmployeePayStub$inboundSchema,
  EmployeePayStub$Outbound,
  EmployeePayStub$outboundSchema,
} from "../components/employeepaystub.js";
import {
  HTTPMetadata,
  HTTPMetadata$inboundSchema,
  HTTPMetadata$Outbound,
  HTTPMetadata$outboundSchema,
} from "../components/httpmetadata.js";
import {
  VersionHeader,
  VersionHeader$inboundSchema,
  VersionHeader$outboundSchema,
} from "../components/versionheader.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetV1EmployeesEmployeeUuidPayStubsRequest = {
  /**
   * The UUID of the employee
   */
  employeeId: string;
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?: VersionHeader | undefined;
};

export type GetV1EmployeesEmployeeUuidPayStubsResponse = {
  httpMeta: HTTPMetadata;
  /**
   * Example response
   */
  employeePayStubsList?: Array<EmployeePayStub> | undefined;
};

/** @internal */
export const GetV1EmployeesEmployeeUuidPayStubsRequest$inboundSchema: z.ZodType<
  GetV1EmployeesEmployeeUuidPayStubsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  employee_id: z.string(),
  "X-Gusto-API-Version": VersionHeader$inboundSchema.default("2024-04-01"),
}).transform((v) => {
  return remap$(v, {
    "employee_id": "employeeId",
    "X-Gusto-API-Version": "xGustoAPIVersion",
  });
});

/** @internal */
export type GetV1EmployeesEmployeeUuidPayStubsRequest$Outbound = {
  employee_id: string;
  "X-Gusto-API-Version": string;
};

/** @internal */
export const GetV1EmployeesEmployeeUuidPayStubsRequest$outboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeUuidPayStubsRequest$Outbound,
    z.ZodTypeDef,
    GetV1EmployeesEmployeeUuidPayStubsRequest
  > = z.object({
    employeeId: z.string(),
    xGustoAPIVersion: VersionHeader$outboundSchema.default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      employeeId: "employee_id",
      xGustoAPIVersion: "X-Gusto-API-Version",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1EmployeesEmployeeUuidPayStubsRequest$ {
  /** @deprecated use `GetV1EmployeesEmployeeUuidPayStubsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV1EmployeesEmployeeUuidPayStubsRequest$inboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeUuidPayStubsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV1EmployeesEmployeeUuidPayStubsRequest$outboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeUuidPayStubsRequest$Outbound` instead. */
  export type Outbound = GetV1EmployeesEmployeeUuidPayStubsRequest$Outbound;
}

export function getV1EmployeesEmployeeUuidPayStubsRequestToJSON(
  getV1EmployeesEmployeeUuidPayStubsRequest:
    GetV1EmployeesEmployeeUuidPayStubsRequest,
): string {
  return JSON.stringify(
    GetV1EmployeesEmployeeUuidPayStubsRequest$outboundSchema.parse(
      getV1EmployeesEmployeeUuidPayStubsRequest,
    ),
  );
}

export function getV1EmployeesEmployeeUuidPayStubsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1EmployeesEmployeeUuidPayStubsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1EmployeesEmployeeUuidPayStubsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1EmployeesEmployeeUuidPayStubsRequest' from JSON`,
  );
}

/** @internal */
export const GetV1EmployeesEmployeeUuidPayStubsResponse$inboundSchema:
  z.ZodType<GetV1EmployeesEmployeeUuidPayStubsResponse, z.ZodTypeDef, unknown> =
    z.object({
      HttpMeta: HTTPMetadata$inboundSchema,
      "Employee-Pay-Stubs-List": z.array(EmployeePayStub$inboundSchema)
        .optional(),
    }).transform((v) => {
      return remap$(v, {
        "HttpMeta": "httpMeta",
        "Employee-Pay-Stubs-List": "employeePayStubsList",
      });
    });

/** @internal */
export type GetV1EmployeesEmployeeUuidPayStubsResponse$Outbound = {
  HttpMeta: HTTPMetadata$Outbound;
  "Employee-Pay-Stubs-List"?: Array<EmployeePayStub$Outbound> | undefined;
};

/** @internal */
export const GetV1EmployeesEmployeeUuidPayStubsResponse$outboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeUuidPayStubsResponse$Outbound,
    z.ZodTypeDef,
    GetV1EmployeesEmployeeUuidPayStubsResponse
  > = z.object({
    httpMeta: HTTPMetadata$outboundSchema,
    employeePayStubsList: z.array(EmployeePayStub$outboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      employeePayStubsList: "Employee-Pay-Stubs-List",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1EmployeesEmployeeUuidPayStubsResponse$ {
  /** @deprecated use `GetV1EmployeesEmployeeUuidPayStubsResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetV1EmployeesEmployeeUuidPayStubsResponse$inboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeUuidPayStubsResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetV1EmployeesEmployeeUuidPayStubsResponse$outboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeUuidPayStubsResponse$Outbound` instead. */
  export type Outbound = GetV1EmployeesEmployeeUuidPayStubsResponse$Outbound;
}

export function getV1EmployeesEmployeeUuidPayStubsResponseToJSON(
  getV1EmployeesEmployeeUuidPayStubsResponse:
    GetV1EmployeesEmployeeUuidPayStubsResponse,
): string {
  return JSON.stringify(
    GetV1EmployeesEmployeeUuidPayStubsResponse$outboundSchema.parse(
      getV1EmployeesEmployeeUuidPayStubsResponse,
    ),
  );
}

export function getV1EmployeesEmployeeUuidPayStubsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1EmployeesEmployeeUuidPayStubsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1EmployeesEmployeeUuidPayStubsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1EmployeesEmployeeUuidPayStubsResponse' from JSON`,
  );
}
