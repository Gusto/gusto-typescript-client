/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  EmployeeOnboardingDocument,
  EmployeeOnboardingDocument$inboundSchema,
  EmployeeOnboardingDocument$Outbound,
  EmployeeOnboardingDocument$outboundSchema,
} from "../components/employeeonboardingdocument.js";
import {
  HTTPMetadata,
  HTTPMetadata$inboundSchema,
  HTTPMetadata$Outbound,
  HTTPMetadata$outboundSchema,
} from "../components/httpmetadata.js";
import {
  VersionHeader,
  VersionHeader$inboundSchema,
  VersionHeader$outboundSchema,
} from "../components/versionheader.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody = {
  /**
   * Whether to include Form I-9 for an employee during onboarding
   */
  i9Document?: boolean | undefined;
};

export type PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest = {
  /**
   * The UUID of the employee
   */
  employeeId: string;
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?: VersionHeader | undefined;
  requestBody: PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody;
};

export type PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse = {
  httpMeta: HTTPMetadata;
  /**
   * Example response
   */
  employeeOnboardingDocument?: EmployeeOnboardingDocument | undefined;
};

/** @internal */
export const PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$inboundSchema:
  z.ZodType<
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    i9_document: z.boolean().optional(),
  }).transform((v) => {
    return remap$(v, {
      "i9_document": "i9Document",
    });
  });

/** @internal */
export type PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$Outbound =
  {
    i9_document?: boolean | undefined;
  };

/** @internal */
export const PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$outboundSchema:
  z.ZodType<
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$Outbound,
    z.ZodTypeDef,
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody
  > = z.object({
    i9Document: z.boolean().optional(),
  }).transform((v) => {
    return remap$(v, {
      i9Document: "i9_document",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$ {
  /** @deprecated use `PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$inboundSchema;
  /** @deprecated use `PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$outboundSchema;
  /** @deprecated use `PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$Outbound` instead. */
  export type Outbound =
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$Outbound;
}

export function putV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBodyToJSON(
  putV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody:
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody,
): string {
  return JSON.stringify(
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$outboundSchema
      .parse(putV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody),
  );
}

export function putV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody' from JSON`,
  );
}

/** @internal */
export const PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$inboundSchema:
  z.ZodType<
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    employee_id: z.string(),
    "X-Gusto-API-Version": VersionHeader$inboundSchema.default("2025-06-15"),
    RequestBody: z.lazy(() =>
      PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "employee_id": "employeeId",
      "X-Gusto-API-Version": "xGustoAPIVersion",
      "RequestBody": "requestBody",
    });
  });

/** @internal */
export type PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$Outbound =
  {
    employee_id: string;
    "X-Gusto-API-Version": string;
    RequestBody:
      PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$Outbound;
  };

/** @internal */
export const PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$outboundSchema:
  z.ZodType<
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$Outbound,
    z.ZodTypeDef,
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest
  > = z.object({
    employeeId: z.string(),
    xGustoAPIVersion: VersionHeader$outboundSchema.default("2025-06-15"),
    requestBody: z.lazy(() =>
      PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestBody$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      employeeId: "employee_id",
      xGustoAPIVersion: "X-Gusto-API-Version",
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$ {
  /** @deprecated use `PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$inboundSchema` instead. */
  export const inboundSchema =
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$inboundSchema;
  /** @deprecated use `PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$outboundSchema` instead. */
  export const outboundSchema =
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$outboundSchema;
  /** @deprecated use `PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$Outbound` instead. */
  export type Outbound =
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$Outbound;
}

export function putV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestToJSON(
  putV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest:
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest,
): string {
  return JSON.stringify(
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$outboundSchema
      .parse(putV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest),
  );
}

export function putV1EmployeesEmployeeIdOnboardingDocumentsConfigRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV1EmployeesEmployeeIdOnboardingDocumentsConfigRequest' from JSON`,
  );
}

/** @internal */
export const PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$inboundSchema:
  z.ZodType<
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: HTTPMetadata$inboundSchema,
    "Employee-Onboarding-Document": EmployeeOnboardingDocument$inboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "Employee-Onboarding-Document": "employeeOnboardingDocument",
    });
  });

/** @internal */
export type PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$Outbound =
  {
    HttpMeta: HTTPMetadata$Outbound;
    "Employee-Onboarding-Document"?:
      | EmployeeOnboardingDocument$Outbound
      | undefined;
  };

/** @internal */
export const PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$outboundSchema:
  z.ZodType<
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$Outbound,
    z.ZodTypeDef,
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse
  > = z.object({
    httpMeta: HTTPMetadata$outboundSchema,
    employeeOnboardingDocument: EmployeeOnboardingDocument$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      employeeOnboardingDocument: "Employee-Onboarding-Document",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$ {
  /** @deprecated use `PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$inboundSchema` instead. */
  export const inboundSchema =
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$inboundSchema;
  /** @deprecated use `PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$outboundSchema` instead. */
  export const outboundSchema =
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$outboundSchema;
  /** @deprecated use `PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$Outbound` instead. */
  export type Outbound =
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$Outbound;
}

export function putV1EmployeesEmployeeIdOnboardingDocumentsConfigResponseToJSON(
  putV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse:
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse,
): string {
  return JSON.stringify(
    PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$outboundSchema
      .parse(putV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse),
  );
}

export function putV1EmployeesEmployeeIdOnboardingDocumentsConfigResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV1EmployeesEmployeeIdOnboardingDocumentsConfigResponse' from JSON`,
  );
}
