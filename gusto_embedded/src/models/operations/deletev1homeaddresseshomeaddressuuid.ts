/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  HTTPMetadata,
  HTTPMetadata$inboundSchema,
  HTTPMetadata$Outbound,
  HTTPMetadata$outboundSchema,
} from "../components/httpmetadata.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export const DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion = {
  TwoThousandAndTwentyFourMinus04Minus01: "2024-04-01",
} as const;
/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export type DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion =
  ClosedEnum<typeof DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion>;

export type DeleteV1HomeAddressesHomeAddressUuidRequest = {
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?:
    | DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion
    | undefined;
  /**
   * The UUID of the home address
   */
  homeAddressUuid: string;
};

export type DeleteV1HomeAddressesHomeAddressUuidResponse = {
  httpMeta: HTTPMetadata;
};

/** @internal */
export const DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion$inboundSchema:
  z.ZodNativeEnum<
    typeof DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion
  > = z.nativeEnum(DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion);

/** @internal */
export const DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion$outboundSchema:
  z.ZodNativeEnum<
    typeof DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion
  > = DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion$ {
  /** @deprecated use `DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion$inboundSchema` instead. */
  export const inboundSchema =
    DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion$inboundSchema;
  /** @deprecated use `DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion$outboundSchema` instead. */
  export const outboundSchema =
    DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion$outboundSchema;
}

/** @internal */
export const DeleteV1HomeAddressesHomeAddressUuidRequest$inboundSchema:
  z.ZodType<
    DeleteV1HomeAddressesHomeAddressUuidRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "X-Gusto-API-Version":
      DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion$inboundSchema
        .default("2024-04-01"),
    home_address_uuid: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "X-Gusto-API-Version": "xGustoAPIVersion",
      "home_address_uuid": "homeAddressUuid",
    });
  });

/** @internal */
export type DeleteV1HomeAddressesHomeAddressUuidRequest$Outbound = {
  "X-Gusto-API-Version": string;
  home_address_uuid: string;
};

/** @internal */
export const DeleteV1HomeAddressesHomeAddressUuidRequest$outboundSchema:
  z.ZodType<
    DeleteV1HomeAddressesHomeAddressUuidRequest$Outbound,
    z.ZodTypeDef,
    DeleteV1HomeAddressesHomeAddressUuidRequest
  > = z.object({
    xGustoAPIVersion:
      DeleteV1HomeAddressesHomeAddressUuidHeaderXGustoAPIVersion$outboundSchema
        .default("2024-04-01"),
    homeAddressUuid: z.string(),
  }).transform((v) => {
    return remap$(v, {
      xGustoAPIVersion: "X-Gusto-API-Version",
      homeAddressUuid: "home_address_uuid",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV1HomeAddressesHomeAddressUuidRequest$ {
  /** @deprecated use `DeleteV1HomeAddressesHomeAddressUuidRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteV1HomeAddressesHomeAddressUuidRequest$inboundSchema;
  /** @deprecated use `DeleteV1HomeAddressesHomeAddressUuidRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteV1HomeAddressesHomeAddressUuidRequest$outboundSchema;
  /** @deprecated use `DeleteV1HomeAddressesHomeAddressUuidRequest$Outbound` instead. */
  export type Outbound = DeleteV1HomeAddressesHomeAddressUuidRequest$Outbound;
}

export function deleteV1HomeAddressesHomeAddressUuidRequestToJSON(
  deleteV1HomeAddressesHomeAddressUuidRequest:
    DeleteV1HomeAddressesHomeAddressUuidRequest,
): string {
  return JSON.stringify(
    DeleteV1HomeAddressesHomeAddressUuidRequest$outboundSchema.parse(
      deleteV1HomeAddressesHomeAddressUuidRequest,
    ),
  );
}

export function deleteV1HomeAddressesHomeAddressUuidRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteV1HomeAddressesHomeAddressUuidRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteV1HomeAddressesHomeAddressUuidRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteV1HomeAddressesHomeAddressUuidRequest' from JSON`,
  );
}

/** @internal */
export const DeleteV1HomeAddressesHomeAddressUuidResponse$inboundSchema:
  z.ZodType<
    DeleteV1HomeAddressesHomeAddressUuidResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: HTTPMetadata$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
    });
  });

/** @internal */
export type DeleteV1HomeAddressesHomeAddressUuidResponse$Outbound = {
  HttpMeta: HTTPMetadata$Outbound;
};

/** @internal */
export const DeleteV1HomeAddressesHomeAddressUuidResponse$outboundSchema:
  z.ZodType<
    DeleteV1HomeAddressesHomeAddressUuidResponse$Outbound,
    z.ZodTypeDef,
    DeleteV1HomeAddressesHomeAddressUuidResponse
  > = z.object({
    httpMeta: HTTPMetadata$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV1HomeAddressesHomeAddressUuidResponse$ {
  /** @deprecated use `DeleteV1HomeAddressesHomeAddressUuidResponse$inboundSchema` instead. */
  export const inboundSchema =
    DeleteV1HomeAddressesHomeAddressUuidResponse$inboundSchema;
  /** @deprecated use `DeleteV1HomeAddressesHomeAddressUuidResponse$outboundSchema` instead. */
  export const outboundSchema =
    DeleteV1HomeAddressesHomeAddressUuidResponse$outboundSchema;
  /** @deprecated use `DeleteV1HomeAddressesHomeAddressUuidResponse$Outbound` instead. */
  export type Outbound = DeleteV1HomeAddressesHomeAddressUuidResponse$Outbound;
}

export function deleteV1HomeAddressesHomeAddressUuidResponseToJSON(
  deleteV1HomeAddressesHomeAddressUuidResponse:
    DeleteV1HomeAddressesHomeAddressUuidResponse,
): string {
  return JSON.stringify(
    DeleteV1HomeAddressesHomeAddressUuidResponse$outboundSchema.parse(
      deleteV1HomeAddressesHomeAddressUuidResponse,
    ),
  );
}

export function deleteV1HomeAddressesHomeAddressUuidResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteV1HomeAddressesHomeAddressUuidResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteV1HomeAddressesHomeAddressUuidResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteV1HomeAddressesHomeAddressUuidResponse' from JSON`,
  );
}
