/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  ContractorPaymentGroupWithBlockers,
  ContractorPaymentGroupWithBlockers$inboundSchema,
  ContractorPaymentGroupWithBlockers$Outbound,
  ContractorPaymentGroupWithBlockers$outboundSchema,
} from "../components/contractorpaymentgroupwithblockers.js";
import {
  HTTPMetadata,
  HTTPMetadata$inboundSchema,
  HTTPMetadata$Outbound,
  HTTPMetadata$outboundSchema,
} from "../components/httpmetadata.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export const GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion =
  {
    TwoThousandAndTwentyFourMinus04Minus01: "2024-04-01",
  } as const;
/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export type GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion =
  ClosedEnum<
    typeof GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion
  >;

export type GetV1CompaniesCompanyIdContractorPaymentGroupsRequest = {
  /**
   * The UUID of the company
   */
  companyId: string;
  /**
   * The time period for which to retrieve contractor payment groups. Defaults to 6 months ago.
   */
  startDate?: string | undefined;
  /**
   * The time period for which to retrieve contractor payment groups. Defaults to today's date.
   */
  endDate?: string | undefined;
  /**
   * The page that is requested. When unspecified, will load all objects unless endpoint forces pagination.
   */
  page?: number | undefined;
  /**
   * Number of objects per page. For majority of endpoints will default to 25
   */
  per?: number | undefined;
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?:
    | GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion
    | undefined;
};

export type GetV1CompaniesCompanyIdContractorPaymentGroupsResponse = {
  httpMeta: HTTPMetadata;
  /**
   * List of Contractor Payment Groups
   */
  contractorPaymentGroupWithBlockers?:
    | Array<ContractorPaymentGroupWithBlockers>
    | undefined;
};

/** @internal */
export const GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion
  > = z.nativeEnum(
    GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion,
  );

/** @internal */
export const GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion
  > =
    GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion$ {
  /** @deprecated use `GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion$inboundSchema` instead. */
  export const inboundSchema =
    GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion$inboundSchema;
  /** @deprecated use `GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion$outboundSchema` instead. */
  export const outboundSchema =
    GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion$outboundSchema;
}

/** @internal */
export const GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$inboundSchema:
  z.ZodType<
    GetV1CompaniesCompanyIdContractorPaymentGroupsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    company_id: z.string(),
    start_date: z.string().optional(),
    end_date: z.string().optional(),
    page: z.number().int().optional(),
    per: z.number().int().optional(),
    "X-Gusto-API-Version":
      GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion$inboundSchema
        .default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      "company_id": "companyId",
      "start_date": "startDate",
      "end_date": "endDate",
      "X-Gusto-API-Version": "xGustoAPIVersion",
    });
  });

/** @internal */
export type GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$Outbound = {
  company_id: string;
  start_date?: string | undefined;
  end_date?: string | undefined;
  page?: number | undefined;
  per?: number | undefined;
  "X-Gusto-API-Version": string;
};

/** @internal */
export const GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$outboundSchema:
  z.ZodType<
    GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$Outbound,
    z.ZodTypeDef,
    GetV1CompaniesCompanyIdContractorPaymentGroupsRequest
  > = z.object({
    companyId: z.string(),
    startDate: z.string().optional(),
    endDate: z.string().optional(),
    page: z.number().int().optional(),
    per: z.number().int().optional(),
    xGustoAPIVersion:
      GetV1CompaniesCompanyIdContractorPaymentGroupsHeaderXGustoAPIVersion$outboundSchema
        .default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      companyId: "company_id",
      startDate: "start_date",
      endDate: "end_date",
      xGustoAPIVersion: "X-Gusto-API-Version",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$ {
  /** @deprecated use `GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$inboundSchema;
  /** @deprecated use `GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$outboundSchema;
  /** @deprecated use `GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$Outbound` instead. */
  export type Outbound =
    GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$Outbound;
}

export function getV1CompaniesCompanyIdContractorPaymentGroupsRequestToJSON(
  getV1CompaniesCompanyIdContractorPaymentGroupsRequest:
    GetV1CompaniesCompanyIdContractorPaymentGroupsRequest,
): string {
  return JSON.stringify(
    GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$outboundSchema.parse(
      getV1CompaniesCompanyIdContractorPaymentGroupsRequest,
    ),
  );
}

export function getV1CompaniesCompanyIdContractorPaymentGroupsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1CompaniesCompanyIdContractorPaymentGroupsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1CompaniesCompanyIdContractorPaymentGroupsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1CompaniesCompanyIdContractorPaymentGroupsRequest' from JSON`,
  );
}

/** @internal */
export const GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$inboundSchema:
  z.ZodType<
    GetV1CompaniesCompanyIdContractorPaymentGroupsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: HTTPMetadata$inboundSchema,
    "Contractor-Payment-Group-With-Blockers": z.array(
      ContractorPaymentGroupWithBlockers$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "Contractor-Payment-Group-With-Blockers":
        "contractorPaymentGroupWithBlockers",
    });
  });

/** @internal */
export type GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$Outbound = {
  HttpMeta: HTTPMetadata$Outbound;
  "Contractor-Payment-Group-With-Blockers"?:
    | Array<ContractorPaymentGroupWithBlockers$Outbound>
    | undefined;
};

/** @internal */
export const GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$outboundSchema:
  z.ZodType<
    GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$Outbound,
    z.ZodTypeDef,
    GetV1CompaniesCompanyIdContractorPaymentGroupsResponse
  > = z.object({
    httpMeta: HTTPMetadata$outboundSchema,
    contractorPaymentGroupWithBlockers: z.array(
      ContractorPaymentGroupWithBlockers$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      contractorPaymentGroupWithBlockers:
        "Contractor-Payment-Group-With-Blockers",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$ {
  /** @deprecated use `GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$inboundSchema;
  /** @deprecated use `GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$outboundSchema;
  /** @deprecated use `GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$Outbound` instead. */
  export type Outbound =
    GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$Outbound;
}

export function getV1CompaniesCompanyIdContractorPaymentGroupsResponseToJSON(
  getV1CompaniesCompanyIdContractorPaymentGroupsResponse:
    GetV1CompaniesCompanyIdContractorPaymentGroupsResponse,
): string {
  return JSON.stringify(
    GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$outboundSchema.parse(
      getV1CompaniesCompanyIdContractorPaymentGroupsResponse,
    ),
  );
}

export function getV1CompaniesCompanyIdContractorPaymentGroupsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1CompaniesCompanyIdContractorPaymentGroupsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1CompaniesCompanyIdContractorPaymentGroupsResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV1CompaniesCompanyIdContractorPaymentGroupsResponse' from JSON`,
  );
}
