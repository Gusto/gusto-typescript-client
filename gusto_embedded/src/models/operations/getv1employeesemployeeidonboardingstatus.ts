/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  EmployeeOnboardingStatus,
  EmployeeOnboardingStatus$inboundSchema,
  EmployeeOnboardingStatus$Outbound,
  EmployeeOnboardingStatus$outboundSchema,
} from "../components/employeeonboardingstatus.js";
import {
  HTTPMetadata,
  HTTPMetadata$inboundSchema,
  HTTPMetadata$Outbound,
  HTTPMetadata$outboundSchema,
} from "../components/httpmetadata.js";
import {
  VersionHeader,
  VersionHeader$inboundSchema,
  VersionHeader$outboundSchema,
} from "../components/versionheader.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetV1EmployeesEmployeeIdOnboardingStatusRequest = {
  /**
   * The UUID of the employee
   */
  employeeId: string;
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?: VersionHeader | undefined;
};

export type GetV1EmployeesEmployeeIdOnboardingStatusResponse = {
  httpMeta: HTTPMetadata;
  /**
   * Example response.
   */
  employeeOnboardingStatus?: EmployeeOnboardingStatus | undefined;
};

/** @internal */
export const GetV1EmployeesEmployeeIdOnboardingStatusRequest$inboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdOnboardingStatusRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    employee_id: z.string(),
    "X-Gusto-API-Version": VersionHeader$inboundSchema.default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      "employee_id": "employeeId",
      "X-Gusto-API-Version": "xGustoAPIVersion",
    });
  });

/** @internal */
export type GetV1EmployeesEmployeeIdOnboardingStatusRequest$Outbound = {
  employee_id: string;
  "X-Gusto-API-Version": string;
};

/** @internal */
export const GetV1EmployeesEmployeeIdOnboardingStatusRequest$outboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdOnboardingStatusRequest$Outbound,
    z.ZodTypeDef,
    GetV1EmployeesEmployeeIdOnboardingStatusRequest
  > = z.object({
    employeeId: z.string(),
    xGustoAPIVersion: VersionHeader$outboundSchema.default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      employeeId: "employee_id",
      xGustoAPIVersion: "X-Gusto-API-Version",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1EmployeesEmployeeIdOnboardingStatusRequest$ {
  /** @deprecated use `GetV1EmployeesEmployeeIdOnboardingStatusRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV1EmployeesEmployeeIdOnboardingStatusRequest$inboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdOnboardingStatusRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV1EmployeesEmployeeIdOnboardingStatusRequest$outboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdOnboardingStatusRequest$Outbound` instead. */
  export type Outbound =
    GetV1EmployeesEmployeeIdOnboardingStatusRequest$Outbound;
}

export function getV1EmployeesEmployeeIdOnboardingStatusRequestToJSON(
  getV1EmployeesEmployeeIdOnboardingStatusRequest:
    GetV1EmployeesEmployeeIdOnboardingStatusRequest,
): string {
  return JSON.stringify(
    GetV1EmployeesEmployeeIdOnboardingStatusRequest$outboundSchema.parse(
      getV1EmployeesEmployeeIdOnboardingStatusRequest,
    ),
  );
}

export function getV1EmployeesEmployeeIdOnboardingStatusRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1EmployeesEmployeeIdOnboardingStatusRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1EmployeesEmployeeIdOnboardingStatusRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1EmployeesEmployeeIdOnboardingStatusRequest' from JSON`,
  );
}

/** @internal */
export const GetV1EmployeesEmployeeIdOnboardingStatusResponse$inboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdOnboardingStatusResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: HTTPMetadata$inboundSchema,
    "Employee-Onboarding-Status": EmployeeOnboardingStatus$inboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "Employee-Onboarding-Status": "employeeOnboardingStatus",
    });
  });

/** @internal */
export type GetV1EmployeesEmployeeIdOnboardingStatusResponse$Outbound = {
  HttpMeta: HTTPMetadata$Outbound;
  "Employee-Onboarding-Status"?: EmployeeOnboardingStatus$Outbound | undefined;
};

/** @internal */
export const GetV1EmployeesEmployeeIdOnboardingStatusResponse$outboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdOnboardingStatusResponse$Outbound,
    z.ZodTypeDef,
    GetV1EmployeesEmployeeIdOnboardingStatusResponse
  > = z.object({
    httpMeta: HTTPMetadata$outboundSchema,
    employeeOnboardingStatus: EmployeeOnboardingStatus$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      employeeOnboardingStatus: "Employee-Onboarding-Status",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1EmployeesEmployeeIdOnboardingStatusResponse$ {
  /** @deprecated use `GetV1EmployeesEmployeeIdOnboardingStatusResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetV1EmployeesEmployeeIdOnboardingStatusResponse$inboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdOnboardingStatusResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetV1EmployeesEmployeeIdOnboardingStatusResponse$outboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdOnboardingStatusResponse$Outbound` instead. */
  export type Outbound =
    GetV1EmployeesEmployeeIdOnboardingStatusResponse$Outbound;
}

export function getV1EmployeesEmployeeIdOnboardingStatusResponseToJSON(
  getV1EmployeesEmployeeIdOnboardingStatusResponse:
    GetV1EmployeesEmployeeIdOnboardingStatusResponse,
): string {
  return JSON.stringify(
    GetV1EmployeesEmployeeIdOnboardingStatusResponse$outboundSchema.parse(
      getV1EmployeesEmployeeIdOnboardingStatusResponse,
    ),
  );
}

export function getV1EmployeesEmployeeIdOnboardingStatusResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1EmployeesEmployeeIdOnboardingStatusResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1EmployeesEmployeeIdOnboardingStatusResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1EmployeesEmployeeIdOnboardingStatusResponse' from JSON`,
  );
}
