/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  EmployeeStateTax,
  EmployeeStateTax$inboundSchema,
  EmployeeStateTax$Outbound,
  EmployeeStateTax$outboundSchema,
} from "../components/employeestatetax.js";
import {
  VersionHeader,
  VersionHeader$inboundSchema,
  VersionHeader$outboundSchema,
} from "../components/versionheader.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetV1EmployeesEmployeeIdStateTaxesRequest = {
  /**
   * The UUID of the employee
   */
  employeeUuid: string;
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?: VersionHeader | undefined;
};

export type GetV1EmployeesEmployeeIdStateTaxesResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * Example response
   */
  employeeStateTaxesList?: Array<EmployeeStateTax> | undefined;
};

/** @internal */
export const GetV1EmployeesEmployeeIdStateTaxesRequest$inboundSchema: z.ZodType<
  GetV1EmployeesEmployeeIdStateTaxesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  employee_uuid: z.string(),
  "X-Gusto-API-Version": VersionHeader$inboundSchema.default("2024-04-01"),
}).transform((v) => {
  return remap$(v, {
    "employee_uuid": "employeeUuid",
    "X-Gusto-API-Version": "xGustoAPIVersion",
  });
});

/** @internal */
export type GetV1EmployeesEmployeeIdStateTaxesRequest$Outbound = {
  employee_uuid: string;
  "X-Gusto-API-Version": string;
};

/** @internal */
export const GetV1EmployeesEmployeeIdStateTaxesRequest$outboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdStateTaxesRequest$Outbound,
    z.ZodTypeDef,
    GetV1EmployeesEmployeeIdStateTaxesRequest
  > = z.object({
    employeeUuid: z.string(),
    xGustoAPIVersion: VersionHeader$outboundSchema.default("2024-04-01"),
  }).transform((v) => {
    return remap$(v, {
      employeeUuid: "employee_uuid",
      xGustoAPIVersion: "X-Gusto-API-Version",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1EmployeesEmployeeIdStateTaxesRequest$ {
  /** @deprecated use `GetV1EmployeesEmployeeIdStateTaxesRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV1EmployeesEmployeeIdStateTaxesRequest$inboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdStateTaxesRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV1EmployeesEmployeeIdStateTaxesRequest$outboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdStateTaxesRequest$Outbound` instead. */
  export type Outbound = GetV1EmployeesEmployeeIdStateTaxesRequest$Outbound;
}

export function getV1EmployeesEmployeeIdStateTaxesRequestToJSON(
  getV1EmployeesEmployeeIdStateTaxesRequest:
    GetV1EmployeesEmployeeIdStateTaxesRequest,
): string {
  return JSON.stringify(
    GetV1EmployeesEmployeeIdStateTaxesRequest$outboundSchema.parse(
      getV1EmployeesEmployeeIdStateTaxesRequest,
    ),
  );
}

export function getV1EmployeesEmployeeIdStateTaxesRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1EmployeesEmployeeIdStateTaxesRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1EmployeesEmployeeIdStateTaxesRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1EmployeesEmployeeIdStateTaxesRequest' from JSON`,
  );
}

/** @internal */
export const GetV1EmployeesEmployeeIdStateTaxesResponse$inboundSchema:
  z.ZodType<GetV1EmployeesEmployeeIdStateTaxesResponse, z.ZodTypeDef, unknown> =
    z.object({
      ContentType: z.string(),
      StatusCode: z.number().int(),
      RawResponse: z.instanceof(Response),
      "Employee-State-Taxes-List": z.array(EmployeeStateTax$inboundSchema)
        .optional(),
    }).transform((v) => {
      return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "Employee-State-Taxes-List": "employeeStateTaxesList",
      });
    });

/** @internal */
export type GetV1EmployeesEmployeeIdStateTaxesResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  "Employee-State-Taxes-List"?: Array<EmployeeStateTax$Outbound> | undefined;
};

/** @internal */
export const GetV1EmployeesEmployeeIdStateTaxesResponse$outboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdStateTaxesResponse$Outbound,
    z.ZodTypeDef,
    GetV1EmployeesEmployeeIdStateTaxesResponse
  > = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
    employeeStateTaxesList: z.array(EmployeeStateTax$outboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
      employeeStateTaxesList: "Employee-State-Taxes-List",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1EmployeesEmployeeIdStateTaxesResponse$ {
  /** @deprecated use `GetV1EmployeesEmployeeIdStateTaxesResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetV1EmployeesEmployeeIdStateTaxesResponse$inboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdStateTaxesResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetV1EmployeesEmployeeIdStateTaxesResponse$outboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdStateTaxesResponse$Outbound` instead. */
  export type Outbound = GetV1EmployeesEmployeeIdStateTaxesResponse$Outbound;
}

export function getV1EmployeesEmployeeIdStateTaxesResponseToJSON(
  getV1EmployeesEmployeeIdStateTaxesResponse:
    GetV1EmployeesEmployeeIdStateTaxesResponse,
): string {
  return JSON.stringify(
    GetV1EmployeesEmployeeIdStateTaxesResponse$outboundSchema.parse(
      getV1EmployeesEmployeeIdStateTaxesResponse,
    ),
  );
}

export function getV1EmployeesEmployeeIdStateTaxesResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1EmployeesEmployeeIdStateTaxesResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1EmployeesEmployeeIdStateTaxesResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1EmployeesEmployeeIdStateTaxesResponse' from JSON`,
  );
}
