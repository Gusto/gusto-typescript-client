/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  HTTPMetadata,
  HTTPMetadata$inboundSchema,
  HTTPMetadata$Outbound,
  HTTPMetadata$outboundSchema,
} from "../components/httpmetadata.js";
import {
  SalaryEstimate,
  SalaryEstimate$inboundSchema,
  SalaryEstimate$Outbound,
  SalaryEstimate$outboundSchema,
} from "../components/salaryestimate.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export const PutV1SalaryEstimatesIdHeaderXGustoAPIVersion = {
  TwoThousandAndTwentyFourMinus04Minus01: "2024-04-01",
} as const;
/**
 * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
 */
export type PutV1SalaryEstimatesIdHeaderXGustoAPIVersion = ClosedEnum<
  typeof PutV1SalaryEstimatesIdHeaderXGustoAPIVersion
>;

/**
 * Experience level for this occupation
 */
export const PutV1SalaryEstimatesIdExperienceLevel = {
  Novice: "novice",
  Intermediate: "intermediate",
  Average: "average",
  Skilled: "skilled",
  Expert: "expert",
} as const;
/**
 * Experience level for this occupation
 */
export type PutV1SalaryEstimatesIdExperienceLevel = ClosedEnum<
  typeof PutV1SalaryEstimatesIdExperienceLevel
>;

export type PutV1SalaryEstimatesIdOccupations = {
  /**
   * Bureau of Labor Statistics (BLS) occupation code
   */
  code: string;
  /**
   * Experience level for this occupation
   */
  experienceLevel: PutV1SalaryEstimatesIdExperienceLevel;
  /**
   * Percentage of time spent in this occupation (as decimal, e.g., 0.5 = 50%)
   */
  timePercentage: string;
  /**
   * Whether this is the primary occupation
   */
  primary?: boolean | undefined;
};

export type PutV1SalaryEstimatesIdRequestBody = {
  /**
   * The annual net revenue of the business (must be greater than 0)
   */
  annualNetRevenue?: number | null | undefined;
  /**
   * The ZIP code for location-based salary calculations
   */
  zipCode: string;
  /**
   * Array of occupations. Time percentages must sum to 100%.
   */
  occupations: Array<PutV1SalaryEstimatesIdOccupations>;
};

export type PutV1SalaryEstimatesIdRequest = {
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?: PutV1SalaryEstimatesIdHeaderXGustoAPIVersion | undefined;
  /**
   * The UUID of the salary estimate
   */
  uuid: string;
  requestBody: PutV1SalaryEstimatesIdRequestBody;
};

export type PutV1SalaryEstimatesIdResponse = {
  httpMeta: HTTPMetadata;
  /**
   * successful
   */
  salaryEstimate?: SalaryEstimate | undefined;
};

/** @internal */
export const PutV1SalaryEstimatesIdHeaderXGustoAPIVersion$inboundSchema:
  z.ZodNativeEnum<typeof PutV1SalaryEstimatesIdHeaderXGustoAPIVersion> = z
    .nativeEnum(PutV1SalaryEstimatesIdHeaderXGustoAPIVersion);

/** @internal */
export const PutV1SalaryEstimatesIdHeaderXGustoAPIVersion$outboundSchema:
  z.ZodNativeEnum<typeof PutV1SalaryEstimatesIdHeaderXGustoAPIVersion> =
    PutV1SalaryEstimatesIdHeaderXGustoAPIVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1SalaryEstimatesIdHeaderXGustoAPIVersion$ {
  /** @deprecated use `PutV1SalaryEstimatesIdHeaderXGustoAPIVersion$inboundSchema` instead. */
  export const inboundSchema =
    PutV1SalaryEstimatesIdHeaderXGustoAPIVersion$inboundSchema;
  /** @deprecated use `PutV1SalaryEstimatesIdHeaderXGustoAPIVersion$outboundSchema` instead. */
  export const outboundSchema =
    PutV1SalaryEstimatesIdHeaderXGustoAPIVersion$outboundSchema;
}

/** @internal */
export const PutV1SalaryEstimatesIdExperienceLevel$inboundSchema:
  z.ZodNativeEnum<typeof PutV1SalaryEstimatesIdExperienceLevel> = z.nativeEnum(
    PutV1SalaryEstimatesIdExperienceLevel,
  );

/** @internal */
export const PutV1SalaryEstimatesIdExperienceLevel$outboundSchema:
  z.ZodNativeEnum<typeof PutV1SalaryEstimatesIdExperienceLevel> =
    PutV1SalaryEstimatesIdExperienceLevel$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1SalaryEstimatesIdExperienceLevel$ {
  /** @deprecated use `PutV1SalaryEstimatesIdExperienceLevel$inboundSchema` instead. */
  export const inboundSchema =
    PutV1SalaryEstimatesIdExperienceLevel$inboundSchema;
  /** @deprecated use `PutV1SalaryEstimatesIdExperienceLevel$outboundSchema` instead. */
  export const outboundSchema =
    PutV1SalaryEstimatesIdExperienceLevel$outboundSchema;
}

/** @internal */
export const PutV1SalaryEstimatesIdOccupations$inboundSchema: z.ZodType<
  PutV1SalaryEstimatesIdOccupations,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
  experience_level: PutV1SalaryEstimatesIdExperienceLevel$inboundSchema,
  time_percentage: z.string(),
  primary: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    "experience_level": "experienceLevel",
    "time_percentage": "timePercentage",
  });
});

/** @internal */
export type PutV1SalaryEstimatesIdOccupations$Outbound = {
  code: string;
  experience_level: string;
  time_percentage: string;
  primary?: boolean | undefined;
};

/** @internal */
export const PutV1SalaryEstimatesIdOccupations$outboundSchema: z.ZodType<
  PutV1SalaryEstimatesIdOccupations$Outbound,
  z.ZodTypeDef,
  PutV1SalaryEstimatesIdOccupations
> = z.object({
  code: z.string(),
  experienceLevel: PutV1SalaryEstimatesIdExperienceLevel$outboundSchema,
  timePercentage: z.string(),
  primary: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    experienceLevel: "experience_level",
    timePercentage: "time_percentage",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1SalaryEstimatesIdOccupations$ {
  /** @deprecated use `PutV1SalaryEstimatesIdOccupations$inboundSchema` instead. */
  export const inboundSchema = PutV1SalaryEstimatesIdOccupations$inboundSchema;
  /** @deprecated use `PutV1SalaryEstimatesIdOccupations$outboundSchema` instead. */
  export const outboundSchema =
    PutV1SalaryEstimatesIdOccupations$outboundSchema;
  /** @deprecated use `PutV1SalaryEstimatesIdOccupations$Outbound` instead. */
  export type Outbound = PutV1SalaryEstimatesIdOccupations$Outbound;
}

export function putV1SalaryEstimatesIdOccupationsToJSON(
  putV1SalaryEstimatesIdOccupations: PutV1SalaryEstimatesIdOccupations,
): string {
  return JSON.stringify(
    PutV1SalaryEstimatesIdOccupations$outboundSchema.parse(
      putV1SalaryEstimatesIdOccupations,
    ),
  );
}

export function putV1SalaryEstimatesIdOccupationsFromJSON(
  jsonString: string,
): SafeParseResult<PutV1SalaryEstimatesIdOccupations, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV1SalaryEstimatesIdOccupations$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV1SalaryEstimatesIdOccupations' from JSON`,
  );
}

/** @internal */
export const PutV1SalaryEstimatesIdRequestBody$inboundSchema: z.ZodType<
  PutV1SalaryEstimatesIdRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  annual_net_revenue: z.nullable(z.number()).optional(),
  zip_code: z.string(),
  occupations: z.array(
    z.lazy(() => PutV1SalaryEstimatesIdOccupations$inboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    "annual_net_revenue": "annualNetRevenue",
    "zip_code": "zipCode",
  });
});

/** @internal */
export type PutV1SalaryEstimatesIdRequestBody$Outbound = {
  annual_net_revenue?: number | null | undefined;
  zip_code: string;
  occupations: Array<PutV1SalaryEstimatesIdOccupations$Outbound>;
};

/** @internal */
export const PutV1SalaryEstimatesIdRequestBody$outboundSchema: z.ZodType<
  PutV1SalaryEstimatesIdRequestBody$Outbound,
  z.ZodTypeDef,
  PutV1SalaryEstimatesIdRequestBody
> = z.object({
  annualNetRevenue: z.nullable(z.number()).optional(),
  zipCode: z.string(),
  occupations: z.array(
    z.lazy(() => PutV1SalaryEstimatesIdOccupations$outboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    annualNetRevenue: "annual_net_revenue",
    zipCode: "zip_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1SalaryEstimatesIdRequestBody$ {
  /** @deprecated use `PutV1SalaryEstimatesIdRequestBody$inboundSchema` instead. */
  export const inboundSchema = PutV1SalaryEstimatesIdRequestBody$inboundSchema;
  /** @deprecated use `PutV1SalaryEstimatesIdRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PutV1SalaryEstimatesIdRequestBody$outboundSchema;
  /** @deprecated use `PutV1SalaryEstimatesIdRequestBody$Outbound` instead. */
  export type Outbound = PutV1SalaryEstimatesIdRequestBody$Outbound;
}

export function putV1SalaryEstimatesIdRequestBodyToJSON(
  putV1SalaryEstimatesIdRequestBody: PutV1SalaryEstimatesIdRequestBody,
): string {
  return JSON.stringify(
    PutV1SalaryEstimatesIdRequestBody$outboundSchema.parse(
      putV1SalaryEstimatesIdRequestBody,
    ),
  );
}

export function putV1SalaryEstimatesIdRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PutV1SalaryEstimatesIdRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV1SalaryEstimatesIdRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV1SalaryEstimatesIdRequestBody' from JSON`,
  );
}

/** @internal */
export const PutV1SalaryEstimatesIdRequest$inboundSchema: z.ZodType<
  PutV1SalaryEstimatesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "X-Gusto-API-Version":
    PutV1SalaryEstimatesIdHeaderXGustoAPIVersion$inboundSchema.default(
      "2024-04-01",
    ),
  uuid: z.string(),
  RequestBody: z.lazy(() => PutV1SalaryEstimatesIdRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "X-Gusto-API-Version": "xGustoAPIVersion",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type PutV1SalaryEstimatesIdRequest$Outbound = {
  "X-Gusto-API-Version": string;
  uuid: string;
  RequestBody: PutV1SalaryEstimatesIdRequestBody$Outbound;
};

/** @internal */
export const PutV1SalaryEstimatesIdRequest$outboundSchema: z.ZodType<
  PutV1SalaryEstimatesIdRequest$Outbound,
  z.ZodTypeDef,
  PutV1SalaryEstimatesIdRequest
> = z.object({
  xGustoAPIVersion: PutV1SalaryEstimatesIdHeaderXGustoAPIVersion$outboundSchema
    .default("2024-04-01"),
  uuid: z.string(),
  requestBody: z.lazy(() => PutV1SalaryEstimatesIdRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    xGustoAPIVersion: "X-Gusto-API-Version",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1SalaryEstimatesIdRequest$ {
  /** @deprecated use `PutV1SalaryEstimatesIdRequest$inboundSchema` instead. */
  export const inboundSchema = PutV1SalaryEstimatesIdRequest$inboundSchema;
  /** @deprecated use `PutV1SalaryEstimatesIdRequest$outboundSchema` instead. */
  export const outboundSchema = PutV1SalaryEstimatesIdRequest$outboundSchema;
  /** @deprecated use `PutV1SalaryEstimatesIdRequest$Outbound` instead. */
  export type Outbound = PutV1SalaryEstimatesIdRequest$Outbound;
}

export function putV1SalaryEstimatesIdRequestToJSON(
  putV1SalaryEstimatesIdRequest: PutV1SalaryEstimatesIdRequest,
): string {
  return JSON.stringify(
    PutV1SalaryEstimatesIdRequest$outboundSchema.parse(
      putV1SalaryEstimatesIdRequest,
    ),
  );
}

export function putV1SalaryEstimatesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutV1SalaryEstimatesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV1SalaryEstimatesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV1SalaryEstimatesIdRequest' from JSON`,
  );
}

/** @internal */
export const PutV1SalaryEstimatesIdResponse$inboundSchema: z.ZodType<
  PutV1SalaryEstimatesIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: HTTPMetadata$inboundSchema,
  "Salary-Estimate": SalaryEstimate$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "Salary-Estimate": "salaryEstimate",
  });
});

/** @internal */
export type PutV1SalaryEstimatesIdResponse$Outbound = {
  HttpMeta: HTTPMetadata$Outbound;
  "Salary-Estimate"?: SalaryEstimate$Outbound | undefined;
};

/** @internal */
export const PutV1SalaryEstimatesIdResponse$outboundSchema: z.ZodType<
  PutV1SalaryEstimatesIdResponse$Outbound,
  z.ZodTypeDef,
  PutV1SalaryEstimatesIdResponse
> = z.object({
  httpMeta: HTTPMetadata$outboundSchema,
  salaryEstimate: SalaryEstimate$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    salaryEstimate: "Salary-Estimate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV1SalaryEstimatesIdResponse$ {
  /** @deprecated use `PutV1SalaryEstimatesIdResponse$inboundSchema` instead. */
  export const inboundSchema = PutV1SalaryEstimatesIdResponse$inboundSchema;
  /** @deprecated use `PutV1SalaryEstimatesIdResponse$outboundSchema` instead. */
  export const outboundSchema = PutV1SalaryEstimatesIdResponse$outboundSchema;
  /** @deprecated use `PutV1SalaryEstimatesIdResponse$Outbound` instead. */
  export type Outbound = PutV1SalaryEstimatesIdResponse$Outbound;
}

export function putV1SalaryEstimatesIdResponseToJSON(
  putV1SalaryEstimatesIdResponse: PutV1SalaryEstimatesIdResponse,
): string {
  return JSON.stringify(
    PutV1SalaryEstimatesIdResponse$outboundSchema.parse(
      putV1SalaryEstimatesIdResponse,
    ),
  );
}

export function putV1SalaryEstimatesIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<PutV1SalaryEstimatesIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV1SalaryEstimatesIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV1SalaryEstimatesIdResponse' from JSON`,
  );
}
