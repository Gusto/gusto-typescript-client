/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Information about the payroll's status and expected dates
 */
export type PayrollPayrollStatusMetaType = {
  /**
   * true if the payroll may be cancelled.
   */
  cancellable?: boolean | undefined;
  /**
   * The date an employee will be paid if the payroll is submitted now.
   */
  expectedCheckDate?: string | undefined;
  /**
   * The normal check date for the associated pay period.
   */
  initialCheckDate?: string | undefined;
  /**
   * The time the employer's account will be debited if the payroll is submitted now.
   */
  expectedDebitTime?: string | undefined;
  /**
   * expected_check_date > initial_check_date.
   */
  payrollLate?: boolean | undefined;
  /**
   * Payroll must be submitted at or before this time to avoid late payroll.
   */
  initialDebitCutoffTime?: string | undefined;
};

/** @internal */
export const PayrollPayrollStatusMetaType$inboundSchema: z.ZodType<
  PayrollPayrollStatusMetaType,
  z.ZodTypeDef,
  unknown
> = z.object({
  cancellable: z.boolean().optional(),
  expected_check_date: z.string().optional(),
  initial_check_date: z.string().optional(),
  expected_debit_time: z.string().optional(),
  payroll_late: z.boolean().optional(),
  initial_debit_cutoff_time: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "expected_check_date": "expectedCheckDate",
    "initial_check_date": "initialCheckDate",
    "expected_debit_time": "expectedDebitTime",
    "payroll_late": "payrollLate",
    "initial_debit_cutoff_time": "initialDebitCutoffTime",
  });
});

/** @internal */
export type PayrollPayrollStatusMetaType$Outbound = {
  cancellable?: boolean | undefined;
  expected_check_date?: string | undefined;
  initial_check_date?: string | undefined;
  expected_debit_time?: string | undefined;
  payroll_late?: boolean | undefined;
  initial_debit_cutoff_time?: string | undefined;
};

/** @internal */
export const PayrollPayrollStatusMetaType$outboundSchema: z.ZodType<
  PayrollPayrollStatusMetaType$Outbound,
  z.ZodTypeDef,
  PayrollPayrollStatusMetaType
> = z.object({
  cancellable: z.boolean().optional(),
  expectedCheckDate: z.string().optional(),
  initialCheckDate: z.string().optional(),
  expectedDebitTime: z.string().optional(),
  payrollLate: z.boolean().optional(),
  initialDebitCutoffTime: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    expectedCheckDate: "expected_check_date",
    initialCheckDate: "initial_check_date",
    expectedDebitTime: "expected_debit_time",
    payrollLate: "payroll_late",
    initialDebitCutoffTime: "initial_debit_cutoff_time",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayrollPayrollStatusMetaType$ {
  /** @deprecated use `PayrollPayrollStatusMetaType$inboundSchema` instead. */
  export const inboundSchema = PayrollPayrollStatusMetaType$inboundSchema;
  /** @deprecated use `PayrollPayrollStatusMetaType$outboundSchema` instead. */
  export const outboundSchema = PayrollPayrollStatusMetaType$outboundSchema;
  /** @deprecated use `PayrollPayrollStatusMetaType$Outbound` instead. */
  export type Outbound = PayrollPayrollStatusMetaType$Outbound;
}

export function payrollPayrollStatusMetaTypeToJSON(
  payrollPayrollStatusMetaType: PayrollPayrollStatusMetaType,
): string {
  return JSON.stringify(
    PayrollPayrollStatusMetaType$outboundSchema.parse(
      payrollPayrollStatusMetaType,
    ),
  );
}

export function payrollPayrollStatusMetaTypeFromJSON(
  jsonString: string,
): SafeParseResult<PayrollPayrollStatusMetaType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PayrollPayrollStatusMetaType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PayrollPayrollStatusMetaType' from JSON`,
  );
}
