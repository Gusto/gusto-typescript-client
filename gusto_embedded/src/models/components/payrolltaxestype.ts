/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PayrollTaxesType = {
  /**
   * The tax name
   */
  name?: string | undefined;
  /**
   * Whether this tax is an employer or employee tax
   */
  employer?: boolean | undefined;
  /**
   * The total tax for the payroll
   */
  amount?: number | undefined;
};

/** @internal */
export const PayrollTaxesType$inboundSchema: z.ZodType<
  PayrollTaxesType,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  employer: z.boolean().optional(),
  amount: z.number().optional(),
});

/** @internal */
export type PayrollTaxesType$Outbound = {
  name?: string | undefined;
  employer?: boolean | undefined;
  amount?: number | undefined;
};

/** @internal */
export const PayrollTaxesType$outboundSchema: z.ZodType<
  PayrollTaxesType$Outbound,
  z.ZodTypeDef,
  PayrollTaxesType
> = z.object({
  name: z.string().optional(),
  employer: z.boolean().optional(),
  amount: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayrollTaxesType$ {
  /** @deprecated use `PayrollTaxesType$inboundSchema` instead. */
  export const inboundSchema = PayrollTaxesType$inboundSchema;
  /** @deprecated use `PayrollTaxesType$outboundSchema` instead. */
  export const outboundSchema = PayrollTaxesType$outboundSchema;
  /** @deprecated use `PayrollTaxesType$Outbound` instead. */
  export type Outbound = PayrollTaxesType$Outbound;
}

export function payrollTaxesTypeToJSON(
  payrollTaxesType: PayrollTaxesType,
): string {
  return JSON.stringify(
    PayrollTaxesType$outboundSchema.parse(payrollTaxesType),
  );
}

export function payrollTaxesTypeFromJSON(
  jsonString: string,
): SafeParseResult<PayrollTaxesType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PayrollTaxesType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PayrollTaxesType' from JSON`,
  );
}
