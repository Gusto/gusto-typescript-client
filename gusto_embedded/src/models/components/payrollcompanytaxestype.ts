/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PayrollCompanyTaxesType = {
  /**
   * The tax name
   */
  name?: string | undefined;
  /**
   * Whether this tax is an employer or employee tax
   */
  employer?: boolean | undefined;
  /**
   * The amount of this tax for the payroll
   */
  amount?: string | undefined;
};

/** @internal */
export const PayrollCompanyTaxesType$inboundSchema: z.ZodType<
  PayrollCompanyTaxesType,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  employer: z.boolean().optional(),
  amount: z.string().optional(),
});

/** @internal */
export type PayrollCompanyTaxesType$Outbound = {
  name?: string | undefined;
  employer?: boolean | undefined;
  amount?: string | undefined;
};

/** @internal */
export const PayrollCompanyTaxesType$outboundSchema: z.ZodType<
  PayrollCompanyTaxesType$Outbound,
  z.ZodTypeDef,
  PayrollCompanyTaxesType
> = z.object({
  name: z.string().optional(),
  employer: z.boolean().optional(),
  amount: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayrollCompanyTaxesType$ {
  /** @deprecated use `PayrollCompanyTaxesType$inboundSchema` instead. */
  export const inboundSchema = PayrollCompanyTaxesType$inboundSchema;
  /** @deprecated use `PayrollCompanyTaxesType$outboundSchema` instead. */
  export const outboundSchema = PayrollCompanyTaxesType$outboundSchema;
  /** @deprecated use `PayrollCompanyTaxesType$Outbound` instead. */
  export type Outbound = PayrollCompanyTaxesType$Outbound;
}

export function payrollCompanyTaxesTypeToJSON(
  payrollCompanyTaxesType: PayrollCompanyTaxesType,
): string {
  return JSON.stringify(
    PayrollCompanyTaxesType$outboundSchema.parse(payrollCompanyTaxesType),
  );
}

export function payrollCompanyTaxesTypeFromJSON(
  jsonString: string,
): SafeParseResult<PayrollCompanyTaxesType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PayrollCompanyTaxesType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PayrollCompanyTaxesType' from JSON`,
  );
}
