/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { GustoEmbedded } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Flows Post V1 Company Flows Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-company-flows-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.flows.create({
    companyUuid: "<id>",
    requestBody: {
      flowType: "company_onboarding",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    url:
      "https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ",
  });
});

test("Flows Post V1 Company Flows Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-company-flows-Basic"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.flows.create({
    companyUuid: "<id>",
    requestBody: {
      flowType: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Flows Post V1 Company Flows Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-company-flows-Resource"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.flows.create({
    companyUuid: "<id>",
    requestBody: {
      flowType: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Flows Post V1 Company Flows Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-company-flows-Nested"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.flows.create({
    companyUuid: "<id>",
    requestBody: {
      flowType: "<value>",
    },
  });
  expect(result).toBeDefined();
});
