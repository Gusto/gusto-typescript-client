/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { GustoEmbedded } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Signatories Post V1 Company Signatories Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-company-signatories-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.create({
    companyUuid: "<id>",
    requestBody: {
      ssn: "<value>",
      firstName: "Jed",
      lastName: "Johnson",
      email: "Annie.Wiegand16@gmail.com",
      title: "<value>",
      phone: "857-932-0220 x31016",
      birthday: "<value>",
      homeAddress: {
        street1: "<value>",
        city: "North Lilly",
        state: "North Carolina",
        zip: "05065",
      },
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "f8c653dc-0094-41fb-8670-45d6399afade",
    firstName: "Bob",
    lastName: "Johnson",
    title: "Owner",
    phone: "4239879876",
    email: "olin.okuneva@denesik.us",
    birthday: "2002-10-31",
    isAdmin: false,
    hasSsn: true,
    version: "49ea586f528411f5cfadfd54452b2423",
    identityVerificationStatus: "Skipped",
    homeAddress: {
      street1: "524 Roob Divide",
      street2: "Suite 565",
      city: "San Francisco",
      state: "CA",
      zip: "94107",
      country: "USA",
    },
  });
});

test("Signatories Post V1 Company Signatories Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-company-signatories-Basic"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.create({
    companyUuid: "<id>",
    requestBody: {
      ssn: "<value>",
      firstName: "Sven",
      lastName: "Kunze",
      email: "Otho78@gmail.com",
      title: "<value>",
      phone: "545.244.3901",
      birthday: "<value>",
      homeAddress: {
        street1: "<value>",
        city: "New Josiane",
        state: "Kentucky",
        zip: "11880",
      },
    },
  });
  expect(result).toBeDefined();
});

test("Signatories Post V1 Company Signatories Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-company-signatories-Resource"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.create({
    companyUuid: "<id>",
    requestBody: {
      ssn: "<value>",
      firstName: "Tania",
      lastName: "Lindgren",
      email: "Clotilde.Hermann67@gmail.com",
      title: "<value>",
      phone: "(952) 347-9826 x26246",
      birthday: "<value>",
      homeAddress: {
        street1: "<value>",
        city: "Montanafield",
        state: "Colorado",
        zip: "82730-9658",
      },
    },
  });
  expect(result).toBeDefined();
});

test("Signatories Post V1 Company Signatories Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-company-signatories-Nested"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.create({
    companyUuid: "<id>",
    requestBody: {
      ssn: "<value>",
      firstName: "Winfield",
      lastName: "Grady-Cruickshank",
      email: "Paula_Weber@hotmail.com",
      title: "<value>",
      phone: "(773) 321-8929",
      birthday: "<value>",
      homeAddress: {
        street1: "<value>",
        city: "Lakeland",
        state: "Louisiana",
        zip: "12614-6739",
      },
    },
  });
  expect(result).toBeDefined();
});

test("Signatories Get V1 Companies Company Uuid Signatories Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "get-v1-companies-company_uuid-signatories-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.get({
    companyUuid: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      uuid: "f8c653dc-0094-41fb-8670-45d6399afade",
      firstName: "Bob",
      lastName: "Johnson",
      title: "Owner",
      phone: "4239879876",
      email: "olin.okuneva@denesik.us",
      birthday: "2002-10-31",
      isAdmin: false,
      hasSsn: true,
      version: "49ea586f528411f5cfadfd54452b2423",
      identityVerificationStatus: "Skipped",
      homeAddress: {
        street1: "524 Roob Divide",
        street2: "Suite 565",
        city: "San Francisco",
        state: "CA",
        zip: "94107",
        country: "USA",
      },
    },
  ]);
});

test("Signatories Post V1 Companies Company Uuid Signatories Invite Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_uuid-signatories-invite-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.invite({
    companyUuid: "<id>",
    requestBody: {
      email: "Maureen_Wyman@yahoo.com",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "f8c653dc-0094-41fb-8670-45d6399afade",
    firstName: "Bob",
    lastName: "Johnson",
    title: "Owner",
    phone: "4239879876",
    email: "olin.okuneva@denesik.us",
    birthday: "2002-10-31",
    isAdmin: false,
    hasSsn: true,
    version: "49ea586f528411f5cfadfd54452b2423",
    identityVerificationStatus: "Skipped",
    homeAddress: {
      street1: "524 Roob Divide",
      street2: "Suite 565",
      city: "San Francisco",
      state: "CA",
      zip: "94107",
      country: "USA",
    },
  });
});

test("Signatories Post V1 Companies Company Uuid Signatories Invite Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_uuid-signatories-invite-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.invite({
    companyUuid: "<id>",
    requestBody: {
      email: "Fidel_Witting91@gmail.com",
    },
  });
  expect(result).toBeDefined();
});

test("Signatories Post V1 Companies Company Uuid Signatories Invite Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_uuid-signatories-invite-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.invite({
    companyUuid: "<id>",
    requestBody: {
      email: "David.Prosacco54@yahoo.com",
    },
  });
  expect(result).toBeDefined();
});

test("Signatories Post V1 Companies Company Uuid Signatories Invite Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_uuid-signatories-invite-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.invite({
    companyUuid: "<id>",
    requestBody: {
      email: "Cassie.Corwin26@yahoo.com",
    },
  });
  expect(result).toBeDefined();
});

test("Signatories Put V1 Companies Company Uuid Signatories Signatory Uuid Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_uuid-signatories-signatory_uuid-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.update({
    companyUuid: "<id>",
    signatoryUuid: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "f8c653dc-0094-41fb-8670-45d6399afade",
    firstName: "Bob",
    lastName: "Johnson",
    title: "Owner",
    phone: "4239879876",
    email: "olin.okuneva@denesik.us",
    birthday: "2002-10-31",
    isAdmin: false,
    hasSsn: true,
    version: "49ea586f528411f5cfadfd54452b2423",
    identityVerificationStatus: "Skipped",
    homeAddress: {
      street1: "524 Roob Divide",
      street2: "Suite 565",
      city: "San Francisco",
      state: "CA",
      zip: "94107",
      country: "USA",
    },
  });
});

test("Signatories Put V1 Companies Company Uuid Signatories Signatory Uuid Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_uuid-signatories-signatory_uuid-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.update({
    companyUuid: "<id>",
    signatoryUuid: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Signatories Put V1 Companies Company Uuid Signatories Signatory Uuid Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_uuid-signatories-signatory_uuid-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.update({
    companyUuid: "<id>",
    signatoryUuid: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Signatories Put V1 Companies Company Uuid Signatories Signatory Uuid Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_uuid-signatories-signatory_uuid-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.signatories.update({
    companyUuid: "<id>",
    signatoryUuid: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Signatories Delete V1 Companies Company Uuid Signatories Signatory Uuid", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "delete-v1-companies-company_uuid-signatories-signatory_uuid",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  await gustoEmbedded.signatories.delete({
    companyUuid: "<id>",
    signatoryUuid: "<id>",
  });
});
