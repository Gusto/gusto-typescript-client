/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { GustoEmbedded } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Contractordocuments Get V1 Contractor Documents Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("get-v1-contractor-documents-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.contractorDocuments.list({
    contractorUuid: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      uuid: "e83b3c20-dc4f-4382-bee3-b478fc42c68b",
      title: "Taxpayer Identification (Form W-9)",
      name: "taxpayer_identification_form_w_9",
      recipientType: "Contractor",
      recipientUuid: "f079c253-29e2-45e2-b384-2cc615c9c568",
      pages: [
        {
          imageUrl:
            "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/0.jpg",
          pageNumber: 0,
        },
        {
          imageUrl:
            "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/1.jpg",
          pageNumber: 1,
        },
      ],
      fields: [
        {
          key: "text1596141656513",
          value: null,
          x: 69,
          y: 94,
          width: 261,
          height: 13,
          pageNumber: 0,
          dataType: "text",
          required: true,
        },
        {
          key: "optional_text1596141704672",
          value: null,
          x: 69,
          y: 118,
          width: 262,
          height: 13,
          pageNumber: 0,
          dataType: "text",
          required: false,
        },
      ],
      signedAt: null,
      description:
        "Form W-9, Request for Taxpayer Identification Number and Certification",
      requiresSigning: true,
      draft: false,
      year: null,
      quarter: null,
    },
  ]);
});

test("Contractordocuments Get V1 Contractor Document Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("get-v1-contractor-document-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.contractorDocuments.get({
    documentUuid: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "e83b3c20-dc4f-4382-bee3-b478fc42c68b",
    title: "Taxpayer Identification (Form W-9)",
    name: "taxpayer_identification_form_w_9",
    recipientType: "Contractor",
    recipientUuid: "f079c253-29e2-45e2-b384-2cc615c9c568",
    pages: [
      {
        imageUrl:
          "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/0.jpg",
        pageNumber: 0,
      },
      {
        imageUrl:
          "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/1.jpg",
        pageNumber: 1,
      },
    ],
    fields: [
      {
        key: "text1596141656513",
        value: null,
        x: 69,
        y: 94,
        width: 261,
        height: 13,
        pageNumber: 0,
        dataType: "text",
        required: true,
      },
      {
        key: "optional_text1596141704672",
        value: null,
        x: 69,
        y: 118,
        width: 262,
        height: 13,
        pageNumber: 0,
        dataType: "text",
        required: false,
      },
    ],
    signedAt: null,
    description:
      "Form W-9, Request for Taxpayer Identification Number and Certification",
    requiresSigning: true,
    draft: false,
    year: null,
    quarter: null,
  });
});

test("Contractordocuments Get V1 Contractor Document Pdf Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("get-v1-contractor-document-pdf-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.contractorDocuments.getPdf({
    documentUuid: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "e83b3c20-dc4f-4382-bee3-b478fc42c68b",
    documentUrl:
      "https://app.gusto-demo.com/assets/personal_documents/23/original.pdf?1724367941",
  });
});

test("Contractordocuments Put V1 Contractor Document Sign Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-contractor-document-sign-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.contractorDocuments.sign({
    documentUuid: "<id>",
    requestBody: {
      fields: [
        {},
        {},
        {},
      ],
      agree: true,
      signedByIpAddress: "<value>",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "e83b3c20-dc4f-4382-bee3-b478fc42c68b",
    title: "Taxpayer Identification (Form W-9)",
    name: "taxpayer_identification_form_w_9",
    recipientType: "Contractor",
    recipientUuid: "f079c253-29e2-45e2-b384-2cc615c9c568",
    signedAt: "2024-09-03T16:39:22.000-07:00",
    description:
      "Form W-9, Request for Taxpayer Identification Number and Certification",
    requiresSigning: false,
    draft: false,
    year: null,
    quarter: null,
  });
});

test("Contractordocuments Put V1 Contractor Document Sign Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-contractor-document-sign-Basic"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.contractorDocuments.sign({
    documentUuid: "<id>",
    requestBody: {
      fields: [],
      agree: true,
      signedByIpAddress: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Contractordocuments Put V1 Contractor Document Sign Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-contractor-document-sign-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.contractorDocuments.sign({
    documentUuid: "<id>",
    requestBody: {
      fields: [
        {},
        {},
        {},
      ],
      agree: true,
      signedByIpAddress: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Contractordocuments Put V1 Contractor Document Sign Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-contractor-document-sign-Nested"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.contractorDocuments.sign({
    documentUuid: "<id>",
    requestBody: {
      fields: [
        {},
        {},
      ],
      agree: true,
      signedByIpAddress: "<value>",
    },
  });
  expect(result).toBeDefined();
});
