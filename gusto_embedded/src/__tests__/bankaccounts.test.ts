/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { GustoEmbedded } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Bankaccounts Post V1 Companies Company Id Bank Accounts Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_id-bank-accounts-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.create({
    companyId: "<id>",
    requestBody: {
      routingNumber: "115092013",
      accountNumber: "9775014007",
      accountType: "Checking",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "1263eae5-4411-48d9-bd6d-18ed93082e65",
    companyUuid: "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36",
    accountType: "Checking",
    routingNumber: "851070439",
    hiddenAccountNumber: "XXXX4087",
    verificationStatus: "verified",
    verificationType: "bank_deposits",
    name: "Employer Funding Account",
  });
});

test("Bankaccounts Post V1 Companies Company Id Bank Accounts Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_id-bank-accounts-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.create({
    companyId: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Bankaccounts Post V1 Companies Company Id Bank Accounts Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_id-bank-accounts-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.create({
    companyId: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Bankaccounts Post V1 Companies Company Id Bank Accounts Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_id-bank-accounts-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.create({
    companyId: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Bankaccounts Get V1 Companies Company Id Bank Accounts Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "get-v1-companies-company_id-bank-accounts-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.list({
    companyId: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      uuid: "1263eae5-4411-48d9-bd6d-18ed93082e65",
      companyUuid: "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36",
      accountType: "Checking",
      routingNumber: "851070439",
      hiddenAccountNumber: "XXXX4087",
      verificationStatus: "verified",
      verificationType: "bank_deposits",
      name: "Employer Funding Account",
    },
  ]);
});

test("Bankaccounts Put V1 Companies Company Id Bank Accounts Verify Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_id-bank-accounts-verify-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.verify({
    bankAccountUuid: "<id>",
    companyId: "<id>",
    requestBody: {
      deposit1: 0.02,
      deposit2: 0.42,
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "1263eae5-4411-48d9-bd6d-18ed93082e65",
    companyUuid: "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36",
    accountType: "Checking",
    routingNumber: "851070439",
    hiddenAccountNumber: "XXXX4087",
    verificationStatus: "verified",
    verificationType: "bank_deposits",
    name: "Employer Funding Account",
  });
});

test("Bankaccounts Put V1 Companies Company Id Bank Accounts Verify Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_id-bank-accounts-verify-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.verify({
    bankAccountUuid: "<id>",
    companyId: "<id>",
    requestBody: {
      deposit1: 7888.92,
      deposit2: 1895.95,
    },
  });
  expect(result).toBeDefined();
});

test("Bankaccounts Put V1 Companies Company Id Bank Accounts Verify Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_id-bank-accounts-verify-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.verify({
    bankAccountUuid: "<id>",
    companyId: "<id>",
    requestBody: {
      deposit1: 1870.97,
      deposit2: 2271.38,
    },
  });
  expect(result).toBeDefined();
});

test("Bankaccounts Put V1 Companies Company Id Bank Accounts Verify Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_id-bank-accounts-verify-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.verify({
    bankAccountUuid: "<id>",
    companyId: "<id>",
    requestBody: {
      deposit1: 7567.55,
      deposit2: 3940.54,
    },
  });
  expect(result).toBeDefined();
});

test("Bankaccounts Post V1 Plaid Processor Token Create A Company Bank Account", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-plaid-processor_token-Create a company bank account",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.createFromProcessorToken({
    requestBody: {
      ownerType: "Company",
      ownerId: "ef279fbd-0fc6-4cf1-a977-6939d621c429",
      processorToken: "processor-sandbox-0asd1-a92nc",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "493064d9-7add-4beb-9379-b10d2aea7313",
  });
});

test("Bankaccounts Post V1 Plaid Processor Token Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-plaid-processor_token-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.createFromProcessorToken({
    requestBody: {
      ownerType: "Company",
      ownerId: "<id>",
      processorToken: "<value>",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "1263eae5-4411-48d9-bd6d-18ed93082e65",
    companyUuid: "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36",
    accountType: "Checking",
    routingNumber: "851070439",
    hiddenAccountNumber: "XXXX4087",
    verificationStatus: "verified",
    verificationType: "plaid_external",
    name: "Employer Funding Account",
  });
});

test("Bankaccounts Post V1 Plaid Processor Token Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-plaid-processor_token-Basic"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.createFromProcessorToken({
    requestBody: {
      ownerType: "Company",
      ownerId: "<id>",
      processorToken: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Bankaccounts Post V1 Plaid Processor Token Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-plaid-processor_token-Resource"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.createFromProcessorToken({
    requestBody: {
      ownerType: "Company",
      ownerId: "<id>",
      processorToken: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Bankaccounts Post V1 Plaid Processor Token Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-plaid-processor_token-Nested"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.bankAccounts.createFromProcessorToken({
    requestBody: {
      ownerType: "Company",
      ownerId: "<id>",
      processorToken: "<value>",
    },
  });
  expect(result).toBeDefined();
});
