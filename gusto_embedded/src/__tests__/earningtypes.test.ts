/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { GustoEmbedded } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Earningtypes Post V1 Companies Company Id Earning Types Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_id-earning_types-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.earningTypes.create({
    companyId: "<id>",
    requestBody: {
      name: "Gym Membership Stipend",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    name: "Gym Membership Stipend",
    uuid: "f4dc8972-8830-4c07-b623-349a04b040d7",
  });
});

test("Earningtypes Post V1 Companies Company Id Earning Types Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_id-earning_types-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.earningTypes.create({
    companyId: "<id>",
    requestBody: {
      name: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Earningtypes Post V1 Companies Company Id Earning Types Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_id-earning_types-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.earningTypes.create({
    companyId: "<id>",
    requestBody: {
      name: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Earningtypes Post V1 Companies Company Id Earning Types Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-v1-companies-company_id-earning_types-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.earningTypes.create({
    companyId: "<id>",
    requestBody: {
      name: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Earningtypes Get V1 Companies Company Id Earning Types Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "get-v1-companies-company_id-earning_types-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.earningTypes.getAll({
    companyId: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    default: [
      {
        name: "Bonus",
        uuid: "b82e35c5-d7c6-4705-9e16-9f87499ade18",
      },
      {
        name: "Cash Tips",
        uuid: "f5618c94-ed7d-4366-b2c4-ff05e430064f",
      },
      {
        name: "Commission",
        uuid: "60191999-004a-49d9-b163-630574433653",
      },
      {
        name: "Correction Payment",
        uuid: "368226e0-8e8c-48f0-bc91-aee46caafbc9",
      },
      {
        name: "Minimum Wage Adjustment",
        uuid: "88a2e519-9ff5-4c19-9071-6a709f3c2939",
      },
      {
        name: "Paycheck Tips",
        uuid: "a3eaf03d-e712-4144-8f9b-71a85528adcf",
      },
      {
        name: "Severance",
        uuid: "a6a2eba7-6c7d-4ced-bbe8-43452fbc9f63",
      },
    ],
    custom: [
      {
        name: "Gym Membership Stipend",
        uuid: "6b4a8efb-db90-4c13-a75f-aae11b3f4ff9",
      },
    ],
  });
});

test("Earningtypes Put V1 Companies Company Id Earning Types Earning Type Uuid Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_id-earning_types-earning_type_uuid-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.earningTypes.update({
    companyId: "<id>",
    earningTypeUuid: "<id>",
    requestBody: {
      name: "Gym Membership Stipend",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    name: "Gym Membership Stipend",
    uuid: "f4dc8972-8830-4c07-b623-349a04b040d7",
  });
});

test("Earningtypes Put V1 Companies Company Id Earning Types Earning Type Uuid Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_id-earning_types-earning_type_uuid-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.earningTypes.update({
    companyId: "<id>",
    earningTypeUuid: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Earningtypes Put V1 Companies Company Id Earning Types Earning Type Uuid Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_id-earning_types-earning_type_uuid-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.earningTypes.update({
    companyId: "<id>",
    earningTypeUuid: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Earningtypes Put V1 Companies Company Id Earning Types Earning Type Uuid Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-companies-company_id-earning_types-earning_type_uuid-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.earningTypes.update({
    companyId: "<id>",
    earningTypeUuid: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Earningtypes Delete V1 Companies Company Id Earning Types Earning Type Uuid", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "delete-v1-companies-company_id-earning_types-earning_type_uuid",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  await gustoEmbedded.earningTypes.deactivate({
    companyId: "<id>",
    earningTypeUuid: "<id>",
  });
});
