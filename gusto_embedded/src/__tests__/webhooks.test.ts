/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { GustoEmbedded } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Webhooks Post V1 Webhook Subscription Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-webhook-subscription-Example"),
  });

  const result = await gustoEmbedded.webhooks.createSubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    requestBody: {
      url: "https://partner-app.com/subscriber",
      subscriptionTypes: [
        "Company",
        "Employee",
      ],
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "c5fdae57-5483-4529-9aae-f0edceed92d4",
    url: "https://the-partner-app.com/subscriber",
    status: "verified",
    subscriptionTypes: [
      "BankAccount",
      "Company",
      "CompanyBenefit",
      "Contractor",
      "ContractorPayment",
      "Employee",
      "EmployeeBenefit",
      "EmployeeJobCompensation",
      "ExternalPayroll",
      "Form",
      "Location",
      "Notification",
      "Payroll",
      "PaySchedule",
      "Signatory",
    ],
  });
});

test("Webhooks Post V1 Webhook Subscription Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-webhook-subscription-Basic"),
  });

  const result = await gustoEmbedded.webhooks.createSubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    requestBody: {
      url: "https://dense-bidet.name/",
      subscriptionTypes: [
        "EmployeeJobCompensation",
      ],
    },
  });
  expect(result).toBeDefined();
});

test("Webhooks Post V1 Webhook Subscription Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-webhook-subscription-Resource"),
  });

  const result = await gustoEmbedded.webhooks.createSubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    requestBody: {
      url: "https://quarterly-omelet.biz",
      subscriptionTypes: [
        "EmployeeJobCompensation",
        "Notification",
      ],
    },
  });
  expect(result).toBeDefined();
});

test("Webhooks Post V1 Webhook Subscription Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-webhook-subscription-Nested"),
  });

  const result = await gustoEmbedded.webhooks.createSubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    requestBody: {
      url: "https://stunning-hope.com",
      subscriptionTypes: [
        "Payroll",
      ],
    },
  });
  expect(result).toBeDefined();
});

test("Webhooks Get V1 Webhook Subscriptions Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("get-v1-webhook-subscriptions-Example"),
  });

  const result = await gustoEmbedded.webhooks.listSubscriptions({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {});
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      uuid: "dcceb38a-46be-4110-9d1d-1b3384c3b906",
      url:
        "https://6116-2603-6000-8900-3d42-58e7-f1e3-b394-1f21.ngrok.io/subscriber",
      status: "pending",
      subscriptionTypes: [
        "BankAccount",
        "Company",
        "CompanyBenefit",
        "Contractor",
        "ContractorPayment",
        "Employee",
        "EmployeeBenefit",
        "EmployeeJobCompensation",
        "ExternalPayroll",
        "Form",
        "Location",
        "Notification",
        "Payroll",
        "PaySchedule",
        "Signatory",
      ],
    },
  ]);
});

test("Webhooks Put V1 Webhook Subscription Uuid Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-webhook-subscription-uuid-Example",
    ),
  });

  const result = await gustoEmbedded.webhooks.updateSubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    webhookSubscriptionUuid: "<id>",
    requestBody: {
      subscriptionTypes: [
        "Company",
        "Employee",
      ],
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "c5fdae57-5483-4529-9aae-f0edceed92d4",
    url: "https://the-partner-app.com/subscriber",
    status: "verified",
    subscriptionTypes: [
      "BankAccount",
      "Company",
      "CompanyBenefit",
      "Contractor",
      "ContractorPayment",
      "Employee",
      "EmployeeBenefit",
      "EmployeeJobCompensation",
      "ExternalPayroll",
      "Form",
      "Location",
      "Notification",
      "Payroll",
      "PaySchedule",
      "Signatory",
    ],
  });
});

test("Webhooks Put V1 Webhook Subscription Uuid Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-webhook-subscription-uuid-Basic"),
  });

  const result = await gustoEmbedded.webhooks.updateSubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    webhookSubscriptionUuid: "<id>",
    requestBody: {
      subscriptionTypes: [
        "Company",
        "ExternalPayroll",
        "Payroll",
      ],
    },
  });
  expect(result).toBeDefined();
});

test("Webhooks Put V1 Webhook Subscription Uuid Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-webhook-subscription-uuid-Resource",
    ),
  });

  const result = await gustoEmbedded.webhooks.updateSubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    webhookSubscriptionUuid: "<id>",
    requestBody: {
      subscriptionTypes: [],
    },
  });
  expect(result).toBeDefined();
});

test("Webhooks Put V1 Webhook Subscription Uuid Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-webhook-subscription-uuid-Nested"),
  });

  const result = await gustoEmbedded.webhooks.updateSubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    webhookSubscriptionUuid: "<id>",
    requestBody: {
      subscriptionTypes: [
        "EmployeeJobCompensation",
        "Signatory",
      ],
    },
  });
  expect(result).toBeDefined();
});

test("Webhooks Get V1 Webhook Subscription Uuid Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "get-v1-webhook-subscription-uuid-Example",
    ),
  });

  const result = await gustoEmbedded.webhooks.get({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    webhookSubscriptionUuid: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "c5fdae57-5483-4529-9aae-f0edceed92d4",
    url: "https://the-partner-app.com/subscriber",
    status: "verified",
    subscriptionTypes: [
      "BankAccount",
      "Company",
      "CompanyBenefit",
      "Contractor",
      "ContractorPayment",
      "Employee",
      "EmployeeBenefit",
      "EmployeeJobCompensation",
      "ExternalPayroll",
      "Form",
      "Location",
      "Notification",
      "Payroll",
      "PaySchedule",
      "Signatory",
    ],
  });
});

test("Webhooks Delete V1 Webhook Subscription Uuid", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("delete-v1-webhook-subscription-uuid"),
  });

  await gustoEmbedded.webhooks.delete({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    webhookSubscriptionUuid: "<id>",
  });
});

test("Webhooks Put V1 Verify Webhook Subscription Uuid Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-verify-webhook-subscription-uuid-Example",
    ),
  });

  const result = await gustoEmbedded.webhooks.verifySubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    webhookSubscriptionUuid: "<id>",
    requestBody: {
      verificationToken: "asefasedfe23e234easd",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "c5fdae57-5483-4529-9aae-f0edceed92d4",
    url: "https://the-partner-app.com/subscriber",
    status: "verified",
    subscriptionTypes: [
      "BankAccount",
      "Company",
      "CompanyBenefit",
      "Contractor",
      "ContractorPayment",
      "Employee",
      "EmployeeBenefit",
      "EmployeeJobCompensation",
      "ExternalPayroll",
      "Form",
      "Location",
      "Notification",
      "Payroll",
      "PaySchedule",
      "Signatory",
    ],
  });
});

test("Webhooks Put V1 Verify Webhook Subscription Uuid Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-verify-webhook-subscription-uuid-Basic",
    ),
  });

  const result = await gustoEmbedded.webhooks.verifySubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    webhookSubscriptionUuid: "<id>",
    requestBody: {
      verificationToken: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Webhooks Put V1 Verify Webhook Subscription Uuid Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-verify-webhook-subscription-uuid-Resource",
    ),
  });

  const result = await gustoEmbedded.webhooks.verifySubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    webhookSubscriptionUuid: "<id>",
    requestBody: {
      verificationToken: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Webhooks Put V1 Verify Webhook Subscription Uuid Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-v1-verify-webhook-subscription-uuid-Nested",
    ),
  });

  const result = await gustoEmbedded.webhooks.verifySubscription({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    webhookSubscriptionUuid: "<id>",
    requestBody: {
      verificationToken: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Webhooks Get V1 Webhook Subscription Verification Token Uuid", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "get-v1-webhook-subscription-verification-token-uuid",
    ),
  });

  await gustoEmbedded.webhooks.requestVerificationToken({
    systemAccessAuth: process.env["GUSTOEMBEDDED_SYSTEM_ACCESS_AUTH"] ?? "",
  }, {
    webhookSubscriptionUuid: "<id>",
  });
});
