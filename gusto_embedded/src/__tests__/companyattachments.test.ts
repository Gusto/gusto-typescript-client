/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { GustoEmbedded } from "../index.js";
import { filesToStream } from "./files.js";
import { createTestHTTPClient } from "./testclient.js";

test("Companyattachments Get V1 Companies Attachment Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("get-v1-companies-attachment-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.companyAttachments.getDetails({
    companyId: "<id>",
    companyAttachmentUuid: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "1263eae5-4411-48d9-bd6d-18ed93082e65",
    name: "Company_Attachment_File.pdf",
    category: "gep_notice",
    uploadTime: "2022-02-01T00:00:00.000Z",
  });
});

test("Companyattachments Get V1 Companies Attachments Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("get-v1-companies-attachments-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.companyAttachments.getAll({
    companyId: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      uuid: "5de11791-98fd-4587-9ed0-d5d804b8e647",
      name: "Company_Attachment_File1.pdf",
      category: "gep_notice",
      uploadTime: "2022-02-01T00:00:00.000Z",
    },
    {
      uuid: "987058cc-23ee-46e9-81ef-5cee086cceca",
      name: "Company_Attachment_File2.pdf",
      category: "gep_notice",
      uploadTime: "2022-02-01T00:00:00.000Z",
    },
  ]);
});

test("Companyattachments Post V1 Companies Attachment Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-companies-attachment-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.companyAttachments.create({
    companyId: "<id>",
    requestBody: {
      category: "gep_notice",
      document: {
        fileName: "example.file",
        content: filesToStream(".speakeasy/testfiles/example.file"),
      },
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "1263eae5-4411-48d9-bd6d-18ed93082e65",
    name: "Company_Attachment_File.pdf",
    category: "gep_notice",
    uploadTime: "2022-02-01T00:00:00.000Z",
  });
});

test("Companyattachments Post V1 Companies Attachment Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-companies-attachment-Basic"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.companyAttachments.create({
    companyId: "<id>",
    requestBody: {
      category: "compliance",
      document: {
        fileName: "example.file",
        content: filesToStream(".speakeasy/testfiles/example.file"),
      },
    },
  });
  expect(result).toBeDefined();
});

test("Companyattachments Post V1 Companies Attachment Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-companies-attachment-Resource"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.companyAttachments.create({
    companyId: "<id>",
    requestBody: {
      category: "gep_notice",
      document: {
        fileName: "example.file",
        content: filesToStream(".speakeasy/testfiles/example.file"),
      },
    },
  });
  expect(result).toBeDefined();
});

test("Companyattachments Post V1 Companies Attachment Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-companies-attachment-Nested"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.companyAttachments.create({
    companyId: "<id>",
    requestBody: {
      category: "gep_notice",
      document: {
        fileName: "example.file",
        content: filesToStream(".speakeasy/testfiles/example.file"),
      },
    },
  });
  expect(result).toBeDefined();
});
