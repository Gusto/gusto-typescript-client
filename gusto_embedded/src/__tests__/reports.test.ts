/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { GustoEmbedded } from "../index.js";
import { RFCDate } from "../types/index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Reports Post Companies Company Uuid Reports Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-companies-company_uuid-reports-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.reports.create({
    companyUuid: "<id>",
    requestBody: {
      columns: [
        "employee_compensation_time_period",
        "employee_social_security_tax",
        "bank_account_account_number",
      ],
      groupings: [
        "work_address_state",
      ],
      fileType: "csv",
      startDate: new RFCDate("2024-01-01"),
      endDate: new RFCDate("2024-04-01"),
      dismissedStartDate: new RFCDate("2024-01-01"),
      dismissedEndDate: new RFCDate("2024-04-01"),
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    requestUuid: "p83d0ca8-7d41-42a9-834y-7d218ef6cb20",
    companyUuid: "z83d0ca8-7d41-42a9-834y-7d218ef6cb20",
    customName: "CustomReport",
    fileType: "csv",
  });
});

test("Reports Post Companies Company Uuid Reports Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-companies-company_uuid-reports-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.reports.create({
    companyUuid: "<id>",
    requestBody: {
      columns: [],
      groupings: [
        "employee",
      ],
      fileType: "json",
      startDate: new RFCDate("2024-01-01"),
      endDate: new RFCDate("2024-04-01"),
      dismissedStartDate: new RFCDate("2024-01-01"),
      dismissedEndDate: new RFCDate("2024-04-01"),
    },
  });
  expect(result).toBeDefined();
});

test("Reports Post Companies Company Uuid Reports Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-companies-company_uuid-reports-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.reports.create({
    companyUuid: "<id>",
    requestBody: {
      columns: [
        "employee_taxes",
        "check_date",
      ],
      groupings: [
        "work_address",
        "payroll",
        "work_address",
      ],
      fileType: "json",
      startDate: new RFCDate("2024-01-01"),
      endDate: new RFCDate("2024-04-01"),
      dismissedStartDate: new RFCDate("2024-01-01"),
      dismissedEndDate: new RFCDate("2024-04-01"),
    },
  });
  expect(result).toBeDefined();
});

test("Reports Post Companies Company Uuid Reports Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-companies-company_uuid-reports-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.reports.create({
    companyUuid: "<id>",
    requestBody: {
      columns: [],
      groupings: [
        "work_address_state",
        "work_address",
      ],
      fileType: "csv",
      startDate: new RFCDate("2024-01-01"),
      endDate: new RFCDate("2024-04-01"),
      dismissedStartDate: new RFCDate("2024-01-01"),
      dismissedEndDate: new RFCDate("2024-04-01"),
    },
  });
  expect(result).toBeDefined();
});

test("Reports Get Reports Report Uuid Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("get-reports-report_uuid-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.reports.get({
    reportUuid: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    requestUuid: "p83d0ca8-7d41-42a9-834y-7d218ef6cb20",
    status: "succeeded",
    reportUrls: [
      "https://report.url.com",
    ],
  });
});

test("Reports Get Companies Company Uuid Report Templates Report Type Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "get-companies-company_uuid-report-templates-report_type-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.reports.getTemplate({
    companyUuid: "<id>",
    reportType: "<value>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    columns: [
      "regular_rate",
      "regular_hours",
      "regular_earnings",
    ],
    groupings: [
      "payroll",
      "employee",
    ],
    companyUuid: "p83d0ca8-7d41-42a9-834y-7d218ef6cb20",
    reportType: "payroll_journal",
  });
});
