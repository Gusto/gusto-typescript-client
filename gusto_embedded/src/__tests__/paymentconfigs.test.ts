/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { GustoEmbedded } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Paymentconfigs Get V1 Company Payment Configs Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("get-v1-company-payment-configs-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.paymentConfigs.get({
    companyUuid: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    companyUuid: "423dd616-6dbc-4724-938a-403f6217a933",
    partnerUuid: "556f05d0-48e0-4c47-bce5-db9aea923043",
    fastPaymentLimit: "5000",
    paymentSpeed: "2-day",
  });
});

test("Paymentconfigs Put V1 Company Payment Configs Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-company-payment-configs-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.paymentConfigs.update({
    companyUuid: "<id>",
    requestBody: {
      fastPaymentLimit: "5000",
      paymentSpeed: "2-day",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    companyUuid: "423dd616-6dbc-4724-938a-403f6217a933",
    partnerUuid: "556f05d0-48e0-4c47-bce5-db9aea923043",
    fastPaymentLimit: "5000",
    paymentSpeed: "2-day",
  });
});

test("Paymentconfigs Put V1 Company Payment Configs Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-company-payment-configs-Basic"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.paymentConfigs.update({
    companyUuid: "<id>",
    requestBody: {
      paymentSpeed: "2-day",
    },
  });
  expect(result).toBeDefined();
});

test("Paymentconfigs Put V1 Company Payment Configs Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-company-payment-configs-Resource"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.paymentConfigs.update({
    companyUuid: "<id>",
    requestBody: {
      fastPaymentLimit: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Paymentconfigs Put V1 Company Payment Configs Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-company-payment-configs-Nested"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.paymentConfigs.update({
    companyUuid: "<id>",
    requestBody: {
      paymentSpeed: "2-day",
    },
  });
  expect(result).toBeDefined();
});
