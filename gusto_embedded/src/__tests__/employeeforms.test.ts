/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { GustoEmbedded } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Employeeforms Post V1 Sandbox Generate W2 Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-sandbox-generate_w2-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.employeeForms.generateW2({
    requestBody: {
      employeeId: "<id>",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    employeeUuid: "19394e76-a866-4570-b237-9a26b0163907",
    uuid: "bf5b2496-26df-436e-b465-eae4ed5c8021",
    name: "US_W-2",
    title: "Draft Form W-2: 2021",
    description: "Form W-2 records your annual wages and taxes.",
    draft: false,
    requiresSigning: false,
  });
});

test("Employeeforms Post V1 Sandbox Generate W2 Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-sandbox-generate_w2-Basic"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.employeeForms.generateW2({
    requestBody: {
      employeeId: "<id>",
    },
  });
  expect(result).toBeDefined();
});

test("Employeeforms Post V1 Sandbox Generate W2 Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-sandbox-generate_w2-Resource"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.employeeForms.generateW2({
    requestBody: {
      employeeId: "<id>",
    },
  });
  expect(result).toBeDefined();
});

test("Employeeforms Post V1 Sandbox Generate W2 Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("post-v1-sandbox-generate_w2-Nested"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.employeeForms.generateW2({
    requestBody: {
      employeeId: "<id>",
    },
  });
  expect(result).toBeDefined();
});

test("Employeeforms Get V1 Employee Forms Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("get-v1-employee-forms-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.employeeForms.getAll({
    employeeId: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      uuid: "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
      name: "company_direct_deposit",
      title: "Direct Deposit Authorization",
      description:
        "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.",
      draft: false,
      requiresSigning: true,
    },
  ]);
});

test("Employeeforms Get V1 Employee Form Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("get-v1-employee-form-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.employeeForms.getForm({
    employeeId: "<id>",
    formId: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
    name: "company_direct_deposit",
    title: "Direct Deposit Authorization",
    description:
      "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.",
    draft: false,
    requiresSigning: true,
  });
});

test("Employeeforms Get V1 Employee Form Pdf Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("get-v1-employee-form-pdf-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.employeeForms.getPdf({
    employeeId: "<id>",
    formId: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
    documentUrl:
      "https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020",
  });
});

test("Employeeforms Put V1 Employee Form Sign Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-employee-form-sign-Example"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.employeeForms.sign({
    employeeId: "<id>",
    formId: "<id>",
    requestBody: {
      signatureText: "Jane Smith",
      agree: true,
      signedByIpAddress: "192.168.0.1",
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    uuid: "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
    name: "company_direct_deposit",
    title: "Direct Deposit Authorization",
    description:
      "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.",
    draft: false,
    requiresSigning: true,
  });
});

test("Employeeforms Put V1 Employee Form Sign Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-employee-form-sign-Basic"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.employeeForms.sign({
    employeeId: "<id>",
    formId: "<id>",
    requestBody: {
      signatureText: "<value>",
      agree: false,
      signedByIpAddress: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Employeeforms Put V1 Employee Form Sign Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-employee-form-sign-Resource"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.employeeForms.sign({
    employeeId: "<id>",
    formId: "<id>",
    requestBody: {
      signatureText: "<value>",
      agree: true,
      signedByIpAddress: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Employeeforms Put V1 Employee Form Sign Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient("put-v1-employee-form-sign-Nested"),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.employeeForms.sign({
    employeeId: "<id>",
    formId: "<id>",
    requestBody: {
      signatureText: "<value>",
      agree: true,
      signedByIpAddress: "<value>",
    },
  });
  expect(result).toBeDefined();
});
