/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { GustoEmbedded } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Holidaypaypolicies Get Companies Company Uuid Holiday Pay Policy Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "get-companies-company_uuid-holiday_pay_policy-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.get({
    companyUuid: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    version: "1b37938b017c7fd7116bada007072290",
    companyUuid: "b7845189-f12b-4378-918a-d2b9de3dc4ea",
    federalHolidays: [
      {
        newYearsDay: {
          selected: false,
          name: "New Year's Day",
          date: "January 1",
        },
        mlkDay: {
          selected: true,
          name: "Martin Luther King, Jr. Day",
          date: "Third Monday in January",
        },
        presidentsDay: {
          selected: false,
          name: "Presidents' Day",
          date: "Third Monday in February",
        },
        memorialDay: {
          selected: true,
          name: "Memorial Day",
          date: "Last Monday in May",
        },
        juneteenth: {
          selected: false,
          name: "Juneteenth",
          date: "June 19",
        },
        independenceDay: {
          selected: true,
          name: "Independence Day",
          date: "July 4",
        },
        laborDay: {
          selected: false,
          name: "Labor Day",
          date: "First Monday in September",
        },
        columbusDay: {
          selected: false,
          name: "Columbus Day (Indigenous Peoples' Day)",
          date: "Second Monday in October",
        },
        veteransDay: {
          selected: true,
          name: "Veterans Day",
          date: "November 11",
        },
        thanksgiving: {
          selected: true,
          name: "Thanksgiving",
          date: "Fourth Thursday in November",
        },
      },
    ],
    employees: [
      {
        uuid: "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a",
      },
    ],
  });
});

test("Holidaypaypolicies Post Companies Company Uuid Holiday Pay Policy Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-companies-company_uuid-holiday_pay_policy-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.create({
    companyUuid: "<id>",
    requestBody: {
      federalHolidays: {
        mlkDay: {
          selected: true,
        },
        memorialDay: {
          selected: true,
        },
        independenceDay: {
          selected: true,
        },
        veteransDay: {
          selected: true,
        },
        thanksgiving: {
          selected: true,
        },
        christmasDay: {
          selected: true,
        },
      },
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    version: "1b37938b017c7fd7116bada007072290",
    companyUuid: "b7845189-f12b-4378-918a-d2b9de3dc4ea",
    federalHolidays: [
      {
        newYearsDay: {
          selected: false,
          name: "New Year's Day",
          date: "January 1",
        },
        mlkDay: {
          selected: true,
          name: "Martin Luther King, Jr. Day",
          date: "Third Monday in January",
        },
        presidentsDay: {
          selected: false,
          name: "Presidents' Day",
          date: "Third Monday in February",
        },
        memorialDay: {
          selected: true,
          name: "Memorial Day",
          date: "Last Monday in May",
        },
        juneteenth: {
          selected: false,
          name: "Juneteenth",
          date: "June 19",
        },
        independenceDay: {
          selected: true,
          name: "Independence Day",
          date: "July 4",
        },
        laborDay: {
          selected: false,
          name: "Labor Day",
          date: "First Monday in September",
        },
        columbusDay: {
          selected: false,
          name: "Columbus Day (Indigenous Peoples' Day)",
          date: "Second Monday in October",
        },
        veteransDay: {
          selected: true,
          name: "Veterans Day",
          date: "November 11",
        },
        thanksgiving: {
          selected: true,
          name: "Thanksgiving",
          date: "Fourth Thursday in November",
        },
      },
    ],
    employees: [
      {
        uuid: "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a",
      },
    ],
  });
});

test("Holidaypaypolicies Post Companies Company Uuid Holiday Pay Policy Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-companies-company_uuid-holiday_pay_policy-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.create({
    companyUuid: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Holidaypaypolicies Post Companies Company Uuid Holiday Pay Policy Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-companies-company_uuid-holiday_pay_policy-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.create({
    companyUuid: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Holidaypaypolicies Post Companies Company Uuid Holiday Pay Policy Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "post-companies-company_uuid-holiday_pay_policy-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.create({
    companyUuid: "<id>",
    requestBody: {},
  });
  expect(result).toBeDefined();
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.update({
    companyUuid: "<id>",
    requestBody: {
      version: "1b37938b017c7fd7116bada007072290",
      federalHolidays: {
        mlkDay: {
          selected: true,
        },
        memorialDay: {
          selected: true,
        },
        independenceDay: {
          selected: true,
        },
        veteransDay: {
          selected: true,
        },
        thanksgiving: {
          selected: true,
        },
        christmasDay: {
          selected: true,
        },
      },
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    version: "1b37938b017c7fd7116bada007072290",
    companyUuid: "b7845189-f12b-4378-918a-d2b9de3dc4ea",
    federalHolidays: [
      {
        newYearsDay: {
          selected: false,
          name: "New Year's Day",
          date: "January 1",
        },
        mlkDay: {
          selected: true,
          name: "Martin Luther King, Jr. Day",
          date: "Third Monday in January",
        },
        presidentsDay: {
          selected: false,
          name: "Presidents' Day",
          date: "Third Monday in February",
        },
        memorialDay: {
          selected: true,
          name: "Memorial Day",
          date: "Last Monday in May",
        },
        juneteenth: {
          selected: false,
          name: "Juneteenth",
          date: "June 19",
        },
        independenceDay: {
          selected: true,
          name: "Independence Day",
          date: "July 4",
        },
        laborDay: {
          selected: false,
          name: "Labor Day",
          date: "First Monday in September",
        },
        columbusDay: {
          selected: false,
          name: "Columbus Day (Indigenous Peoples' Day)",
          date: "Second Monday in October",
        },
        veteransDay: {
          selected: true,
          name: "Veterans Day",
          date: "November 11",
        },
        thanksgiving: {
          selected: true,
          name: "Thanksgiving",
          date: "Fourth Thursday in November",
        },
      },
    ],
    employees: [
      {
        uuid: "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a",
      },
    ],
  });
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.update({
    companyUuid: "<id>",
    requestBody: {
      version: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.update({
    companyUuid: "<id>",
    requestBody: {
      version: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.update({
    companyUuid: "<id>",
    requestBody: {
      version: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Holidaypaypolicies Delete Companies Company Uuid Holiday Pay Policy Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "delete-companies-company_uuid-holiday_pay_policy-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  await gustoEmbedded.holidayPayPolicies.delete({
    companyUuid: "<id>",
  });
});

test("Holidaypaypolicies Delete Companies Company Uuid Holiday Pay Policy Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "delete-companies-company_uuid-holiday_pay_policy-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  await gustoEmbedded.holidayPayPolicies.delete({
    companyUuid: "<id>",
  });
});

test("Holidaypaypolicies Delete Companies Company Uuid Holiday Pay Policy Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "delete-companies-company_uuid-holiday_pay_policy-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  await gustoEmbedded.holidayPayPolicies.delete({
    companyUuid: "<id>",
  });
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Add Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-add-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.addEmployees({
    companyUuid: "<id>",
    requestBody: {
      version: "1b37938b017c7fd7116bada007072290",
      employees: [
        {
          uuid: "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a",
        },
        {
          uuid: "fe977550-6621-4cfc-b4af-60b6af58c8ef",
        },
      ],
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    version: "1b37938b017c7fd7116bada007072290",
    companyUuid: "b7845189-f12b-4378-918a-d2b9de3dc4ea",
    federalHolidays: [
      {
        newYearsDay: {
          selected: false,
          name: "New Year's Day",
          date: "January 1",
        },
        mlkDay: {
          selected: true,
          name: "Martin Luther King, Jr. Day",
          date: "Third Monday in January",
        },
        presidentsDay: {
          selected: false,
          name: "Presidents' Day",
          date: "Third Monday in February",
        },
        memorialDay: {
          selected: true,
          name: "Memorial Day",
          date: "Last Monday in May",
        },
        juneteenth: {
          selected: false,
          name: "Juneteenth",
          date: "June 19",
        },
        independenceDay: {
          selected: true,
          name: "Independence Day",
          date: "July 4",
        },
        laborDay: {
          selected: false,
          name: "Labor Day",
          date: "First Monday in September",
        },
        columbusDay: {
          selected: false,
          name: "Columbus Day (Indigenous Peoples' Day)",
          date: "Second Monday in October",
        },
        veteransDay: {
          selected: true,
          name: "Veterans Day",
          date: "November 11",
        },
        thanksgiving: {
          selected: true,
          name: "Thanksgiving",
          date: "Fourth Thursday in November",
        },
      },
    ],
    employees: [
      {
        uuid: "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a",
      },
    ],
  });
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Add Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-add-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.addEmployees({
    companyUuid: "<id>",
    requestBody: {
      version: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Add Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-add-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.addEmployees({
    companyUuid: "<id>",
    requestBody: {
      version: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Add Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-add-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.addEmployees({
    companyUuid: "<id>",
    requestBody: {
      version: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Remove Example", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-remove-Example",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.removeEmployees({
    companyUuid: "<id>",
    requestBody: {
      version: "1b37938b017c7fd7116bada007072290",
      employees: [
        {
          uuid: "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a",
        },
        {
          uuid: "fe977550-6621-4cfc-b4af-60b6af58c8ef",
        },
      ],
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    version: "1b37938b017c7fd7116bada007072290",
    companyUuid: "b7845189-f12b-4378-918a-d2b9de3dc4ea",
    federalHolidays: [
      {
        newYearsDay: {
          selected: false,
          name: "New Year's Day",
          date: "January 1",
        },
        mlkDay: {
          selected: true,
          name: "Martin Luther King, Jr. Day",
          date: "Third Monday in January",
        },
        presidentsDay: {
          selected: false,
          name: "Presidents' Day",
          date: "Third Monday in February",
        },
        memorialDay: {
          selected: true,
          name: "Memorial Day",
          date: "Last Monday in May",
        },
        juneteenth: {
          selected: false,
          name: "Juneteenth",
          date: "June 19",
        },
        independenceDay: {
          selected: true,
          name: "Independence Day",
          date: "July 4",
        },
        laborDay: {
          selected: false,
          name: "Labor Day",
          date: "First Monday in September",
        },
        columbusDay: {
          selected: false,
          name: "Columbus Day (Indigenous Peoples' Day)",
          date: "Second Monday in October",
        },
        veteransDay: {
          selected: true,
          name: "Veterans Day",
          date: "November 11",
        },
        thanksgiving: {
          selected: true,
          name: "Thanksgiving",
          date: "Fourth Thursday in November",
        },
      },
    ],
    employees: [
      {
        uuid: "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a",
      },
    ],
  });
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Remove Basic", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-remove-Basic",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.removeEmployees({
    companyUuid: "<id>",
    requestBody: {
      version: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Remove Resource", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-remove-Resource",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.removeEmployees({
    companyUuid: "<id>",
    requestBody: {
      version: "<value>",
    },
  });
  expect(result).toBeDefined();
});

test("Holidaypaypolicies Put Companies Company Uuid Holiday Pay Policy Remove Nested", async () => {
  const gustoEmbedded = new GustoEmbedded({
    httpClient: createTestHTTPClient(
      "put-companies-company_uuid-holiday_pay_policy-remove-Nested",
    ),
    companyAccessAuth: process.env["GUSTOEMBEDDED_COMPANY_ACCESS_AUTH"] ?? "",
  });

  const result = await gustoEmbedded.holidayPayPolicies.removeEmployees({
    companyUuid: "<id>",
    requestBody: {
      version: "<value>",
    },
  });
  expect(result).toBeDefined();
});
