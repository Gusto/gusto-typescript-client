arazzo: 1.0.0
info:
  title: Test Suite
  summary: Created from /Users/aaron.rosen/workspace/gusto-typescript-client/.speakeasy/temp/output_238b3d.yaml
  version: 0.0.1
sourceDescriptions:
  - name: /Users/aaron.rosen/workspace/gusto-typescript-client/.speakeasy/temp/output_238b3d.yaml
    url: https://TBD.com
    type: openapi
workflows:
  - workflowId: get-v1-token-info-Example
    steps:
      - stepId: test
        operationId: get-v1-token-info
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "scope": "companies:read companies:write employees:read",
                "resource": {
                  "type": "Company",
                  "uuid": "5eca5127-6048-43ad-91ee-b56a0c34bc85"
                },
                "resource_owner": {
                  "type": "CompanyAdmin",
                  "uuid": "367871c2-3f70-4874-adc9-f1736647e8e1"
                }
              }
            type: simple
    x-speakeasy-test-group: Introspection
  - workflowId: refresh-access-token-Example
    steps:
      - stepId: test
        operationId: refresh-access-token
        requestBody:
          contentType: application/json
          payload:
            client_id: <id>
            client_secret: <value>
            grant_type: <value>
            refresh_token: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "access_token": "737HdeXfIqgx-NfaUFRuhV7JDe6ns6ptanJSMuQzjlc",
                "token_type": "bearer",
                "expires_in": 7200,
                "refresh_token": "iEjL96L9Pndwmi-xVX3Q-xbrvvhnjHYGX87sopgGJ8E",
                "created_at": "1732033824",
                "scope": "ach_transactions:read benefits:read companies:read"
              }
            type: simple
    x-speakeasy-test-group: Introspection
  - workflowId: company-onboarding-2
    steps:
      - stepId: create_partner_managed_company
        x-speakeasy-test-security:
          value:
            systemAccessAuth: o7pmswDNpGc0vMaXSTM-o2Ub6IXScGwCtFVAG0cVaFg
        operationId: post-v1-partner-managed-companies
        requestBody:
          contentType: application/json
          payload:
            company:
              contractor_only: false
              ein: "123456789"
              name: Frank's Ocean
              trade_name: Frankâ€™s Ocean
            user:
              email: frank@example.com
              first_name: Frank
              last_name: Ocean
              phone: "2345558899"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
            # - condition: $response.body#/accessToken != null
            # - condition: $response.body#/comanyUuid != null
            # outputs:
            #   accessToken: $response.body#/accessToken
            #   companyId: $response.body#/companyUuid
            # - stepId: get-company-admins
            #   operationId: get-v1-companies-company_id-admins
            #   parameters:
            #     - name: company_id
            #       in: path
            #       value: 123 # $steps.create_partner_managed_company.outputs.companyId
            #   successCriteria:
            #     - condition: $statusCode == 200
            #     - condition: $response.header.Content-Type == application/json
    x-speakeasy-test-group: Companies
  - workflowId: post-v1-partner-managed-companies-Basic
    steps:
      - stepId: test
        operationId: post-v1-partner-managed-companies
        requestBody:
          contentType: application/json
          payload:
            company:
              name: <value>
            user:
              email: Emanuel.McClure@gmail.com
              first_name: Gail
              last_name: Stracke
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: post-v1-partner-managed-companies-Resource
    steps:
      - stepId: test
        operationId: post-v1-partner-managed-companies
        requestBody:
          contentType: application/json
          payload:
            company:
              name: <value>
            user:
              email: Giuseppe_Turcotte@yahoo.com
              first_name: Gretchen
              last_name: Vandervort
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: post-v1-partner-managed-companies-Nested
    steps:
      - stepId: test
        operationId: post-v1-partner-managed-companies
        requestBody:
          contentType: application/json
          payload:
            company:
              name: <value>
            user:
              email: Maxime41@hotmail.com
              first_name: Dominic
              last_name: Bins
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: get-v1-companies-Example
    steps:
      - stepId: test
        operationId: get-v1-companies
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "ein": "00-0000001",
                "entity_type": "C-Corporation",
                "contractor_only": false,
                "tier": "core",
                "is_suspended": false,
                "company_status": "Approved",
                "uuid": "c7a07c73-a703-4462-9343-1b181182b6e0",
                "name": "Shoppe Studios LLC",
                "slug": "record-shoppe",
                "trade_name": "Record Shoppe",
                "is_partner_managed": false,
                "pay_schedule_type": "by_department",
                "join_date": "2023-03-01",
                "funding_type": "ach",
                "locations": [
                  {
                    "street_1": "412 Kiera Stravenue",
                    "street_2": "Suite 391",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip": "94107",
                    "country": "USA",
                    "active": true
                  },
                  {
                    "street_1": "644 Fay Vista",
                    "street_2": "Suite 842",
                    "city": "Richmond",
                    "state": "VA",
                    "zip": "23218",
                    "country": "USA",
                    "active": true
                  }
                ],
                "compensations": {
                  "hourly": [
                    {
                      "name": "Overtime",
                      "multiple": 1.5
                    },
                    {
                      "name": "Double overtime",
                      "multiple": 2
                    },
                    {
                      "name": "Regular",
                      "multiple": 1
                    },
                    {
                      "name": "Outstanding vacation",
                      "multiple": 1
                    },
                    {
                      "name": "Holiday",
                      "multiple": 1
                    },
                    {
                      "name": "Emergency sick - self care",
                      "multiple": 1
                    },
                    {
                      "name": "Emergency sick - caring for others",
                      "multiple": 1
                    },
                    {
                      "name": "FMLA Public Health Emergency Leave",
                      "multiple": 1
                    },
                    {
                      "name": "Regular Hours",
                      "multiple": 1
                    }
                  ],
                  "fixed": [
                    {
                      "name": "Bonus"
                    },
                    {
                      "name": "Commission"
                    },
                    {
                      "name": "Paycheck Tips"
                    },
                    {
                      "name": "Cash Tips"
                    },
                    {
                      "name": "Correction Payment"
                    },
                    {
                      "name": "Severance"
                    },
                    {
                      "name": "Minimum Wage Adjustment"
                    },
                    {
                      "name": "Reimbursement"
                    }
                  ],
                  "paid_time_off": [
                    {
                      "name": "Vacation Hours"
                    },
                    {
                      "name": "Sick Hours"
                    },
                    {
                      "name": "Holiday Hours"
                    }
                  ]
                },
                "primary_signatory": {
                  "uuid": "8a2ed9c2-9d1e-443a-8e56-a490d8bf73bb",
                  "first_name": "Alda",
                  "middle_initial": "",
                  "last_name": "Carter",
                  "phone": "1-565-710-7558",
                  "email": "louie.hessel7757869450111547@zemlak.biz",
                  "home_address": {
                    "street_1": "524 Roob Divide",
                    "street_2": "Suite 565",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip": "94107",
                    "country": "USA"
                  }
                },
                "primary_payroll_admin": {
                  "first_name": "Ian",
                  "last_name": "Labadie",
                  "phone": "1-565-710-7559",
                  "email": "louie.hessel7757869450111547@zemlak.biz"
                }
              }
            type: simple
    x-speakeasy-test-group: Companies
  - workflowId: put-v1-companies-Example
    steps:
      - stepId: test
        operationId: put-v1-companies
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            contractor_only: false
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "ein": "00-0000001",
                "entity_type": "C-Corporation",
                "contractor_only": false,
                "tier": "core",
                "is_suspended": false,
                "company_status": "Approved",
                "uuid": "c7a07c73-a703-4462-9343-1b181182b6e0",
                "name": "Shoppe Studios LLC",
                "slug": "record-shoppe",
                "trade_name": "Record Shoppe",
                "is_partner_managed": false,
                "pay_schedule_type": "by_department",
                "join_date": "2023-03-01",
                "funding_type": "ach",
                "locations": [
                  {
                    "street_1": "412 Kiera Stravenue",
                    "street_2": "Suite 391",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip": "94107",
                    "country": "USA",
                    "active": true
                  },
                  {
                    "street_1": "644 Fay Vista",
                    "street_2": "Suite 842",
                    "city": "Richmond",
                    "state": "VA",
                    "zip": "23218",
                    "country": "USA",
                    "active": true
                  }
                ],
                "compensations": {
                  "hourly": [
                    {
                      "name": "Overtime",
                      "multiple": 1.5
                    },
                    {
                      "name": "Double overtime",
                      "multiple": 2
                    },
                    {
                      "name": "Regular",
                      "multiple": 1
                    },
                    {
                      "name": "Outstanding vacation",
                      "multiple": 1
                    },
                    {
                      "name": "Holiday",
                      "multiple": 1
                    },
                    {
                      "name": "Emergency sick - self care",
                      "multiple": 1
                    },
                    {
                      "name": "Emergency sick - caring for others",
                      "multiple": 1
                    },
                    {
                      "name": "FMLA Public Health Emergency Leave",
                      "multiple": 1
                    },
                    {
                      "name": "Regular Hours",
                      "multiple": 1
                    }
                  ],
                  "fixed": [
                    {
                      "name": "Bonus"
                    },
                    {
                      "name": "Commission"
                    },
                    {
                      "name": "Paycheck Tips"
                    },
                    {
                      "name": "Cash Tips"
                    },
                    {
                      "name": "Correction Payment"
                    },
                    {
                      "name": "Severance"
                    },
                    {
                      "name": "Minimum Wage Adjustment"
                    },
                    {
                      "name": "Reimbursement"
                    }
                  ],
                  "paid_time_off": [
                    {
                      "name": "Vacation Hours"
                    },
                    {
                      "name": "Sick Hours"
                    },
                    {
                      "name": "Holiday Hours"
                    }
                  ]
                },
                "primary_signatory": {
                  "uuid": "8a2ed9c2-9d1e-443a-8e56-a490d8bf73bb",
                  "first_name": "Alda",
                  "middle_initial": "",
                  "last_name": "Carter",
                  "phone": "1-565-710-7558",
                  "email": "louie.hessel7757869450111547@zemlak.biz",
                  "home_address": {
                    "street_1": "524 Roob Divide",
                    "street_2": "Suite 565",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip": "94107",
                    "country": "USA"
                  }
                },
                "primary_payroll_admin": {
                  "first_name": "Ian",
                  "last_name": "Labadie",
                  "phone": "1-565-710-7559",
                  "email": "louie.hessel7757869450111547@zemlak.biz"
                }
              }
            type: simple
    x-speakeasy-test-group: Companies
  - workflowId: put-v1-companies-Basic
    steps:
      - stepId: test
        operationId: put-v1-companies
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            contractor_only: false
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: put-v1-companies-Resource
    steps:
      - stepId: test
        operationId: put-v1-companies
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            contractor_only: false
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: put-v1-companies-Nested
    steps:
      - stepId: test
        operationId: put-v1-companies
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            contractor_only: true
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: put-v1-partner-managed-companies-company-uuid-migrate-Example
    steps:
      - stepId: test
        operationId: put-v1-partner-managed-companies-company-uuid-migrate
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Benjamin_Kihn44@yahoo.com
            external_user_id: <id>
            ip_address: 198.52.136.51
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "company_uuid": "39abf9b9-650b-4e67-89a0-389dc6ee8a71",
                "migration_status": "success"
              }
            type: simple
    x-speakeasy-test-group: Companies
  - workflowId: put-v1-partner-managed-companies-company-uuid-migrate-Basic
    steps:
      - stepId: test
        operationId: put-v1-partner-managed-companies-company-uuid-migrate
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Erna62@gmail.com
            external_user_id: <id>
            ip_address: 02de:9982:167f:34c3:bfe5:a8ab:0cf3:5c87
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: put-v1-partner-managed-companies-company-uuid-migrate-Resource
    steps:
      - stepId: test
        operationId: put-v1-partner-managed-companies-company-uuid-migrate
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Lyric_Beer@yahoo.com
            external_user_id: <id>
            ip_address: 217.131.195.126
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: put-v1-partner-managed-companies-company-uuid-migrate-Nested
    steps:
      - stepId: test
        operationId: put-v1-partner-managed-companies-company-uuid-migrate
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Johann_Thompson@hotmail.com
            external_user_id: <id>
            ip_address: 82.48.167.70
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: post-partner-managed-companies-company_uuid-accept_terms_of_service-Example
    steps:
      - stepId: test
        operationId: post-partner-managed-companies-company_uuid-accept_terms_of_service
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: jsmith99@gmail.com
            external_user_id: "2005648946132"
            ip_address: 192.168.1.2
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "latest_terms_accepted": true
              }
            type: simple
    x-speakeasy-test-group: Companies
  - workflowId: post-partner-managed-companies-company_uuid-accept_terms_of_service-Basic
    steps:
      - stepId: test
        operationId: post-partner-managed-companies-company_uuid-accept_terms_of_service
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Justine73@gmail.com
            external_user_id: <id>
            ip_address: 168.91.169.217
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: post-partner-managed-companies-company_uuid-accept_terms_of_service-Resource
    steps:
      - stepId: test
        operationId: post-partner-managed-companies-company_uuid-accept_terms_of_service
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: William_Goldner@hotmail.com
            external_user_id: <id>
            ip_address: bf16:0638:d9db:4e8a:c5ee:c9cd:bb4f:1d5d
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: post-partner-managed-companies-company_uuid-accept_terms_of_service-Nested
    steps:
      - stepId: test
        operationId: post-partner-managed-companies-company_uuid-accept_terms_of_service
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Jerad_Dicki@yahoo.com
            external_user_id: <id>
            ip_address: 61.236.253.221
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: post-partner-managed-companies-company_uuid-retrieve_terms_of_service-Example
    steps:
      - stepId: test
        operationId: post-partner-managed-companies-company_uuid-retrieve_terms_of_service
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: jsmith99@gmail.com
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "latest_terms_accepted": true
              }
            type: simple
    x-speakeasy-test-group: Companies
  - workflowId: post-partner-managed-companies-company_uuid-retrieve_terms_of_service-Basic
    steps:
      - stepId: test
        operationId: post-partner-managed-companies-company_uuid-retrieve_terms_of_service
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Sarina_Hand68@yahoo.com
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: post-partner-managed-companies-company_uuid-retrieve_terms_of_service-Resource
    steps:
      - stepId: test
        operationId: post-partner-managed-companies-company_uuid-retrieve_terms_of_service
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Katheryn_Ernser@hotmail.com
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: post-partner-managed-companies-company_uuid-retrieve_terms_of_service-Nested
    steps:
      - stepId: test
        operationId: post-partner-managed-companies-company_uuid-retrieve_terms_of_service
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Maudie_Franecki-Hammes@hotmail.com
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: post-v1-companies-company_id-admins-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-admins
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: jsmith99@gmail.com
            first_name: John
            last_name: Smith
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "5de11791-98fd-4587-9ed0-d5d804b8e647",
                "email": "jsmith99@gmail.com",
                "first_name": "John",
                "last_name": "Smith"
              }
            type: simple
    x-speakeasy-test-group: Companies
  - workflowId: post-v1-companies-company_id-admins-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-admins
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Justine_Gusikowski92@yahoo.com
            first_name: Guillermo
            last_name: Koch
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: post-v1-companies-company_id-admins-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-admins
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Neil_Parisian@hotmail.com
            first_name: Jaquelin
            last_name: Leannon
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: post-v1-companies-company_id-admins-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-admins
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Cornell_Monahan86@hotmail.com
            first_name: Jessika
            last_name: Hudson
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: get-v1-companies-company_id-admins-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-admins
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "987058cc-23ee-46e9-81ef-5cee086cceca",
                  "email": "Katherine@acmecorp.com",
                  "first_name": "Katherine",
                  "last_name": "Johnson"
                },
                {
                  "uuid": "5de11791-98fd-4587-9ed0-d5d804b8e647",
                  "email": "Anita@acmecorp.com",
                  "first_name": "Anita",
                  "last_name": "Borg"
                }
              ]
            type: simple
    x-speakeasy-test-group: Companies
  - workflowId: get-v1-company-onboarding-status-Example
    steps:
      - stepId: test
        operationId: get-v1-company-onboarding-status
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2",
                "onboarding_completed": false,
                "onboarding_steps": [
                  {
                    "title": "Add Your Company's Addresses",
                    "id": "add_addresses",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": []
                  },
                  {
                    "title": "Enter Your Federal Tax Information",
                    "id": "federal_tax_setup",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": []
                  },
                  {
                    "title": "Select Industry",
                    "id": "select_industry",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": []
                  },
                  {
                    "title": "Add Your Bank Account",
                    "id": "add_bank_info",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": []
                  },
                  {
                    "title": "Add Your Employees",
                    "id": "add_employees",
                    "required": true,
                    "completed": true,
                    "skippable": true,
                    "requirements": [
                      "add_addresses"
                    ]
                  },
                  {
                    "title": "Enter Your State Tax Information",
                    "id": "state_setup",
                    "required": true,
                    "completed": false,
                    "skippable": false,
                    "requirements": [
                      "add_addresses",
                      "add_employees"
                    ]
                  },
                  {
                    "title": "Select a Pay Schedule",
                    "id": "payroll_schedule",
                    "required": true,
                    "completed": false,
                    "skippable": false,
                    "requirements": []
                  },
                  {
                    "title": "Sign Documents",
                    "id": "sign_all_forms",
                    "required": true,
                    "completed": false,
                    "skippable": false,
                    "requirements": [
                      "add_employees",
                      "federal_tax_setup",
                      "state_setup",
                      "add_bank_info",
                      "payroll_schedule"
                    ]
                  },
                  {
                    "title": "Verify Your Bank Account",
                    "id": "verify_bank_info",
                    "required": true,
                    "completed": false,
                    "skippable": false,
                    "requirements": [
                      "add_bank_info"
                    ]
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Companies
  - workflowId: get-v1-company-finish-onboarding-Example
    steps:
      - stepId: test
        operationId: get-v1-company-finish-onboarding
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2",
                "onboarding_completed": true,
                "onboarding_steps": [
                  {
                    "title": "Add Your Company's Addresses",
                    "id": "add_addresses",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": []
                  },
                  {
                    "title": "Enter Your Federal Tax Information",
                    "id": "federal_tax_setup",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": []
                  },
                  {
                    "title": "Select Industry",
                    "id": "select_industry",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": []
                  },
                  {
                    "title": "Add Your Bank Account",
                    "id": "add_bank_info",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": []
                  },
                  {
                    "title": "Add Your Employees",
                    "id": "add_employees",
                    "required": true,
                    "completed": true,
                    "skippable": true,
                    "requirements": [
                      "add_addresses"
                    ]
                  },
                  {
                    "title": "Enter Your State Tax Information",
                    "id": "state_setup",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": [
                      "add_addresses",
                      "add_employees"
                    ]
                  },
                  {
                    "title": "Select a Pay Schedule",
                    "id": "payroll_schedule",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": []
                  },
                  {
                    "title": "Sign Documents",
                    "id": "sign_all_forms",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": [
                      "add_employees",
                      "federal_tax_setup",
                      "state_setup",
                      "add_bank_info",
                      "payroll_schedule"
                    ]
                  },
                  {
                    "title": "Verify Your Bank Account",
                    "id": "verify_bank_info",
                    "required": true,
                    "completed": true,
                    "skippable": false,
                    "requirements": [
                      "add_bank_info"
                    ]
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Companies
  - workflowId: get-v1-company-finish-onboarding-Basic
    steps:
      - stepId: test
        operationId: get-v1-company-finish-onboarding
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: get-v1-company-finish-onboarding-Resource
    steps:
      - stepId: test
        operationId: get-v1-company-finish-onboarding
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: get-v1-company-finish-onboarding-Nested
    steps:
      - stepId: test
        operationId: get-v1-company-finish-onboarding
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Companies
  - workflowId: get-v1-companies-company_id-custom_fields-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-custom_fields
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "custom_fields": [
                  {
                    "uuid": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                    "name": "employee_level",
                    "type": "text",
                    "description": "Employee Level",
                    "selection_options": null
                  },
                  {
                    "uuid": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                    "name": "t-shirt size",
                    "type": "text",
                    "description": "What is your t-shirt size?",
                    "selection_options": null
                  },
                  {
                    "uuid": "024ec137-6c92-43a3-b061-14a9720531d6",
                    "name": "favorite fruit",
                    "type": "radio",
                    "description": "Which is your favorite fruit?",
                    "selection_options": [
                      "apple",
                      "banana",
                      "orange"
                    ]
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Companies
  - workflowId: get-v1-company-forms-Example
    steps:
      - stepId: test
        operationId: get-v1-company-forms
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
                  "name": "company_direct_deposit",
                  "title": "Direct Deposit Authorization",
                  "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.",
                  "draft": false,
                  "requires_signing": true
                }
              ]
            type: simple
    x-speakeasy-test-group: forms
  - workflowId: get-v1-companies-company_id-company_benefits-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-company_benefits
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                  "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9",
                  "benefit_type": 1,
                  "active": true,
                  "description": "Kaiser Permanente",
                  "deletable": true,
                  "supports_percentage_amounts": true,
                  "responsible_for_employer_taxes": false,
                  "responsible_for_employee_w2": false
                }
              ]
            type: simple
    x-speakeasy-test-group: benefits
  - workflowId: get-invoices-invoice-period-example
    steps:
      - stepId: test
        operationId: get-invoices-invoice-period
        parameters:
          - name: invoice_period
            in: path
            value: 2020-01
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "active_companies": [
                  {
                    "company_uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8",
                    "active_employees": 5,
                    "active_contractors": 3,
                    "initial_invoice_period": "2022-01"
                  },
                  {
                    "company_uuid": "9b37429c-e540-40fb-86b3-738ca9af65c7",
                    "active_employees": 0,
                    "active_contractors": 1,
                    "initial_invoice_period": "2023-05"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Invoices
  - workflowId: get-invoices-invoice-period-Basic
    steps:
      - stepId: test
        operationId: get-invoices-invoice-period
        parameters:
          - name: invoice_period
            in: path
            value: 2020-01
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Invoices
  - workflowId: get-invoices-invoice-period-Resource
    steps:
      - stepId: test
        operationId: get-invoices-invoice-period
        parameters:
          - name: invoice_period
            in: path
            value: 2020-01
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Invoices
  - workflowId: get-invoices-invoice-period-Nested
    steps:
      - stepId: test
        operationId: get-invoices-invoice-period
        parameters:
          - name: invoice_period
            in: path
            value: 2020-01
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Invoices
  - workflowId: get-v1-companies-attachment-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-attachment
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: company_attachment_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65",
                "name": "Company_Attachment_File.pdf",
                "category": "gep_notice",
                "upload_time": "2022-02-01T00:00:00.000Z"
              }
            type: simple
    x-speakeasy-test-group: companyAttachments
  - workflowId: get-v1-companies-attachments-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-attachments
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "5de11791-98fd-4587-9ed0-d5d804b8e647",
                  "name": "Company_Attachment_File1.pdf",
                  "category": "gep_notice",
                  "upload_time": "2022-02-01T00:00:00.000Z"
                },
                {
                  "uuid": "987058cc-23ee-46e9-81ef-5cee086cceca",
                  "name": "Company_Attachment_File2.pdf",
                  "category": "gep_notice",
                  "upload_time": "2022-02-01T00:00:00.000Z"
                }
              ]
            type: simple
    x-speakeasy-test-group: companyAttachments
  - workflowId: post-v1-companies-attachment-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-attachment
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: multipart/form-data
          payload:
            category: gep_notice
            document:
              "": 'x-file: example.file'
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65",
                "name": "Company_Attachment_File.pdf",
                "category": "gep_notice",
                "upload_time": "2022-02-01T00:00:00.000Z"
              }
            type: simple
    x-speakeasy-test-group: companyAttachments
  - workflowId: post-v1-companies-attachment-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-attachment
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: multipart/form-data
          payload:
            category: compliance
            document:
              "": 'x-file: example.file'
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: companyAttachments
  - workflowId: post-v1-companies-attachment-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-attachment
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: multipart/form-data
          payload:
            category: gep_notice
            document:
              "": 'x-file: example.file'
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: companyAttachments
  - workflowId: post-v1-companies-attachment-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-attachment
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: multipart/form-data
          payload:
            category: gep_notice
            document:
              "": 'x-file: example.file'
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: companyAttachments
  - workflowId: get-v1-companies-attachment-url-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-attachment-url
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: company_attachment_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "url": "https://s3.amazonaws.com/static.gusto.com/assets/uploaded_files/334721.pdf?parameter=daer8r3432423djklsdafaso"
              }
            type: simple
    x-speakeasy-test-group: companyAttachment
  - workflowId: get-v1-companies-company_id-federal_tax_details-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-federal_tax_details
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "5521489cc7c93732300805dcf87a5fd3",
                "tax_payer_type": "S-Corporation",
                "taxable_as_scorp": true,
                "filing_form": "941",
                "has_ein": true,
                "ein_verified": true,
                "legal_name": "Company Name LLC",
                "effective_date": "2024-01-01",
                "deposit_schedule": "Semiweekly"
              }
            type: simple
    x-speakeasy-test-group: federalTaxDetails
  - workflowId: put-v1-companies-company_id-federal_tax_details-Example
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-federal_tax_details
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            filing_form: "944"
            legal_name: Acme Corp.
            tax_payer_type: LLP
            taxable_as_scorp: false
            version: 6cb95e00540706ca48d4577b3c839fbe
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "5521489cc7c93732300805dcf87a5fd3",
                "tax_payer_type": "S-Corporation",
                "taxable_as_scorp": true,
                "filing_form": "941",
                "has_ein": true,
                "ein_verified": true,
                "legal_name": "Company Name LLC",
                "effective_date": "2024-01-01",
                "deposit_schedule": "Semiweekly"
              }
            type: simple
    x-speakeasy-test-group: federalTaxDetails
  - workflowId: put-v1-companies-company_id-federal_tax_details-Basic
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-federal_tax_details
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: federalTaxDetails
  - workflowId: put-v1-companies-company_id-federal_tax_details-Resource
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-federal_tax_details
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: federalTaxDetails
  - workflowId: put-v1-companies-company_id-federal_tax_details-Nested
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-federal_tax_details
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: federalTaxDetails
  - workflowId: get-v1-company-industry-Example
    steps:
      - stepId: test
        operationId: get-v1-company-industry
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "company_uuid": "423dd616-6dbc-4724-938a-403f6217a933",
                "naics_code": "611420",
                "sic_codes": [
                  "8243"
                ],
                "title": "Computer Training"
              }
            type: simple
    x-speakeasy-test-group: industrySelection
  - workflowId: put-v1-company-industry-Example
    steps:
      - stepId: test
        operationId: put-v1-company-industry
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            naics_code: "611420"
            sic_codes:
              - "8243"
            title: Computer Training
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "company_uuid": "423dd616-6dbc-4724-938a-403f6217a933",
                "naics_code": "611420",
                "sic_codes": [
                  "8243"
                ],
                "title": "Computer Training"
              }
            type: simple
    x-speakeasy-test-group: industrySelection
  - workflowId: put-v1-company-industry-Basic
    steps:
      - stepId: test
        operationId: put-v1-company-industry
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            naics_code: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: industrySelection
  - workflowId: put-v1-company-industry-Resource
    steps:
      - stepId: test
        operationId: put-v1-company-industry
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            naics_code: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: industrySelection
  - workflowId: put-v1-company-industry-Nested
    steps:
      - stepId: test
        operationId: put-v1-company-industry
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            naics_code: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: industrySelection
  - workflowId: post-v1-company-signatories-Example
    steps:
      - stepId: test
        operationId: post-v1-company-signatories
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            birthday: <value>
            email: Annie.Wiegand16@gmail.com
            first_name: Jed
            home_address:
              city: North Lilly
              state: North Carolina
              street_1: <value>
              zip: "05065"
            last_name: Johnson
            phone: 857-932-0220 x31016
            ssn: <value>
            title: <value>
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "f8c653dc-0094-41fb-8670-45d6399afade",
                "first_name": "Bob",
                "last_name": "Johnson",
                "title": "Owner",
                "phone": "4239879876",
                "email": "olin.okuneva@denesik.us",
                "birthday": "2002-10-31",
                "is_admin": false,
                "has_ssn": true,
                "version": "49ea586f528411f5cfadfd54452b2423",
                "identity_verification_status": "Skipped",
                "home_address": {
                  "street_1": "524 Roob Divide",
                  "street_2": "Suite 565",
                  "city": "San Francisco",
                  "state": "CA",
                  "zip": "94107",
                  "country": "USA"
                }
              }
            type: simple
    x-speakeasy-test-group: Signatories
  - workflowId: post-v1-company-signatories-Basic
    steps:
      - stepId: test
        operationId: post-v1-company-signatories
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            birthday: <value>
            email: Otho78@gmail.com
            first_name: Sven
            home_address:
              city: New Josiane
              state: Kentucky
              street_1: <value>
              zip: "11880"
            last_name: Kunze
            phone: 545.244.3901
            ssn: <value>
            title: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Signatories
  - workflowId: post-v1-company-signatories-Resource
    steps:
      - stepId: test
        operationId: post-v1-company-signatories
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            birthday: <value>
            email: Clotilde.Hermann67@gmail.com
            first_name: Tania
            home_address:
              city: Montanafield
              state: Colorado
              street_1: <value>
              zip: 82730-9658
            last_name: Lindgren
            phone: (952) 347-9826 x26246
            ssn: <value>
            title: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Signatories
  - workflowId: post-v1-company-signatories-Nested
    steps:
      - stepId: test
        operationId: post-v1-company-signatories
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            birthday: <value>
            email: Paula_Weber@hotmail.com
            first_name: Winfield
            home_address:
              city: Lakeland
              state: Louisiana
              street_1: <value>
              zip: 12614-6739
            last_name: Grady-Cruickshank
            phone: (773) 321-8929
            ssn: <value>
            title: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Signatories
  - workflowId: get-v1-companies-company_uuid-signatories-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_uuid-signatories
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "f8c653dc-0094-41fb-8670-45d6399afade",
                  "first_name": "Bob",
                  "last_name": "Johnson",
                  "title": "Owner",
                  "phone": "4239879876",
                  "email": "olin.okuneva@denesik.us",
                  "birthday": "2002-10-31",
                  "is_admin": false,
                  "has_ssn": true,
                  "version": "49ea586f528411f5cfadfd54452b2423",
                  "identity_verification_status": "Skipped",
                  "home_address": {
                    "street_1": "524 Roob Divide",
                    "street_2": "Suite 565",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip": "94107",
                    "country": "USA"
                  }
                }
              ]
            type: simple
    x-speakeasy-test-group: Signatories
  - workflowId: post-v1-companies-company_uuid-signatories-invite-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_uuid-signatories-invite
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Maureen_Wyman@yahoo.com
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "f8c653dc-0094-41fb-8670-45d6399afade",
                "first_name": "Bob",
                "last_name": "Johnson",
                "title": "Owner",
                "phone": "4239879876",
                "email": "olin.okuneva@denesik.us",
                "birthday": "2002-10-31",
                "is_admin": false,
                "has_ssn": true,
                "version": "49ea586f528411f5cfadfd54452b2423",
                "identity_verification_status": "Skipped",
                "home_address": {
                  "street_1": "524 Roob Divide",
                  "street_2": "Suite 565",
                  "city": "San Francisco",
                  "state": "CA",
                  "zip": "94107",
                  "country": "USA"
                }
              }
            type: simple
    x-speakeasy-test-group: Signatories
  - workflowId: post-v1-companies-company_uuid-signatories-invite-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_uuid-signatories-invite
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Fidel_Witting91@gmail.com
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Signatories
  - workflowId: post-v1-companies-company_uuid-signatories-invite-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_uuid-signatories-invite
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: David.Prosacco54@yahoo.com
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Signatories
  - workflowId: post-v1-companies-company_uuid-signatories-invite-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_uuid-signatories-invite
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: Cassie.Corwin26@yahoo.com
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Signatories
  - workflowId: put-v1-companies-company_uuid-signatories-signatory_uuid-Example
    steps:
      - stepId: test
        operationId: put-v1-companies-company_uuid-signatories-signatory_uuid
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: signatory_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "f8c653dc-0094-41fb-8670-45d6399afade",
                "first_name": "Bob",
                "last_name": "Johnson",
                "title": "Owner",
                "phone": "4239879876",
                "email": "olin.okuneva@denesik.us",
                "birthday": "2002-10-31",
                "is_admin": false,
                "has_ssn": true,
                "version": "49ea586f528411f5cfadfd54452b2423",
                "identity_verification_status": "Skipped",
                "home_address": {
                  "street_1": "524 Roob Divide",
                  "street_2": "Suite 565",
                  "city": "San Francisco",
                  "state": "CA",
                  "zip": "94107",
                  "country": "USA"
                }
              }
            type: simple
    x-speakeasy-test-group: Signatories
  - workflowId: put-v1-companies-company_uuid-signatories-signatory_uuid-Basic
    steps:
      - stepId: test
        operationId: put-v1-companies-company_uuid-signatories-signatory_uuid
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: signatory_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Signatories
  - workflowId: put-v1-companies-company_uuid-signatories-signatory_uuid-Resource
    steps:
      - stepId: test
        operationId: put-v1-companies-company_uuid-signatories-signatory_uuid
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: signatory_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Signatories
  - workflowId: put-v1-companies-company_uuid-signatories-signatory_uuid-Nested
    steps:
      - stepId: test
        operationId: put-v1-companies-company_uuid-signatories-signatory_uuid
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: signatory_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Signatories
  - workflowId: delete-v1-companies-company_uuid-signatories-signatory_uuid
    steps:
      - stepId: test
        operationId: delete-v1-companies-company_uuid-signatories-signatory_uuid
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: signatory_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: Signatories
  - workflowId: post-v1-company-flows-Example
    steps:
      - stepId: test
        operationId: post-v1-company-flows
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            flow_type: company_onboarding
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "url": "https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ"
              }
            type: simple
    x-speakeasy-test-group: Flows
  - workflowId: post-v1-company-flows-Basic
    steps:
      - stepId: test
        operationId: post-v1-company-flows
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            flow_type: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Flows
  - workflowId: post-v1-company-flows-Resource
    steps:
      - stepId: test
        operationId: post-v1-company-flows
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            flow_type: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Flows
  - workflowId: post-v1-company-flows-Nested
    steps:
      - stepId: test
        operationId: post-v1-company-flows
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            flow_type: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Flows
  - workflowId: post-v1-companies-company_id-locations-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-locations
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            city: San Francisco
            phone_number: "8009360383"
            state: CA
            street_1: 425 2nd Street
            street_2: Suite 602
            zip: "94107"
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                "version": "7d9753112507b9dda4fb97910f39b06e",
                "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                "phone_number": "5825710808",
                "street_1": "412 Kiera Stravenue",
                "street_2": "Suite 391",
                "city": "San Francisco",
                "state": "CA",
                "zip": "94107",
                "country": "USA",
                "active": true,
                "mailing_address": false,
                "filing_address": false,
                "created_at": "2023-09-12T16:42:25.000-07:00",
                "updated_at": "2023-09-12T16:42:25.000-07:00"
              }
            type: simple
    x-speakeasy-test-group: Locations
  - workflowId: post-v1-companies-company_id-locations-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-locations
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            city: Grand Island
            phone_number: 741.279.0107 x857
            state: Illinois
            street_1: <value>
            zip: "22031"
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Locations
  - workflowId: post-v1-companies-company_id-locations-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-locations
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            city: Lubowitzside
            phone_number: (263) 266-2050
            state: Minnesota
            street_1: <value>
            zip: "27179"
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Locations
  - workflowId: post-v1-companies-company_id-locations-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-locations
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            city: South Barrett
            phone_number: 824-550-4439 x01255
            state: Georgia
            street_1: <value>
            zip: 80985-0183
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Locations
  - workflowId: get-v1-companies-company_id-locations-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-locations
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                  "version": "7d9753112507b9dda4fb97910f39b06e",
                  "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                  "phone_number": "5825710808",
                  "street_1": "412 Kiera Stravenue",
                  "street_2": "Suite 391",
                  "city": "San Francisco",
                  "state": "CA",
                  "zip": "94107",
                  "country": "USA",
                  "active": true,
                  "mailing_address": false,
                  "filing_address": false,
                  "created_at": "2023-09-12T16:42:25.000-07:00",
                  "updated_at": "2023-09-12T16:42:25.000-07:00"
                },
                {
                  "uuid": "fa94a2fd-11a8-4024-87ff-85c587d9d2b4",
                  "version": "15e6b9680e00f3122729e64e3cef3224",
                  "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                  "phone_number": "2866070827",
                  "street_1": "644 Fay Vista",
                  "street_2": "Suite 842",
                  "city": "Richmond",
                  "state": "VA",
                  "zip": "23218",
                  "country": "USA",
                  "active": true,
                  "mailing_address": false,
                  "filing_address": false,
                  "created_at": "2023-09-12T16:42:25.000-07:00",
                  "updated_at": "2023-09-12T16:42:25.000-07:00"
                }
              ]
            type: simple
    x-speakeasy-test-group: Locations
  - workflowId: get-v1-locations-location_id-Example
    steps:
      - stepId: test
        operationId: get-v1-locations-location_id
        parameters:
          - name: location_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                "version": "7d9753112507b9dda4fb97910f39b06e",
                "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                "phone_number": "5825710808",
                "street_1": "412 Kiera Stravenue",
                "street_2": "Suite 391",
                "city": "San Francisco",
                "state": "CA",
                "zip": "94107",
                "country": "USA",
                "active": true,
                "mailing_address": false,
                "filing_address": false,
                "created_at": "2023-09-12T16:42:25.000-07:00",
                "updated_at": "2023-09-12T16:42:25.000-07:00"
              }
            type: simple
    x-speakeasy-test-group: Locations
  - workflowId: put-v1-locations-location_id-Example
    steps:
      - stepId: test
        operationId: put-v1-locations-location_id
        parameters:
          - name: location_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            city: San Francisco
            country: USA
            phone_number: "8009360383"
            state: CA
            street_1: 425 2nd Street
            street_2: Suite 602
            version: 1928d0c378e519e9c03fb959bc959a6b
            zip: "94107"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                "version": "7d9753112507b9dda4fb97910f39b06e",
                "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                "phone_number": "5825710808",
                "street_1": "412 Kiera Stravenue",
                "street_2": "Suite 391",
                "city": "San Francisco",
                "state": "CA",
                "zip": "94107",
                "country": "USA",
                "active": true,
                "mailing_address": false,
                "filing_address": false,
                "created_at": "2023-09-12T16:42:25.000-07:00",
                "updated_at": "2023-09-12T16:42:25.000-07:00"
              }
            type: simple
    x-speakeasy-test-group: Locations
  - workflowId: put-v1-locations-location_id-Basic
    steps:
      - stepId: test
        operationId: put-v1-locations-location_id
        parameters:
          - name: location_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Locations
  - workflowId: put-v1-locations-location_id-Resource
    steps:
      - stepId: test
        operationId: put-v1-locations-location_id
        parameters:
          - name: location_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Locations
  - workflowId: put-v1-locations-location_id-Nested
    steps:
      - stepId: test
        operationId: put-v1-locations-location_id
        parameters:
          - name: location_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Locations
  - workflowId: get-v1-locations-location_uuid-minimum_wages-Example
    steps:
      - stepId: test
        operationId: get-v1-locations-location_uuid-minimum_wages
        parameters:
          - name: location_uuid
            in: path
            value: <id>
          - name: effective_date
            in: query
            value: "2020-01-31"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "70c523ff-c71e-4474-9c83-a4ea51bd54a8",
                  "wage": "13.0",
                  "wage_type": "Regular",
                  "effective_date": "2022-01-01",
                  "authority": "State",
                  "notes": "Employers with 6 or more employees"
                }
              ]
            type: simple
    x-speakeasy-test-group: Locations
  - workflowId: post-v1-companies-company_id-bank-accounts-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-bank-accounts
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: "9775014007"
            account_type: Checking
            routing_number: "115092013"
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65",
                "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36",
                "account_type": "Checking",
                "routing_number": "851070439",
                "hidden_account_number": "XXXX4087",
                "verification_status": "verified",
                "verification_type": "bank_deposits",
                "name": "Employer Funding Account"
              }
            type: simple
    x-speakeasy-test-group: bankAccounts
  - workflowId: post-v1-companies-company_id-bank-accounts-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-bank-accounts
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: bankAccounts
  - workflowId: post-v1-companies-company_id-bank-accounts-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-bank-accounts
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: bankAccounts
  - workflowId: post-v1-companies-company_id-bank-accounts-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-bank-accounts
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: bankAccounts
  - workflowId: get-v1-companies-company_id-bank-accounts-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-bank-accounts
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65",
                  "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36",
                  "account_type": "Checking",
                  "routing_number": "851070439",
                  "hidden_account_number": "XXXX4087",
                  "verification_status": "verified",
                  "verification_type": "bank_deposits",
                  "name": "Employer Funding Account"
                }
              ]
            type: simple
    x-speakeasy-test-group: bankAccounts
  - workflowId: put-v1-companies-company_id-bank-accounts-verify-Example
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-bank-accounts-verify
        parameters:
          - name: bank_account_uuid
            in: path
            value: <id>
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            deposit_1: 0.02
            deposit_2: 0.42
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65",
                "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36",
                "account_type": "Checking",
                "routing_number": "851070439",
                "hidden_account_number": "XXXX4087",
                "verification_status": "verified",
                "verification_type": "bank_deposits",
                "name": "Employer Funding Account"
              }
            type: simple
    x-speakeasy-test-group: bankAccounts
  - workflowId: put-v1-companies-company_id-bank-accounts-verify-Basic
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-bank-accounts-verify
        parameters:
          - name: bank_account_uuid
            in: path
            value: <id>
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            deposit_1: 7888.92
            deposit_2: 1895.95
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: bankAccounts
  - workflowId: put-v1-companies-company_id-bank-accounts-verify-Resource
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-bank-accounts-verify
        parameters:
          - name: bank_account_uuid
            in: path
            value: <id>
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            deposit_1: 1870.97
            deposit_2: 2271.38
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: bankAccounts
  - workflowId: put-v1-companies-company_id-bank-accounts-verify-Nested
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-bank-accounts-verify
        parameters:
          - name: bank_account_uuid
            in: path
            value: <id>
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            deposit_1: 7567.55
            deposit_2: 3940.54
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: bankAccounts
  - workflowId: post-v1-plaid-processor_token-Create a company bank account
    steps:
      - stepId: test
        operationId: post-v1-plaid-processor_token
        requestBody:
          contentType: application/json
          payload:
            owner_id: ef279fbd-0fc6-4cf1-a977-6939d621c429
            owner_type: Company
            processor_token: processor-sandbox-0asd1-a92nc
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "493064d9-7add-4beb-9379-b10d2aea7313"
              }
            type: simple
    x-speakeasy-test-group: bankAccounts
  - workflowId: post-v1-plaid-processor_token-Example
    steps:
      - stepId: test
        operationId: post-v1-plaid-processor_token
        requestBody:
          contentType: application/json
          payload:
            owner_id: <id>
            owner_type: Company
            processor_token: <value>
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65",
                "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36",
                "account_type": "Checking",
                "routing_number": "851070439",
                "hidden_account_number": "XXXX4087",
                "verification_status": "verified",
                "verification_type": "plaid_external",
                "name": "Employer Funding Account"
              }
            type: simple
    x-speakeasy-test-group: bankAccounts
  - workflowId: post-v1-plaid-processor_token-Basic
    steps:
      - stepId: test
        operationId: post-v1-plaid-processor_token
        requestBody:
          contentType: application/json
          payload:
            owner_id: <id>
            owner_type: Company
            processor_token: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: bankAccounts
  - workflowId: post-v1-plaid-processor_token-Resource
    steps:
      - stepId: test
        operationId: post-v1-plaid-processor_token
        requestBody:
          contentType: application/json
          payload:
            owner_id: <id>
            owner_type: Company
            processor_token: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: bankAccounts
  - workflowId: post-v1-plaid-processor_token-Nested
    steps:
      - stepId: test
        operationId: post-v1-plaid-processor_token
        requestBody:
          contentType: application/json
          payload:
            owner_id: <id>
            owner_type: Company
            processor_token: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: bankAccounts
  - workflowId: post-v1-external-payroll-Example
    steps:
      - stepId: test
        operationId: post-v1-external-payroll
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: "2022-06-01"
            payment_period_end_date: "2022-05-30"
            payment_period_start_date: "2022-05-15"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9",
                "check_date": "2022-06-03T00:00:00Z",
                "payment_period_start_date": "2022-05-15T00:00:00Z",
                "payment_period_end_date": "2022-05-30T00:00:00Z",
                "status": "unprocessed",
                "external_payroll_items": [
                  {
                    "employee_uuid": "44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca",
                    "earnings": [
                      {
                        "amount": "10000.0",
                        "hours": "0.0",
                        "earning_type": "CompanyPayType",
                        "earning_id": 1
                      },
                      {
                        "amount": "500.0",
                        "hours": "0.0",
                        "earning_type": "CompanyEarningType",
                        "earning_id": 4
                      }
                    ],
                    "benefits": [
                      {
                        "benefit_id": 22,
                        "company_contribution_amount": "100.0",
                        "employee_deduction_amount": "50.0"
                      },
                      {
                        "benefit_id": 25,
                        "company_contribution_amount": "0.0",
                        "employee_deduction_amount": "300.0"
                      }
                    ],
                    "taxes": [
                      {
                        "tax_id": 1,
                        "amount": "400.0"
                      },
                      {
                        "tax_id": 2,
                        "amount": "60.0"
                      }
                    ]
                  }
                ],
                "applicable_earnings": [
                  {
                    "earning_type": "CompanyPayType",
                    "earning_id": 1,
                    "name": "Regular Wages",
                    "input_type": "amount",
                    "category": "default"
                  },
                  {
                    "earning_type": "CompanyEarningType",
                    "earning_id": 4,
                    "name": "Cash Tips",
                    "input_type": "amount",
                    "category": "default"
                  }
                ],
                "applicable_benefits": [
                  {
                    "id": 22,
                    "description": "Kaiser",
                    "active": true
                  },
                  {
                    "id": 25,
                    "description": "HSA",
                    "active": true
                  }
                ],
                "applicable_taxes": [
                  {
                    "id": 1,
                    "name": "Federal Income Tax",
                    "employer_tax": false,
                    "resident_tax": false
                  },
                  {
                    "id": 2,
                    "name": "Social Security",
                    "employer_tax": false,
                    "resident_tax": false
                  }
                ],
                "metadata": {
                  "deletable": true
                }
              }
            type: simple
    x-speakeasy-test-group: externalPayrolls
  - workflowId: post-v1-external-payroll-Basic
    steps:
      - stepId: test
        operationId: post-v1-external-payroll
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: <value>
            payment_period_end_date: <value>
            payment_period_start_date: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: externalPayrolls
  - workflowId: post-v1-external-payroll-Resource
    steps:
      - stepId: test
        operationId: post-v1-external-payroll
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: <value>
            payment_period_end_date: <value>
            payment_period_start_date: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: externalPayrolls
  - workflowId: post-v1-external-payroll-Nested
    steps:
      - stepId: test
        operationId: post-v1-external-payroll
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: <value>
            payment_period_end_date: <value>
            payment_period_start_date: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: externalPayrolls
  - workflowId: get-v1-company-external-payrolls-Example
    steps:
      - stepId: test
        operationId: get-v1-company-external-payrolls
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                  "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9",
                  "check_date": "2022-06-03T00:00:00Z",
                  "payment_period_start_date": "2022-05-15T00:00:00Z",
                  "payment_period_end_date": "2022-05-30T00:00:00Z",
                  "status": "unprocessed"
                }
              ]
            type: simple
    x-speakeasy-test-group: externalPayrolls
  - workflowId: get-v1-external-payroll-Example
    steps:
      - stepId: test
        operationId: get-v1-external-payroll
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: external_payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9",
                "check_date": "2022-06-03T00:00:00Z",
                "payment_period_start_date": "2022-05-15T00:00:00Z",
                "payment_period_end_date": "2022-05-30T00:00:00Z",
                "status": "unprocessed",
                "external_payroll_items": [
                  {
                    "employee_uuid": "44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca",
                    "earnings": [
                      {
                        "amount": "10000.0",
                        "hours": "0.0",
                        "earning_type": "CompanyPayType",
                        "earning_id": 1
                      },
                      {
                        "amount": "500.0",
                        "hours": "0.0",
                        "earning_type": "CompanyEarningType",
                        "earning_id": 4
                      }
                    ],
                    "benefits": [
                      {
                        "benefit_id": 22,
                        "company_contribution_amount": "100.0",
                        "employee_deduction_amount": "50.0"
                      },
                      {
                        "benefit_id": 25,
                        "company_contribution_amount": "0.0",
                        "employee_deduction_amount": "300.0"
                      }
                    ],
                    "taxes": [
                      {
                        "tax_id": 1,
                        "amount": "400.0"
                      },
                      {
                        "tax_id": 2,
                        "amount": "60.0"
                      }
                    ]
                  }
                ],
                "applicable_earnings": [
                  {
                    "earning_type": "CompanyPayType",
                    "earning_id": 1,
                    "name": "Regular Wages",
                    "input_type": "amount",
                    "category": "default"
                  },
                  {
                    "earning_type": "CompanyEarningType",
                    "earning_id": 4,
                    "name": "Cash Tips",
                    "input_type": "amount",
                    "category": "default"
                  }
                ],
                "applicable_benefits": [
                  {
                    "id": 22,
                    "description": "Kaiser",
                    "active": true
                  },
                  {
                    "id": 25,
                    "description": "HSA",
                    "active": true
                  }
                ],
                "applicable_taxes": [
                  {
                    "id": 1,
                    "name": "Federal Income Tax",
                    "employer_tax": false,
                    "resident_tax": false
                  },
                  {
                    "id": 2,
                    "name": "Social Security",
                    "employer_tax": false,
                    "resident_tax": false
                  }
                ],
                "metadata": {
                  "deletable": true
                }
              }
            type: simple
    x-speakeasy-test-group: externalPayrolls
  - workflowId: delete-v1-external-payroll
    steps:
      - stepId: test
        operationId: delete-v1-external-payroll
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: external_payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: externalPayrolls
  - workflowId: put-v1-external-payroll-Example
    steps:
      - stepId: test
        operationId: put-v1-external-payroll
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: external_payroll_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            external_payroll_items:
              - benefits:
                  - benefit_id: 10
                    company_contribution_amount: "300.0"
                    employee_deduction_amount: "300.0"
                  - benefit_id: 21
                    company_contribution_amount: "50.0"
                    employee_deduction_amount: "100.0"
                earnings:
                  - amount: "200.00"
                    earning_id: 1
                    earning_type: CompanyPayType
                    hours: "0.0"
                  - amount: "5000.00"
                    earning_id: 2
                    earning_type: CompanyEarningType
                    hours: "0.0"
                employee_uuid: 403c6ee3-5f58-40ef-a117-ff7175cd9ee3
                taxes:
                  - amount: "20.0"
                    tax_id: 1
                  - amount: "100.0"
                    tax_id: 2
            replace_fields: true
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9",
                "check_date": "2022-06-03T00:00:00Z",
                "payment_period_start_date": "2022-05-15T00:00:00Z",
                "payment_period_end_date": "2022-05-30T00:00:00Z",
                "status": "unprocessed",
                "external_payroll_items": [
                  {
                    "employee_uuid": "44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca",
                    "earnings": [
                      {
                        "amount": "10000.0",
                        "hours": "0.0",
                        "earning_type": "CompanyPayType",
                        "earning_id": 1
                      },
                      {
                        "amount": "500.0",
                        "hours": "0.0",
                        "earning_type": "CompanyEarningType",
                        "earning_id": 4
                      }
                    ],
                    "benefits": [
                      {
                        "benefit_id": 22,
                        "company_contribution_amount": "100.0",
                        "employee_deduction_amount": "50.0"
                      },
                      {
                        "benefit_id": 25,
                        "company_contribution_amount": "0.0",
                        "employee_deduction_amount": "300.0"
                      }
                    ],
                    "taxes": [
                      {
                        "tax_id": 1,
                        "amount": "400.0"
                      },
                      {
                        "tax_id": 2,
                        "amount": "60.0"
                      }
                    ]
                  }
                ],
                "applicable_earnings": [
                  {
                    "earning_type": "CompanyPayType",
                    "earning_id": 1,
                    "name": "Regular Wages",
                    "input_type": "amount",
                    "category": "default"
                  },
                  {
                    "earning_type": "CompanyEarningType",
                    "earning_id": 4,
                    "name": "Cash Tips",
                    "input_type": "amount",
                    "category": "default"
                  }
                ],
                "applicable_benefits": [
                  {
                    "id": 22,
                    "description": "Kaiser",
                    "active": true
                  },
                  {
                    "id": 25,
                    "description": "HSA",
                    "active": true
                  }
                ],
                "applicable_taxes": [
                  {
                    "id": 1,
                    "name": "Federal Income Tax",
                    "employer_tax": false,
                    "resident_tax": false
                  },
                  {
                    "id": 2,
                    "name": "Social Security",
                    "employer_tax": false,
                    "resident_tax": false
                  }
                ],
                "metadata": {
                  "deletable": true
                }
              }
            type: simple
    x-speakeasy-test-group: externalPayrolls
  - workflowId: put-v1-external-payroll-Basic
    steps:
      - stepId: test
        operationId: put-v1-external-payroll
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: external_payroll_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: externalPayrolls
  - workflowId: put-v1-external-payroll-Resource
    steps:
      - stepId: test
        operationId: put-v1-external-payroll
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: external_payroll_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: externalPayrolls
  - workflowId: put-v1-external-payroll-Nested
    steps:
      - stepId: test
        operationId: put-v1-external-payroll
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: external_payroll_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: externalPayrolls
  - workflowId: get-v1-external-payroll-calculate-taxes-Example
    steps:
      - stepId: test
        operationId: get-v1-external-payroll-calculate-taxes
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: external_payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "employee_uuid": "d21848d5-446f-48a8-9430-30fbefeabda4",
                  "tax_suggestions": [
                    {
                      "tax_id": 1,
                      "amount": "500.0"
                    },
                    {
                      "tax_id": 2,
                      "amount": "100.0"
                    },
                    {
                      "tax_id": 4,
                      "amount": "30.0"
                    }
                  ]
                }
              ]
            type: simple
    x-speakeasy-test-group: externalPayrolls
  - workflowId: get-v1-tax-liabilities-Example
    steps:
      - stepId: test
        operationId: get-v1-tax-liabilities
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                [
                  {
                    "tax_id": 1,
                    "tax_name": "Federal Income Tax",
                    "last_unpaid_external_payroll_uuid": null,
                    "possible_liabilities": [
                      {
                        "liability_amount": "0.0",
                        "payroll_check_date": null,
                        "external_payroll_uuid": null
                      },
                      {
                        "liability_amount": "3000.0",
                        "payroll_check_date": "2022-06-01T00:00:00Z",
                        "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"
                      }
                    ]
                  }
                ],
                [
                  {
                    "tax_id": 2,
                    "tax_name": "Social Security",
                    "last_unpaid_external_payroll_uuid": null,
                    "possible_liabilities": [
                      {
                        "liability_amount": "0.0",
                        "payroll_check_date": null,
                        "external_payroll_uuid": null
                      },
                      {
                        "liability_amount": "50.0",
                        "payroll_check_date": "2022-06-01T00:00:00Z",
                        "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"
                      }
                    ]
                  }
                ]
              ]
            type: simple
    x-speakeasy-test-group: externalPayrolls
  - workflowId: put-v1-tax-liabilities-Example
    steps:
      - stepId: test
        operationId: put-v1-tax-liabilities
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            liability_selections:
              - last_unpaid_external_payroll_uuid: 7985032c-ee3a-4e98-af27-d56551eb5f1c
                tax_id: 1
                unpaid_liability_amount: 50
              - last_unpaid_external_payroll_uuid: 5ed14dbb-958f-47c8-b16e-c4fed82dc486
                tax_id: 2
                unpaid_liability_amount: 400
              - last_unpaid_external_payroll_uuid: null
                tax_id: 8
                unpaid_liability_amount: 0
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                [
                  {
                    "tax_id": 1,
                    "tax_name": "Federal Income Tax",
                    "last_unpaid_external_payroll_uuid": null,
                    "possible_liabilities": [
                      {
                        "liability_amount": "0.0",
                        "payroll_check_date": null,
                        "external_payroll_uuid": null
                      },
                      {
                        "liability_amount": "3000.0",
                        "payroll_check_date": "2022-06-01T00:00:00Z",
                        "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"
                      }
                    ]
                  }
                ],
                [
                  {
                    "tax_id": 2,
                    "tax_name": "Social Security",
                    "last_unpaid_external_payroll_uuid": null,
                    "possible_liabilities": [
                      {
                        "liability_amount": "0.0",
                        "payroll_check_date": null,
                        "external_payroll_uuid": null
                      },
                      {
                        "liability_amount": "50.0",
                        "payroll_check_date": "2022-06-01T00:00:00Z",
                        "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"
                      }
                    ]
                  }
                ]
              ]
            type: simple
    x-speakeasy-test-group: externalPayrolls
  - workflowId: put-v1-tax-liabilities-Basic
    steps:
      - stepId: test
        operationId: put-v1-tax-liabilities
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: externalPayrolls
  - workflowId: put-v1-tax-liabilities-Resource
    steps:
      - stepId: test
        operationId: put-v1-tax-liabilities
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: externalPayrolls
  - workflowId: put-v1-tax-liabilities-Nested
    steps:
      - stepId: test
        operationId: put-v1-tax-liabilities
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: externalPayrolls
  - workflowId: put-v1-tax-liabilities-finish-Basic
    steps:
      - stepId: test
        operationId: put-v1-tax-liabilities-finish
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
    x-speakeasy-test-group: externalPayrolls
  - workflowId: put-v1-tax-liabilities-finish-Resource
    steps:
      - stepId: test
        operationId: put-v1-tax-liabilities-finish
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
    x-speakeasy-test-group: externalPayrolls
  - workflowId: put-v1-tax-liabilities-finish-Nested
    steps:
      - stepId: test
        operationId: put-v1-tax-liabilities-finish
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
    x-speakeasy-test-group: externalPayrolls
  - workflowId: get-v1-company-payment-configs-Example
    steps:
      - stepId: test
        operationId: get-v1-company-payment-configs
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "company_uuid": "423dd616-6dbc-4724-938a-403f6217a933",
                "partner_uuid": "556f05d0-48e0-4c47-bce5-db9aea923043",
                "fast_payment_limit": "5000",
                "payment_speed": "2-day"
              }
            type: simple
    x-speakeasy-test-group: paymentConfigs
  - workflowId: put-v1-company-payment-configs-Example
    steps:
      - stepId: test
        operationId: put-v1-company-payment-configs
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            fast_payment_limit: "5000"
            payment_speed: 2-day
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "company_uuid": "423dd616-6dbc-4724-938a-403f6217a933",
                "partner_uuid": "556f05d0-48e0-4c47-bce5-db9aea923043",
                "fast_payment_limit": "5000",
                "payment_speed": "2-day"
              }
            type: simple
    x-speakeasy-test-group: paymentConfigs
  - workflowId: put-v1-company-payment-configs-Basic
    steps:
      - stepId: test
        operationId: put-v1-company-payment-configs
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            payment_speed: 2-day
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paymentConfigs
  - workflowId: put-v1-company-payment-configs-Resource
    steps:
      - stepId: test
        operationId: put-v1-company-payment-configs
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            fast_payment_limit: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paymentConfigs
  - workflowId: put-v1-company-payment-configs-Nested
    steps:
      - stepId: test
        operationId: put-v1-company-payment-configs
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            payment_speed: 2-day
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paymentConfigs
  - workflowId: post-v1-companies-company_id-pay_schedules-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            anchor_end_of_pay_period: "2021-10-15"
            anchor_pay_date: "2021-10-15"
            custom_name: demo pay schedule
            day_1: 15
            day_2: 31
            frequency: Twice per month
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052",
                "frequency": "Twice per month",
                "anchor_pay_date": "2020-05-15",
                "anchor_end_of_pay_period": "2020-05-08",
                "day_1": 15,
                "day_2": 31,
                "name": "Engineering",
                "custom_name": "A new monthly pay schedule",
                "auto_pilot": false,
                "active": true
              }
            type: simple
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-companies-company_id-pay_schedules-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            anchor_end_of_pay_period: "2020-05-08"
            anchor_pay_date: "2020-05-15"
            frequency: Every other week
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-companies-company_id-pay_schedules-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            anchor_end_of_pay_period: "2020-05-08"
            anchor_pay_date: "2020-05-15"
            frequency: Every other week
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-companies-company_id-pay_schedules-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            anchor_end_of_pay_period: "2020-05-08"
            anchor_pay_date: "2020-05-15"
            frequency: Every week
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: paySchedules
  - workflowId: get-v1-companies-company_id-pay_schedules-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-pay_schedules
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "2097fe08-407a-46d7-b35c-a32402a2355e",
                  "frequency": "Twice per month",
                  "anchor_pay_date": "2020-05-15",
                  "anchor_end_of_pay_period": "2020-05-08",
                  "day_1": 15,
                  "day_2": 31,
                  "name": "Engineering",
                  "custom_name": "Engineering department pay schedule",
                  "auto_pilot": false,
                  "active": true
                },
                {
                  "uuid": "8fc9f556-74fa-4271-97f6-4bfbfc5a5352",
                  "frequency": "Monthly",
                  "anchor_pay_date": "2020-05-31",
                  "day_1": 31,
                  "day_2": null,
                  "name": "Sales",
                  "custom_name": "Sales department monthly schedule",
                  "auto_pilot": false,
                  "active": false
                },
                {
                  "uuid": "0e07d35a-af11-4123-bfcb-4dd5f2f12ee1",
                  "frequency": "Monthly",
                  "anchor_pay_date": "2020-05-31",
                  "day_1": 31,
                  "day_2": null,
                  "name": "Staff",
                  "custom_name": "Staff department pay schedule",
                  "auto_pilot": true,
                  "active": false
                }
              ]
            type: simple
    x-speakeasy-test-group: paySchedules
  - workflowId: get-v1-companies-company_id-pay_schedules-preview-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-pay_schedules-preview
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: frequency
            in: query
            value: Monthly
          - name: anchor_pay_date
            in: query
            value: "2020-05-15"
          - name: anchor_end_of_pay_period
            in: query
            value: "2020-05-08"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "pay_periods": [
                  {
                    "check_date": "2023-12-15T00:00:00Z",
                    "run_payroll_by": "2023-12-13T00:00:00Z",
                    "start_date": "2023-10-01T00:00:00Z",
                    "end_date": "2023-12-31T00:00:00Z"
                  },
                  {
                    "check_date": "2024-03-15T00:00:00Z",
                    "run_payroll_by": "2024-03-13T00:00:00Z",
                    "start_date": "2024-01-01T00:00:00Z",
                    "end_date": "2024-03-31T00:00:00Z"
                  },
                  {
                    "check_date": "2024-06-14T00:00:00Z",
                    "run_payroll_by": "2024-06-12T00:00:00Z",
                    "start_date": "2024-04-01T00:00:00Z",
                    "end_date": "2024-06-30T00:00:00Z"
                  },
                  {
                    "check_date": "2024-09-13T00:00:00Z",
                    "run_payroll_by": "2024-09-11T00:00:00Z",
                    "start_date": "2024-07-01T00:00:00Z",
                    "end_date": "2024-09-30T00:00:00Z"
                  }
                ],
                "holidays": [
                  "2023-10-09T00:00:00Z",
                  "2023-11-11T00:00:00Z",
                  "2023-11-23T00:00:00Z",
                  "2023-12-25T00:00:00Z",
                  "2024-01-01T00:00:00Z",
                  "2024-01-15T00:00:00Z",
                  "2024-02-19T00:00:00Z",
                  "2024-05-27T00:00:00Z",
                  "2024-06-19T00:00:00Z",
                  "2024-07-04T00:00:00Z",
                  "2024-09-02T00:00:00Z"
                ]
              }
            type: simple
    x-speakeasy-test-group: paySchedules
  - workflowId: get-v1-companies-company_id-pay_schedules-pay_schedule_id-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-pay_schedules-pay_schedule_id
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: pay_schedule_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052",
                "frequency": "Twice per month",
                "anchor_pay_date": "2020-05-15",
                "anchor_end_of_pay_period": "2020-05-08",
                "day_1": 15,
                "day_2": 31,
                "name": "Engineering",
                "custom_name": "A new monthly pay schedule",
                "auto_pilot": false,
                "active": true
              }
            type: simple
    x-speakeasy-test-group: paySchedules
  - workflowId: put-v1-companies-company_id-pay_schedules-pay_schedule_id-Example
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-pay_schedules-pay_schedule_id
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: pay_schedule_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            anchor_end_of_pay_period: "2021-10-15"
            anchor_pay_date: "2021-10-15"
            auto_pilot: true
            custom_name: demo pay schedule
            day_1: 15
            day_2: 31
            frequency: Twice per month
            version: 68934a3e9455fa72420237eb05902327
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052",
                "frequency": "Twice per month",
                "anchor_pay_date": "2020-05-15",
                "anchor_end_of_pay_period": "2020-05-08",
                "day_1": 15,
                "day_2": 31,
                "name": "Engineering",
                "custom_name": "A new monthly pay schedule",
                "auto_pilot": false,
                "active": true
              }
            type: simple
    x-speakeasy-test-group: paySchedules
  - workflowId: put-v1-companies-company_id-pay_schedules-pay_schedule_id-Basic
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-pay_schedules-pay_schedule_id
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: pay_schedule_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            anchor_end_of_pay_period: "2020-05-08"
            anchor_pay_date: "2020-05-15"
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paySchedules
  - workflowId: put-v1-companies-company_id-pay_schedules-pay_schedule_id-Resource
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-pay_schedules-pay_schedule_id
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: pay_schedule_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            anchor_end_of_pay_period: "2020-05-08"
            anchor_pay_date: "2020-05-15"
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paySchedules
  - workflowId: put-v1-companies-company_id-pay_schedules-pay_schedule_id-Nested
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-pay_schedules-pay_schedule_id
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: pay_schedule_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            anchor_end_of_pay_period: "2020-05-08"
            anchor_pay_date: "2020-05-15"
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paySchedules
  - workflowId: get-v1-companies-company_id-pay_periods-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-pay_periods
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: start_date
            in: query
            value: "2020-01-01"
          - name: end_date
            in: query
            value: "2020-01-31"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "start_date": "2020-01-11",
                  "end_date": "2020-01-24",
                  "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501",
                  "payroll": {
                    "payroll_uuid": "bfd8aad4-9c3f-4ca3-b072-a1b2b3ea689f",
                    "check_date": "2020-01-30",
                    "processed": true,
                    "payroll_deadline": "2020-01-28",
                    "payroll_type": "regular"
                  }
                },
                {
                  "start_date": "2020-12-12",
                  "end_date": "2020-12-25",
                  "pay_schedule_uuid": "cb53db72-612f-4eb1-9b85-389e79cfa510",
                  "payroll": {
                    "payroll_uuid": "7ed29b45-4bb1-4d38-bd94-4d607d49fd21",
                    "check_date": "2020-12-30",
                    "processed": true,
                    "payroll_deadline": "2020-12-28",
                    "payroll_type": "regular"
                  }
                }
              ]
            type: simple
    x-speakeasy-test-group: paySchedules
  - workflowId: get-v1-companies-company_id-unprocessed_termination_pay_periods-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-unprocessed_termination_pay_periods
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "start_date": "2023-01-11",
                  "end_date": "2023-01-24",
                  "check_date": "2023-01-28",
                  "debit_date": "2023-01-26",
                  "employee_name": "Mary Warner",
                  "employee_uuid": "094f6ded-a790-4651-87e6-4a7f15dec7c6",
                  "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                },
                {
                  "start_date": "2023-01-25",
                  "end_date": "2023-02-07",
                  "check_date": "2023-02-10",
                  "debit_date": "2023-02-08",
                  "employee_name": "Mary Warner",
                  "employee_uuid": "094f6ded-a790-4651-87e6-4a7f15dec7c6",
                  "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                }
              ]
            type: simple
    x-speakeasy-test-group: paySchedules
  - workflowId: get-v1-companies-company_id-pay_schedules-assignments-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-pay_schedules-assignments
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "type": "by_employee",
                "employees": [
                  {
                    "employee_uuid": "f0238368-f2cf-43e2-9a07-b0265f2cec69",
                    "pay_schedule_uuid": "c277ac52-9871-4a96-a1e6-0c449684602a"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-companies-company_id-pay_schedules-assignment_preview-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules-assignment_preview
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employees:
              - employee_uuid: f0238368-f2cf-43e2-9a07-b0265f2cec69
                pay_schedule_uuid: c277ac52-9871-4a96-a1e6-0c449684602a
            type: by_employee
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "type": "hourly_salaried",
                "employee_changes": [
                  {
                    "employee_uuid": "43b39ada-dc49-4879-9594-fe95f67ae434",
                    "first_name": "Penny",
                    "last_name": "Parker",
                    "pay_frequency": "Twice per month â€” Salaried pay schedule",
                    "first_pay_period": {
                      "pay_schedule_uuid": "3f029a58-155d-4c30-8361-cc266b2c1f11",
                      "start_date": "2023-07-01T00:00:00Z",
                      "end_date": "2023-08-01T00:00:00Z",
                      "check_date": "2023-08-02T00:00:00Z"
                    },
                    "transition_pay_period": {
                      "start_date": "2023-06-20T00:00:00Z",
                      "end_date": "2023-06-30T00:00:00Z"
                    }
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-companies-company_id-pay_schedules-assignment_preview-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules-assignment_preview
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: hourly_salaried
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-companies-company_id-pay_schedules-assignment_preview-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules-assignment_preview
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: hourly_salaried
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-companies-company_id-pay_schedules-assignment_preview-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules-assignment_preview
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: single
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-companies-company_id-pay_schedules-assign-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules-assign
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employees:
              - employee_uuid: f0238368-f2cf-43e2-9a07-b0265f2cec69
                pay_schedule_uuid: c277ac52-9871-4a96-a1e6-0c449684602a
            type: by_employee
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-companies-company_id-pay_schedules-assign-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules-assign
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: by_department
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-companies-company_id-pay_schedules-assign-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules-assign
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: single
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-companies-company_id-pay_schedules-assign-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-pay_schedules-assign
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: hourly_salaried
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: paySchedules
  - workflowId: post-v1-employees-Example
    steps:
      - stepId: test
        operationId: post-v1-employees
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            date_of_birth: "1995-05-05"
            email: knight0faith@example.com
            first_name: Soren
            last_name: Kierkegaard
            middle_initial: A
            preferred_first_name: Angel
            ssn: "123456294"
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "2593d737-d298-41b9-954f-79fed0af3fb4",
                "first_name": "Marc",
                "last_name": "Mertz",
                "eligible_paid_time_off": [
                  {
                    "accrual_unit": "Hour",
                    "accrual_method": "unlimited",
                    "accrual_period": "Year"
                  },
                  {
                    "accrual_unit": "Hour",
                    "accrual_method": "unlimited",
                    "accrual_period": "Year"
                  }
                ],
                "payment_method": "Check"
              }
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: post-v1-employees-Create Employee Example
    steps:
      - stepId: test
        operationId: post-v1-employees
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            first_name: Jed
            last_name: Johnson
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e",
                "first_name": "Isom",
                "middle_initial": null,
                "last_name": "Jaskolski",
                "email": "dane7757869450111550@botsford.net",
                "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365",
                "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                "version": "1c7ba9d62c8bafbfff998ffccad5d296",
                "department": "Stage Hand",
                "terminated": false,
                "two_percent_shareholder": false,
                "onboarded": true,
                "onboarding_status": "onboarding_completed",
                "onboarding_documents_config": {
                  "uuid": null,
                  "i9_document": false
                },
                "jobs": [
                  {
                    "uuid": "428a653a-0745-4db4-9c80-558288d416fa",
                    "version": "6c0ed1521e8b86eb36bd4455a63a2dac",
                    "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f",
                    "hire_date": "2020-01-20",
                    "title": "Client Support Director",
                    "primary": true,
                    "rate": "70000.00",
                    "payment_unit": "Year",
                    "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669",
                    "compensations": [
                      {
                        "uuid": "145660ed-6fcc-4211-8915-18e2786290a2",
                        "version": "2cd4b18662395eb53bcf80d5b5447f36",
                        "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e",
                        "rate": "70000.00",
                        "payment_unit": "Year",
                        "flsa_status": "Exempt",
                        "effective_date": "2021-01-20",
                        "adjust_for_minimum_wage": false,
                        "minimum_wages": []
                      }
                    ]
                  }
                ],
                "eligible_paid_time_off": [
                  {
                    "name": "Sick Hours",
                    "policy_name": "Sick Policy",
                    "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7",
                    "accrual_unit": "Hour",
                    "accrual_rate": "208.0",
                    "accrual_method": "per_hour_worked",
                    "accrual_period": "Year",
                    "accrual_balance": "31.8",
                    "maximum_accrual_balance": "240.0",
                    "paid_at_termination": false
                  },
                  {
                    "name": "Vacation Hours",
                    "policy_name": "Vacation Policy",
                    "policy_uuid": "ab59de61-239f-4805-933b-0e3360ed291c",
                    "accrual_unit": "Hour",
                    "accrual_rate": "208.0",
                    "accrual_period": "Year",
                    "accrual_balance": "77.8",
                    "maximum_accrual_balance": "240.0",
                    "paid_at_termination": true
                  }
                ],
                "terminations": [],
                "garnishments": [],
                "custom_fields": [
                  {
                    "id": "ee515986-f3ca-49da-b576-2691b95262f9",
                    "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                    "name": "employee_level",
                    "type": "text",
                    "description": "Employee Level",
                    "value": "2",
                    "selection_options": null
                  },
                  {
                    "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                    "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                    "name": "t-shirt size",
                    "type": "text",
                    "description": "What is your t-shirt size?",
                    "value": "md",
                    "selection_options": null
                  },
                  {
                    "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                    "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6",
                    "name": "favorite fruit",
                    "type": "radio",
                    "description": "Which is your favorite fruit?",
                    "value": "apple",
                    "selection_options": [
                      "apple",
                      "banana",
                      "orange"
                    ]
                  }
                ],
                "date_of_birth": "1986-06-25",
                "has_ssn": false,
                "ssn": "",
                "phone": "1234567890",
                "preferred_first_name": "Angel",
                "payment_method": "Check",
                "work_email": "angel.jaskolski@example.com"
              }
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: post-v1-employees-Basic
    steps:
      - stepId: test
        operationId: post-v1-employees
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            first_name: Stanton
            last_name: Auer
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Employees
  - workflowId: post-v1-employees-Resource
    steps:
      - stepId: test
        operationId: post-v1-employees
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            first_name: Clotilde
            last_name: Hermann
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Employees
  - workflowId: post-v1-employees-Nested
    steps:
      - stepId: test
        operationId: post-v1-employees
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            first_name: Hildegard
            last_name: Bins
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Employees
  - workflowId: get-v1-companies-company_id-employees-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-employees
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "9779767c-6044-48e0-bf68-aeb370b9a2e7",
                  "first_name": "Nicole",
                  "middle_initial": "M",
                  "last_name": "Boehm",
                  "email": "kory7757869450111548@barton-hermiston.io",
                  "company_uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2",
                  "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                  "version": "414dedaca594b77135e0b8d2f398516d",
                  "department": "Stage Hand",
                  "terminated": false,
                  "two_percent_shareholder": false,
                  "onboarded": true,
                  "onboarding_status": "onboarding_completed",
                  "onboarding_documents_config": {
                    "uuid": "9d5e3ce5-ea8f-4885-90e5-7ebbed03f7c5",
                    "i9_document": true
                  },
                  "jobs": [
                    {
                      "uuid": "5d5e3ce5-ea8f-4885-90e5-7ebaed03f7c5",
                      "version": "91179081a7309c9fbd31bb3cf7b9893e",
                      "employee_uuid": "a987bce1-6d06-43f8-9978-9db886f479fb",
                      "hire_date": "2020-01-20",
                      "title": "Client Support Manager",
                      "primary": true,
                      "rate": "22.00",
                      "payment_unit": "Hour",
                      "current_compensation_uuid": "798a962f-0fcf-491e-9b71-cfa6a1db114f",
                      "compensations": [
                        {
                          "uuid": "94f17a77-cfe5-436a-af94-422bbf8248ff",
                          "version": "233f0096a8015e62d9795fadf1fd300d",
                          "job_uuid": "64711ac0-83ff-4aaf-bec1-db72f5a44e56",
                          "rate": "22.00",
                          "payment_unit": "Hour",
                          "flsa_status": "Nonexempt",
                          "effective_date": "2021-01-20",
                          "adjust_for_minimum_wage": false,
                          "minimum_wages": []
                        }
                      ]
                    }
                  ],
                  "eligible_paid_time_off": [
                    {
                      "name": "Sick Hours",
                      "policy_name": "Sick Policy",
                      "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7",
                      "accrual_unit": "Hour",
                      "accrual_rate": "208.0",
                      "accrual_method": "per_hour_worked",
                      "accrual_period": "Year",
                      "accrual_balance": "71.0",
                      "maximum_accrual_balance": "240.0",
                      "paid_at_termination": false
                    },
                    {
                      "name": "Vacation Hours",
                      "policy_name": "Vacation Policy",
                      "policy_uuid": "8b312f0e-30e7-4810-9c06-1177a6484f2d",
                      "accrual_unit": "Hour",
                      "accrual_rate": "208.0",
                      "accrual_period": "Year",
                      "accrual_balance": "34.0",
                      "maximum_accrual_balance": "240.0",
                      "paid_at_termination": true
                    }
                  ],
                  "terminations": [],
                  "garnishments": [],
                  "date_of_birth": "1996-05-08",
                  "has_ssn": true,
                  "ssn": "",
                  "phone": "1234567890",
                  "preferred_first_name": "Vanessa",
                  "payment_method": "Check",
                  "work_email": "vanessa.boehm@example.com"
                },
                {
                  "uuid": "d7cb289a-af62-4120-9cd5-acda324b5c04",
                  "first_name": "Maci",
                  "middle_initial": "M",
                  "last_name": "Cassin",
                  "email": "claud_reinger7757869450111549@gutkowski.net",
                  "company_uuid": "4522d043-5731-406d-a129-de1808042a32",
                  "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                  "version": "e867459e1360fa71e78b88142923d341",
                  "department": "Band",
                  "terminated": false,
                  "two_percent_shareholder": false,
                  "onboarded": true,
                  "onboarding_status": "onboarding_completed",
                  "onboarding_documents_config": {
                    "uuid": "1d5e3ce5-ea8f-4885-90e5-7ebbed03f7c5",
                    "i9_document": true
                  },
                  "jobs": [
                    {
                      "uuid": "62a00cf7-342b-465e-a151-ecd295152be0",
                      "version": "d0e719137f89ca3dd334dd4cc248ffbb",
                      "employee_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                      "hire_date": "2020-01-20",
                      "title": "Account Director",
                      "primary": true,
                      "rate": "78000.00",
                      "payment_unit": "Year",
                      "current_compensation_uuid": "93e5da92-173b-4faa-a0bd-d1a8dee68be0",
                      "compensations": [
                        {
                          "uuid": "1bad5177-c4ed-432e-ab43-66055d40c3a5",
                          "version": "994b75511d1debac5d7e2ddeae13679f",
                          "job_uuid": "1214875b-f43d-4267-bf2f-a6d2c298ff3d",
                          "rate": "78000.00",
                          "payment_unit": "Year",
                          "flsa_status": "Exempt",
                          "effective_date": "2021-01-20",
                          "adjust_for_minimum_wage": false,
                          "minimum_wages": []
                        }
                      ]
                    }
                  ],
                  "eligible_paid_time_off": [
                    {
                      "name": "Sick Hours",
                      "policy_name": "Sick Policy",
                      "policy_uuid": "8b312f0e-30e7-4810-9c06-1177a6484f2d",
                      "accrual_unit": "Hour",
                      "accrual_rate": "208.0",
                      "accrual_method": "per_hour_worked",
                      "accrual_period": "Year",
                      "accrual_balance": "74.0",
                      "maximum_accrual_balance": "240.0",
                      "paid_at_termination": false
                    },
                    {
                      "name": "Vacation Hours",
                      "policy_name": "Vacation Policy",
                      "policy_uuid": "0d4c755e-50ac-4c54-b46e-81bdfa03da5b",
                      "accrual_unit": "Hour",
                      "accrual_rate": "208.0",
                      "accrual_period": "Year",
                      "accrual_balance": "16.0",
                      "maximum_accrual_balance": "240.0",
                      "paid_at_termination": true
                    }
                  ],
                  "terminations": [],
                  "garnishments": [],
                  "custom_fields": [
                    {
                      "id": "ee515986-f3ca-49da-b576-2691b95262f9",
                      "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                      "name": "employee_level",
                      "type": "text",
                      "description": "Employee Level",
                      "value": "2",
                      "selection_options": null
                    },
                    {
                      "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                      "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                      "name": "t-shirt size",
                      "type": "text",
                      "description": "What is your t-shirt size?",
                      "value": "md",
                      "selection_options": null
                    },
                    {
                      "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                      "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6",
                      "name": "favorite fruit",
                      "type": "radio",
                      "description": "Which is your favorite fruit?",
                      "value": "apple",
                      "selection_options": [
                        "apple",
                        "banana",
                        "orange"
                      ]
                    }
                  ],
                  "date_of_birth": "1995-09-21",
                  "has_ssn": true,
                  "ssn": "",
                  "phone": "1234567890",
                  "preferred_first_name": "Denis",
                  "payment_method": "Check",
                  "work_email": "denis.cassin@example.com"
                }
              ]
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: post-v1-historical_employees-Example
    steps:
      - stepId: test
        operationId: post-v1-historical_employees
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            date_of_birth: "1995-05-05T00:00:00Z"
            employee_state_taxes:
              wc_class_code: "20992"
              wc_covered: true
            first_name: Soren
            home_address:
              city: San Francisco
              state: CA
              street_1: 300 3rd Street
              street_2: null
              zip: "94107"
            job:
              hire_date: "2018-05-09T00:00:00Z"
            last_name: Kierkegaard
            middle_initial: A
            preferred_first_name: Angel
            ssn: "123456294"
            termination:
              effective_date: "2022-09-15T00:00:00Z"
            work_address:
              location_uuid: 1da85d35-1910-4d5e-8e94-39e8cdfe8c9a
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c5eac208-191a-4d7d-b286-05f8a2516327",
                "first_name": "Cordelia",
                "last_name": "Prosacco",
                "eligible_paid_time_off": [
                  {
                    "accrual_unit": "Hour",
                    "accrual_method": "unlimited",
                    "accrual_period": "Year"
                  },
                  {
                    "accrual_unit": "Hour",
                    "accrual_method": "unlimited",
                    "accrual_period": "Year"
                  },
                  {
                    "accrual_unit": "Hour",
                    "accrual_method": "unlimited",
                    "accrual_period": "Year"
                  }
                ],
                "payment_method": "Check"
              }
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: post-v1-historical_employees-Basic
    steps:
      - stepId: test
        operationId: post-v1-historical_employees
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            date_of_birth: "1953-04-11"
            first_name: Terrell
            home_address:
              city: Lake Deshawnshire
              state: Nebraska
              street_1: <value>
              zip: 28098-5552
            job: {}
            last_name: Mitchell
            ssn: <value>
            termination: {}
            work_address: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Employees
  - workflowId: post-v1-historical_employees-Resource
    steps:
      - stepId: test
        operationId: post-v1-historical_employees
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            date_of_birth: "1946-02-09"
            first_name: Bailey
            home_address:
              city: Dachtown
              state: North Carolina
              street_1: <value>
              zip: 68648-0485
            job: {}
            last_name: Quitzon
            ssn: <value>
            termination: {}
            work_address: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Employees
  - workflowId: post-v1-historical_employees-Nested
    steps:
      - stepId: test
        operationId: post-v1-historical_employees
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            date_of_birth: "1947-03-12"
            first_name: Saul
            home_address:
              city: Bergnaumland
              state: New Jersey
              street_1: <value>
              zip: "87338"
            job: {}
            last_name: Wintheiser-Wuckert
            ssn: <value>
            termination: {}
            work_address: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Employees
  - workflowId: put-v1-historical_employees-Example
    steps:
      - stepId: test
        operationId: put-v1-historical_employees
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: historical_employee_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            date_of_birth: "1995-05-05T00:00:00Z"
            employee_state_taxes:
              wc_class_code: "20992"
              wc_covered: true
            first_name: Soren
            home_address:
              city: San Francisco
              state: CA
              street_1: 300 3rd Street
              street_2: null
              zip: "94107"
            job:
              hire_date: "2018-05-09T00:00:00Z"
            last_name: Kierkegaard
            middle_initial: A
            ssn: "123456294"
            termination:
              effective_date: "2022-09-15T00:00:00Z"
            version: db0edd04aaac4506f7edab03ac855d56
            work_address:
              location_uuid: 1da85d35-1910-4d5e-8e94-39e8cdfe8c9a
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "cd736941-13a7-41a0-9995-88b35305ed27",
                "first_name": "Allison",
                "last_name": "Koepp",
                "eligible_paid_time_off": [
                  {
                    "accrual_unit": "Hour",
                    "accrual_method": "unlimited",
                    "accrual_period": "Year"
                  },
                  {
                    "accrual_unit": "Hour",
                    "accrual_method": "unlimited",
                    "accrual_period": "Year"
                  }
                ],
                "payment_method": "Check"
              }
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: get-v1-employees-Create Employee Example
    steps:
      - stepId: test
        operationId: get-v1-employees
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e",
                "first_name": "Isom",
                "middle_initial": null,
                "last_name": "Jaskolski",
                "email": "dane7757869450111550@botsford.net",
                "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365",
                "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                "version": "1c7ba9d62c8bafbfff998ffccad5d296",
                "department": "Stage Hand",
                "terminated": false,
                "two_percent_shareholder": false,
                "onboarded": true,
                "onboarding_status": "onboarding_completed",
                "onboarding_documents_config": {
                  "uuid": null,
                  "i9_document": false
                },
                "jobs": [
                  {
                    "uuid": "428a653a-0745-4db4-9c80-558288d416fa",
                    "version": "6c0ed1521e8b86eb36bd4455a63a2dac",
                    "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f",
                    "hire_date": "2020-01-20",
                    "title": "Client Support Director",
                    "primary": true,
                    "rate": "70000.00",
                    "payment_unit": "Year",
                    "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669",
                    "compensations": [
                      {
                        "uuid": "145660ed-6fcc-4211-8915-18e2786290a2",
                        "version": "2cd4b18662395eb53bcf80d5b5447f36",
                        "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e",
                        "rate": "70000.00",
                        "payment_unit": "Year",
                        "flsa_status": "Exempt",
                        "effective_date": "2021-01-20",
                        "adjust_for_minimum_wage": false,
                        "minimum_wages": []
                      }
                    ]
                  }
                ],
                "eligible_paid_time_off": [
                  {
                    "name": "Sick Hours",
                    "policy_name": "Sick Policy",
                    "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7",
                    "accrual_unit": "Hour",
                    "accrual_rate": "208.0",
                    "accrual_method": "per_hour_worked",
                    "accrual_period": "Year",
                    "accrual_balance": "31.8",
                    "maximum_accrual_balance": "240.0",
                    "paid_at_termination": false
                  },
                  {
                    "name": "Vacation Hours",
                    "policy_name": "Vacation Policy",
                    "policy_uuid": "ab59de61-239f-4805-933b-0e3360ed291c",
                    "accrual_unit": "Hour",
                    "accrual_rate": "208.0",
                    "accrual_period": "Year",
                    "accrual_balance": "77.8",
                    "maximum_accrual_balance": "240.0",
                    "paid_at_termination": true
                  }
                ],
                "terminations": [],
                "garnishments": [],
                "custom_fields": [
                  {
                    "id": "ee515986-f3ca-49da-b576-2691b95262f9",
                    "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                    "name": "employee_level",
                    "type": "text",
                    "description": "Employee Level",
                    "value": "2",
                    "selection_options": null
                  },
                  {
                    "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                    "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                    "name": "t-shirt size",
                    "type": "text",
                    "description": "What is your t-shirt size?",
                    "value": "md",
                    "selection_options": null
                  },
                  {
                    "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                    "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6",
                    "name": "favorite fruit",
                    "type": "radio",
                    "description": "Which is your favorite fruit?",
                    "value": "apple",
                    "selection_options": [
                      "apple",
                      "banana",
                      "orange"
                    ]
                  }
                ],
                "date_of_birth": "1986-06-25",
                "has_ssn": false,
                "ssn": "",
                "phone": "1234567890",
                "preferred_first_name": "Angel",
                "payment_method": "Check",
                "work_email": "angel.jaskolski@example.com"
              }
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: put-v1-employees-Example
    steps:
      - stepId: test
        operationId: put-v1-employees
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            date_of_birth: "1995-05-05"
            email: knight0faith@example.com
            first_name: Soren
            last_name: Kierkegaard
            middle_initial: A
            preferred_first_name: Angel
            ssn: "123456294"
            two_percent_shareholder: false
            version: db0edd04aaac4506f7edab03ac855d56
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "0488dda5-9bd2-4e22-8225-091b969a682e",
                "first_name": "Daphney",
                "last_name": "Shanahan",
                "eligible_paid_time_off": [
                  {
                    "accrual_unit": "Hour",
                    "accrual_method": "unlimited",
                    "accrual_period": "Year"
                  },
                  {
                    "accrual_unit": "Hour",
                    "accrual_method": "unlimited",
                    "accrual_period": "Year"
                  },
                  {
                    "accrual_unit": "Hour",
                    "accrual_method": "unlimited",
                    "accrual_period": "Year"
                  }
                ],
                "payment_method": "Check"
              }
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: put-v1-employees-Create Employee Example
    steps:
      - stepId: test
        operationId: put-v1-employees
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e",
                "first_name": "Isom",
                "middle_initial": null,
                "last_name": "Jaskolski",
                "email": "dane7757869450111550@botsford.net",
                "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365",
                "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                "version": "1c7ba9d62c8bafbfff998ffccad5d296",
                "department": "Stage Hand",
                "terminated": false,
                "two_percent_shareholder": false,
                "onboarded": true,
                "onboarding_status": "onboarding_completed",
                "onboarding_documents_config": {
                  "uuid": null,
                  "i9_document": false
                },
                "jobs": [
                  {
                    "uuid": "428a653a-0745-4db4-9c80-558288d416fa",
                    "version": "6c0ed1521e8b86eb36bd4455a63a2dac",
                    "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f",
                    "hire_date": "2020-01-20",
                    "title": "Client Support Director",
                    "primary": true,
                    "rate": "70000.00",
                    "payment_unit": "Year",
                    "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669",
                    "compensations": [
                      {
                        "uuid": "145660ed-6fcc-4211-8915-18e2786290a2",
                        "version": "2cd4b18662395eb53bcf80d5b5447f36",
                        "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e",
                        "rate": "70000.00",
                        "payment_unit": "Year",
                        "flsa_status": "Exempt",
                        "effective_date": "2021-01-20",
                        "adjust_for_minimum_wage": false,
                        "minimum_wages": []
                      }
                    ]
                  }
                ],
                "eligible_paid_time_off": [
                  {
                    "name": "Sick Hours",
                    "policy_name": "Sick Policy",
                    "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7",
                    "accrual_unit": "Hour",
                    "accrual_rate": "208.0",
                    "accrual_method": "per_hour_worked",
                    "accrual_period": "Year",
                    "accrual_balance": "31.8",
                    "maximum_accrual_balance": "240.0",
                    "paid_at_termination": false
                  },
                  {
                    "name": "Vacation Hours",
                    "policy_name": "Vacation Policy",
                    "policy_uuid": "ab59de61-239f-4805-933b-0e3360ed291c",
                    "accrual_unit": "Hour",
                    "accrual_rate": "208.0",
                    "accrual_period": "Year",
                    "accrual_balance": "77.8",
                    "maximum_accrual_balance": "240.0",
                    "paid_at_termination": true
                  }
                ],
                "terminations": [],
                "garnishments": [],
                "custom_fields": [
                  {
                    "id": "ee515986-f3ca-49da-b576-2691b95262f9",
                    "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                    "name": "employee_level",
                    "type": "text",
                    "description": "Employee Level",
                    "value": "2",
                    "selection_options": null
                  },
                  {
                    "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                    "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                    "name": "t-shirt size",
                    "type": "text",
                    "description": "What is your t-shirt size?",
                    "value": "md",
                    "selection_options": null
                  },
                  {
                    "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                    "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6",
                    "name": "favorite fruit",
                    "type": "radio",
                    "description": "Which is your favorite fruit?",
                    "value": "apple",
                    "selection_options": [
                      "apple",
                      "banana",
                      "orange"
                    ]
                  }
                ],
                "date_of_birth": "1986-06-25",
                "has_ssn": false,
                "ssn": "",
                "phone": "1234567890",
                "preferred_first_name": "Angel",
                "payment_method": "Check",
                "work_email": "angel.jaskolski@example.com"
              }
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: put-v1-employees-Basic
    steps:
      - stepId: test
        operationId: put-v1-employees
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Employees
  - workflowId: put-v1-employees-Resource
    steps:
      - stepId: test
        operationId: put-v1-employees
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Employees
  - workflowId: put-v1-employees-Nested
    steps:
      - stepId: test
        operationId: put-v1-employees
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Employees
  - workflowId: delete-v1-employee-Basic
    steps:
      - stepId: test
        operationId: delete-v1-employee
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: Employees
  - workflowId: delete-v1-employee-Resource
    steps:
      - stepId: test
        operationId: delete-v1-employee
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: Employees
  - workflowId: delete-v1-employee-Nested
    steps:
      - stepId: test
        operationId: delete-v1-employee
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: Employees
  - workflowId: get-v1-employees-employee_id-custom_fields-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-custom_fields
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "custom_fields": [
                  {
                    "id": "ee515986-f3ca-49da-b576-2691b95262f9",
                    "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                    "name": "employee_level",
                    "type": "text",
                    "description": "Employee Level",
                    "value": "2",
                    "selection_options": null
                  },
                  {
                    "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                    "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                    "name": "t-shirt size",
                    "type": "text",
                    "description": "What is your t-shirt size?",
                    "value": "md",
                    "selection_options": null
                  },
                  {
                    "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                    "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6",
                    "name": "favorite fruit",
                    "type": "radio",
                    "description": "Which is your favorite fruit?",
                    "value": "apple",
                    "selection_options": [
                      "apple",
                      "banana",
                      "orange"
                    ]
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: put-v1-employees-employee_id-onboarding_documents_config-Example
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-onboarding_documents_config
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            i9_document: true
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "i9_document": "true"
              }
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: get-v1-employees-employee_id-onboarding_status-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-onboarding_status
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2",
                "onboarding_status": "admin_onboarding_incomplete",
                "onboarding_steps": [
                  {
                    "title": "Personal details",
                    "id": "personal_details",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Enter compensation details",
                    "id": "compensation_details",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Add work address",
                    "id": "add_work_address",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Add home address",
                    "id": "add_home_address",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Enter federal tax withholdings",
                    "id": "federal_tax_setup",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Enter state tax information",
                    "id": "state_tax_setup",
                    "required": true,
                    "completed": false,
                    "requirements": [
                      "add_work_address",
                      "add_home_address"
                    ]
                  },
                  {
                    "title": "Direct deposit setup",
                    "id": "direct_deposit_setup",
                    "required": false,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Employee form signing",
                    "id": "employee_form_signing",
                    "required": true,
                    "completed": false,
                    "requirements": [
                      "federal_tax_setup",
                      "state_tax_setup"
                    ]
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: put-v1-employees-employee_id-onboarding_status-Example
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-onboarding_status
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            onboarding_status: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2",
                "onboarding_status": "admin_onboarding_incomplete",
                "onboarding_steps": [
                  {
                    "title": "Personal details",
                    "id": "personal_details",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Enter compensation details",
                    "id": "compensation_details",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Add work address",
                    "id": "add_work_address",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Add home address",
                    "id": "add_home_address",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Enter federal tax withholdings",
                    "id": "federal_tax_setup",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Enter state tax information",
                    "id": "state_tax_setup",
                    "required": true,
                    "completed": false,
                    "requirements": [
                      "add_work_address",
                      "add_home_address"
                    ]
                  },
                  {
                    "title": "Direct deposit setup",
                    "id": "direct_deposit_setup",
                    "required": false,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Employee form signing",
                    "id": "employee_form_signing",
                    "required": true,
                    "completed": false,
                    "requirements": [
                      "federal_tax_setup",
                      "state_tax_setup"
                    ]
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: put-v1-employees-employee_id-onboarding_status-Basic
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-onboarding_status
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            onboarding_status: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Employees
  - workflowId: put-v1-employees-employee_id-onboarding_status-Resource
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-onboarding_status
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            onboarding_status: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Employees
  - workflowId: put-v1-employees-employee_id-onboarding_status-Nested
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-onboarding_status
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            onboarding_status: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Employees
  - workflowId: get-version-employees-time_off_activities-example
    steps:
      - stepId: test
        operationId: get-version-employees-time_off_activities
        parameters:
          - name: employee_uuid
            in: path
            value: <id>
          - name: time_off_type
            in: query
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "policy_uuid": "a7838f74-4c29-4b70-9bfb-02a4e3e60709",
                  "time_off_type": "vacation",
                  "policy_name": "Paid Time Off",
                  "event_type": "TimeOffEvent::AddToPolicy",
                  "event_description": "Added to policy: Vacation Per Hour Worked",
                  "effective_time": "2022-09-27T13:43:03.000-07:00",
                  "balance": "0.0",
                  "balance_change": "0.0"
                },
                {
                  "policy_uuid": "a7838f74-4c29-4b70-9bfb-02a4e3e60709",
                  "time_off_type": "vacation",
                  "policy_name": "Paid Time Off",
                  "event_type": "TimeOffEvent::Accrual",
                  "event_description": "Accrual",
                  "effective_time": "2022-09-27T14:43:03.000-07:00",
                  "balance": "2.0",
                  "balance_change": "2.0"
                }
              ]
            type: simple
    x-speakeasy-test-group: Employees
  - workflowId: post-departments-Example
    steps:
      - stepId: test
        operationId: post-departments
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            title: Stage Hand
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                "title": "Stage Hand",
                "employees": [
                  {
                    "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                  }
                ],
                "contractors": [
                  {
                    "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Departments
  - workflowId: post-departments-Basic
    steps:
      - stepId: test
        operationId: post-departments
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Departments
  - workflowId: post-departments-Resource
    steps:
      - stepId: test
        operationId: post-departments
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Departments
  - workflowId: post-departments-Nested
    steps:
      - stepId: test
        operationId: post-departments
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Departments
  - workflowId: get-companies-departments-Example
    steps:
      - stepId: test
        operationId: get-companies-departments
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                  "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                  "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                  "title": "Stage Hand",
                  "employees": [
                    {
                      "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                    }
                  ],
                  "contractors": []
                },
                {
                  "version": "34f39a30b45d077cb83aed2df4810d74",
                  "uuid": "ec5c8a85-3233-4f39-a9f5-fb1ab7b5f5f3",
                  "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                  "title": "Actors",
                  "employees": [
                    {
                      "uuid": "7ee4aca1-814b-4034-b0f8-07f93cc679d1"
                    }
                  ],
                  "contractors": []
                },
                {
                  "version": "1fe3076d35ef7c97d0ae68c5f4df0acd",
                  "uuid": "1802465d-4f68-4865-920c-1307ab095f12",
                  "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                  "title": "Band",
                  "employees": [
                    {
                      "uuid": "a73955be-c009-44dc-915e-6246e2bdedbb"
                    }
                  ],
                  "contractors": [
                    {
                      "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                    }
                  ]
                }
              ]
            type: simple
    x-speakeasy-test-group: Departments
  - workflowId: get-department-Example
    steps:
      - stepId: test
        operationId: get-department
        parameters:
          - name: department_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                "title": "Stage Hand",
                "employees": [
                  {
                    "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                  }
                ],
                "contractors": [
                  {
                    "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Departments
  - workflowId: put-departments-Example
    steps:
      - stepId: test
        operationId: put-departments
        parameters:
          - name: department_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            title: Backup Dancer
            version: db0edd04aaac4506f7edab03ac855d56
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                "title": "Stage Hand",
                "employees": [
                  {
                    "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                  }
                ],
                "contractors": [
                  {
                    "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Departments
  - workflowId: put-departments-Basic
    steps:
      - stepId: test
        operationId: put-departments
        parameters:
          - name: department_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Departments
  - workflowId: put-departments-Resource
    steps:
      - stepId: test
        operationId: put-departments
        parameters:
          - name: department_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Departments
  - workflowId: put-departments-Nested
    steps:
      - stepId: test
        operationId: put-departments
        parameters:
          - name: department_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Departments
  - workflowId: delete-department-Basic
    steps:
      - stepId: test
        operationId: delete-department
        parameters:
          - name: department_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: Departments
  - workflowId: delete-department-Resource
    steps:
      - stepId: test
        operationId: delete-department
        parameters:
          - name: department_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: Departments
  - workflowId: delete-department-Nested
    steps:
      - stepId: test
        operationId: delete-department
        parameters:
          - name: department_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: Departments
  - workflowId: put-add-people-to-department-Example
    steps:
      - stepId: test
        operationId: put-add-people-to-department
        parameters:
          - name: department_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                "title": "Stage Hand",
                "employees": [
                  {
                    "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                  }
                ],
                "contractors": [
                  {
                    "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Departments
  - workflowId: put-remove-people-from-department-Example
    steps:
      - stepId: test
        operationId: put-remove-people-from-department
        parameters:
          - name: department_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                "title": "Stage Hand",
                "employees": [
                  {
                    "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                  }
                ],
                "contractors": [
                  {
                    "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Departments
  - workflowId: post-v1-employees-employee_id-terminations-Basic
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-terminations
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeeEmployments
  - workflowId: post-v1-employees-employee_id-terminations-Resource
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-terminations
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeeEmployments
  - workflowId: post-v1-employees-employee_id-terminations-Nested
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-terminations
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeeEmployments
  - workflowId: delete-v1-employees-employee_id-terminations-Example
    steps:
      - stepId: test
        operationId: delete-v1-employees-employee_id-terminations
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeEmployments
  - workflowId: put-v1-terminations-employee_id-Basic
    steps:
      - stepId: test
        operationId: put-v1-terminations-employee_id
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeEmployments
  - workflowId: put-v1-terminations-employee_id-Resource
    steps:
      - stepId: test
        operationId: put-v1-terminations-employee_id
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeEmployments
  - workflowId: put-v1-terminations-employee_id-Nested
    steps:
      - stepId: test
        operationId: put-v1-terminations-employee_id
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeEmployments
  - workflowId: post-v1-employees-employee_id-rehire-Basic
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-rehire
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
            file_new_hire_report: true
            work_location_uuid: <id>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeeEmployments
  - workflowId: post-v1-employees-employee_id-rehire-Resource
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-rehire
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
            file_new_hire_report: false
            work_location_uuid: <id>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeeEmployments
  - workflowId: post-v1-employees-employee_id-rehire-Nested
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-rehire
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
            file_new_hire_report: true
            work_location_uuid: <id>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeeEmployments
  - workflowId: put-v1-employees-employee_id-rehire-Basic
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-rehire
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
            file_new_hire_report: true
            version: <value>
            work_location_uuid: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeEmployments
  - workflowId: put-v1-employees-employee_id-rehire-Resource
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-rehire
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
            file_new_hire_report: true
            version: <value>
            work_location_uuid: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeEmployments
  - workflowId: put-v1-employees-employee_id-rehire-Nested
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-rehire
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: <value>
            file_new_hire_report: true
            version: <value>
            work_location_uuid: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeEmployments
  - workflowId: delete-v1-employees-employee_id-rehire-Example
    steps:
      - stepId: test
        operationId: delete-v1-employees-employee_id-rehire
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeEmployments
  - workflowId: get-v1-employees-employee_id-employment_history-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-employment_history
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "hire_date": "2023-05-30",
                  "termination_date": "\u003cvalue\u003e",
                  "file_new_hire_report": true,
                  "two_percent_shareholder": false,
                  "employment_status": "seasonal"
                },
                {
                  "hire_date": "2021-02-02",
                  "termination_date": "2023-03-01",
                  "file_new_hire_report": false,
                  "two_percent_shareholder": false,
                  "employment_status": "full_time"
                }
              ]
            type: simple
    x-speakeasy-test-group: employeeEmployments
  - workflowId: get-v1-employees-employee_id-home_addresses-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-home_addresses
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "street_1": "644 Fay Vista",
                  "street_2": "Suite 842",
                  "city": "Richmond",
                  "state": "VA",
                  "zip": "23218",
                  "country": "USA",
                  "active": false,
                  "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                  "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                  "effective_date": "2021-01-01",
                  "courtesy_withholding": true
                },
                {
                  "street_1": "100 5th Ave",
                  "street_2": "Suite 555",
                  "city": "New York",
                  "state": "NY",
                  "zip": "10001",
                  "country": "USA",
                  "active": true,
                  "uuid": "d9f74049-8769-4fba-8e0f-eceef2da4e6b",
                  "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                  "effective_date": "2022-03-03",
                  "courtesy_withholding": true
                }
              ]
            type: simple
    x-speakeasy-test-group: employeeAddresses
  - workflowId: post-v1-employees-employee_id-home_addresses-Example
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-home_addresses
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            city: San Francisco
            courtesy_withholding: true
            effective_date: "2021-01-01"
            state: CA
            street_1: 300 3rd Street
            street_2: null
            zip: "94107"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "street_1": "644 Fay Vista",
                "street_2": "Suite 842",
                "city": "Richmond",
                "state": "VA",
                "zip": "23218",
                "country": "USA",
                "active": false,
                "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                "effective_date": "2021-01-01",
                "courtesy_withholding": true
              }
            type: simple
    x-speakeasy-test-group: employeeAddresses
  - workflowId: get-v1-home_addresses-home_address_uuid-Example
    steps:
      - stepId: test
        operationId: get-v1-home_addresses-home_address_uuid
        parameters:
          - name: home_address_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "street_1": "644 Fay Vista",
                "street_2": "Suite 842",
                "city": "Richmond",
                "state": "VA",
                "zip": "23218",
                "country": "USA",
                "active": false,
                "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                "effective_date": "2021-01-01",
                "courtesy_withholding": true
              }
            type: simple
    x-speakeasy-test-group: employeeAddresses
  - workflowId: put-v1-home_addresses-home_address_uuid-Example
    steps:
      - stepId: test
        operationId: put-v1-home_addresses-home_address_uuid
        parameters:
          - name: home_address_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            city: San Francisco
            courtesy_withholding: true
            effective_date: "2021-01-01"
            state: CA
            street_1: 300 3rd Street
            street_2: null
            version: fe75bd065ff48b91c35fe8ff842f986c
            zip: "94107"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "street_1": "644 Fay Vista",
                "street_2": "Suite 842",
                "city": "Richmond",
                "state": "VA",
                "zip": "23218",
                "country": "USA",
                "active": false,
                "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                "effective_date": "2021-01-01",
                "courtesy_withholding": true
              }
            type: simple
    x-speakeasy-test-group: employeeAddresses
  - workflowId: put-v1-home_addresses-home_address_uuid-Basic
    steps:
      - stepId: test
        operationId: put-v1-home_addresses-home_address_uuid
        parameters:
          - name: home_address_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeAddresses
  - workflowId: put-v1-home_addresses-home_address_uuid-Resource
    steps:
      - stepId: test
        operationId: put-v1-home_addresses-home_address_uuid
        parameters:
          - name: home_address_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeAddresses
  - workflowId: put-v1-home_addresses-home_address_uuid-Nested
    steps:
      - stepId: test
        operationId: put-v1-home_addresses-home_address_uuid
        parameters:
          - name: home_address_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeAddresses
  - workflowId: delete-v1-home_addresses-home_address_uuid-Basic
    steps:
      - stepId: test
        operationId: delete-v1-home_addresses-home_address_uuid
        parameters:
          - name: home_address_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeAddresses
  - workflowId: delete-v1-home_addresses-home_address_uuid-Resource
    steps:
      - stepId: test
        operationId: delete-v1-home_addresses-home_address_uuid
        parameters:
          - name: home_address_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeAddresses
  - workflowId: delete-v1-home_addresses-home_address_uuid-Nested
    steps:
      - stepId: test
        operationId: delete-v1-home_addresses-home_address_uuid
        parameters:
          - name: home_address_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeAddresses
  - workflowId: get-v1-employees-employee_id-work_addresses-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-work_addresses
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "fc5b87dc-8d88-400d-b2da-c3587a7e5b15",
                  "effective_date": "2022-01-01",
                  "active": false,
                  "location_uuid": "d9456c94-f561-40d2-afec-919da5f59196",
                  "employee_uuid": "7597f3e3-31d4-4953-83a5-f95be78d2fe2",
                  "version": "139f9769a2e543e6a1259173e1ee3b8d",
                  "street_1": "800 Adolfo Gardens",
                  "street_2": "Suite 419",
                  "city": "Bremen",
                  "state": "AL",
                  "zip": "35033",
                  "country": "USA"
                },
                {
                  "uuid": "be1c2e24-af86-4c36-b34e-3a55dbcdbdab",
                  "effective_date": "2023-01-01",
                  "active": true,
                  "location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635",
                  "employee_uuid": "7597f3e3-31d4-4953-83a5-f95be78d2fe2",
                  "version": "bbe8d4c741339c6b9e0e2e1c1b120816",
                  "street_1": "2216 Icie Villages",
                  "street_2": "Apt. 798",
                  "city": "Big Delta",
                  "state": "AK",
                  "zip": "99737",
                  "country": "USA"
                }
              ]
            type: simple
    x-speakeasy-test-group: employeeAddresses
  - workflowId: get-v1-work_addresses-work_address_uuid-Example
    steps:
      - stepId: test
        operationId: get-v1-work_addresses-work_address_uuid
        parameters:
          - name: work_address_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "34925ef7-6234-440d-83b8-788a24d0d69a",
                "effective_date": "2023-05-15",
                "active": true,
                "location_uuid": "aba6d0fd-7294-4997-b1a4-bc9268c45932",
                "employee_uuid": "2363b9c0-6625-4425-9261-47627fd68783",
                "version": "6a22da647ed391f184a212e6e83a541d",
                "street_1": "977 Marks Viaduct",
                "street_2": null,
                "city": "Pink Hill",
                "state": "NC",
                "zip": "28572",
                "country": "USA"
              }
            type: simple
    x-speakeasy-test-group: employeeAddresses
  - workflowId: put-v1-work_addresses-work_address_uuid-Example
    steps:
      - stepId: test
        operationId: put-v1-work_addresses-work_address_uuid
        parameters:
          - name: work_address_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: "2023-05-15"
            location_uuid: 6a119be7-b4b0-4e27-aaa0-89d5f2524635
            version: e6db1baa29d3df1eb307ff6a12c778da
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "34925ef7-6234-440d-83b8-788a24d0d69a",
                "effective_date": "2023-05-15",
                "active": true,
                "location_uuid": "aba6d0fd-7294-4997-b1a4-bc9268c45932",
                "employee_uuid": "2363b9c0-6625-4425-9261-47627fd68783",
                "version": "6a22da647ed391f184a212e6e83a541d",
                "street_1": "977 Marks Viaduct",
                "street_2": null,
                "city": "Pink Hill",
                "state": "NC",
                "zip": "28572",
                "country": "USA"
              }
            type: simple
    x-speakeasy-test-group: employeeAddresses
  - workflowId: put-v1-work_addresses-work_address_uuid-Basic
    steps:
      - stepId: test
        operationId: put-v1-work_addresses-work_address_uuid
        parameters:
          - name: work_address_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeAddresses
  - workflowId: put-v1-work_addresses-work_address_uuid-Resource
    steps:
      - stepId: test
        operationId: put-v1-work_addresses-work_address_uuid
        parameters:
          - name: work_address_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeAddresses
  - workflowId: put-v1-work_addresses-work_address_uuid-Nested
    steps:
      - stepId: test
        operationId: put-v1-work_addresses-work_address_uuid
        parameters:
          - name: work_address_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeAddresses
  - workflowId: delete-v1-work_addresses-work_address_uuid-Basic
    steps:
      - stepId: test
        operationId: delete-v1-work_addresses-work_address_uuid
        parameters:
          - name: work_address_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeAddresses
  - workflowId: delete-v1-work_addresses-work_address_uuid-Resource
    steps:
      - stepId: test
        operationId: delete-v1-work_addresses-work_address_uuid
        parameters:
          - name: work_address_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeAddresses
  - workflowId: delete-v1-work_addresses-work_address_uuid-Nested
    steps:
      - stepId: test
        operationId: delete-v1-work_addresses-work_address_uuid
        parameters:
          - name: work_address_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeAddresses
  - workflowId: post-v1-employees-employee_id-work_addresses-Example
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-work_addresses
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            effective_date: "2023-05-15"
            location_uuid: 6a119be7-b4b0-4e27-aaa0-89d5f2524635
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                "effective_date": "2021-01-01",
                "active": false,
                "location_uuid": "6a27753a-3093-41c1-9f25-ea64f15e8266",
                "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                "street_1": "644 Fay Vista",
                "street_2": "Suite 842",
                "city": "Richmond",
                "state": "VA",
                "zip": "23218",
                "country": "USA"
              }
            type: simple
    x-speakeasy-test-group: workAddresses
  - workflowId: post-v1-employees-employee_id-work_addresses-Basic
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-work_addresses
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: workAddresses
  - workflowId: post-v1-employees-employee_id-work_addresses-Resource
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-work_addresses
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: workAddresses
  - workflowId: post-v1-employees-employee_id-work_addresses-Nested
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-work_addresses
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: workAddresses
  - workflowId: get-v1-employees-employee_id-federal_taxes-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-federal_taxes
        parameters:
          - name: employee_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "56a489ce86ed6c1b0f0cecc4050a0b01",
                "filing_status": "Single",
                "extra_withholding": "0.0",
                "two_jobs": true,
                "dependents_amount": "0.0",
                "other_income": "0.0",
                "deductions": "0.0",
                "w4_data_type": "rev_2020_w4"
              }
            type: simple
    x-speakeasy-test-group: employeeTaxSetup
  - workflowId: put-v1-employees-employee_id-federal_taxes-Example
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-federal_taxes
        parameters:
          - name: employee_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            deductions: "0.0"
            dependents_amount: "0.0"
            extra_withholding: "0.0"
            filing_status: Single
            other_income: "0.0"
            two_jobs: true
            version: 56a489ce86ed6c1b0f0cecc4050a0b01
            w4_data_type: rev_2020_w4
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "56a489ce86ed6c1b0f0cecc4050a0b01",
                "filing_status": "Single",
                "extra_withholding": "0.0",
                "two_jobs": true,
                "dependents_amount": "0.0",
                "other_income": "0.0",
                "deductions": "0.0",
                "w4_data_type": "rev_2020_w4"
              }
            type: simple
    x-speakeasy-test-group: employeeTaxSetup
  - workflowId: put-v1-employees-employee_id-federal_taxes-Basic
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-federal_taxes
        parameters:
          - name: employee_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeTaxSetup
  - workflowId: put-v1-employees-employee_id-federal_taxes-Resource
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-federal_taxes
        parameters:
          - name: employee_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeTaxSetup
  - workflowId: put-v1-employees-employee_id-federal_taxes-Nested
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-federal_taxes
        parameters:
          - name: employee_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeTaxSetup
  - workflowId: get-v1-employees-employee_id-state_taxes-Employee-State-Taxes-List-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-state_taxes
        parameters:
          - name: employee_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "employee_uuid": "92fa4d30-e284-43d0-a26e-605619c04beb",
                  "state": "CA",
                  "file_new_hire_report": false,
                  "is_work_state": true,
                  "questions": [
                    {
                      "label": "Filing Status",
                      "description": "The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the \u003ca target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'\u003eCA Filing Status explanation\u003c/a\u003e.\n",
                      "key": "filing_status",
                      "input_question_format": {
                        "type": "Select",
                        "options": [
                          {
                            "value": "S",
                            "label": "Single"
                          },
                          {
                            "value": "M",
                            "label": "Married one income"
                          },
                          {
                            "value": "MD",
                            "label": "Married dual income"
                          },
                          {
                            "value": "H",
                            "label": "Head of household"
                          },
                          {
                            "value": "E",
                            "label": "Do Not Withhold"
                          }
                        ]
                      },
                      "answers": [
                        {
                          "value": "S",
                          "valid_from": "2010-01-01",
                          "valid_up_to": null
                        }
                      ]
                    },
                    {
                      "label": "Withholding Allowance",
                      "description": "This value is needed to calculate the employee's CA income tax withholding. If unsure, use the \u003ca target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'\u003eCA DE-4 form\u003c/a\u003e to calculate the value manually.\n",
                      "key": "withholding_allowance",
                      "input_question_format": {
                        "type": "Number"
                      },
                      "answers": [
                        {
                          "value": "1",
                          "valid_from": "2010-01-01",
                          "valid_up_to": null
                        }
                      ]
                    },
                    {
                      "label": "Additional Withholding",
                      "description": "You can withhold an additional amount of California income taxes here.",
                      "key": "additional_withholding",
                      "input_question_format": {
                        "type": "Currency"
                      },
                      "answers": [
                        {
                          "value": "0.0",
                          "valid_from": "2010-01-01",
                          "valid_up_to": null
                        }
                      ]
                    },
                    {
                      "label": "File a New Hire Report?",
                      "description": "State law requires you to file a new hire report within 20 days of hiring or re-hiring an employee.",
                      "key": "file_new_hire_report",
                      "input_question_format": {
                        "type": "Select"
                      },
                      "answers": [
                        {
                          "value": "true",
                          "valid_from": "2010-01-01",
                          "valid_up_to": null
                        }
                      ]
                    }
                  ]
                }
              ]
            type: simple
    x-speakeasy-test-group: employeeTaxSetup
  - workflowId: put-v1-employees-employee_id-state_taxes-Employee-State-Taxes-Update-Example
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-state_taxes
        parameters:
          - name: employee_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            states:
              - questions:
                  - answers:
                      - valid_from: "2010-01-01"
                        valid_up_to: null
                        value: M
                    key: filing_status
                  - answers:
                      - valid_from: "2010-01-01"
                        valid_up_to: null
                        value: "2"
                    key: withholding_allowance
                  - answers:
                      - valid_from: "2010-01-01"
                        valid_up_to: null
                        value: "25.0"
                    key: additional_withholding
                  - answers:
                      - valid_from: "2010-01-01"
                        valid_up_to: null
                        value: "true"
                    key: file_new_hire_report
                state: CA
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "employee_uuid": "\u003cid\u003e",
                  "state": "Ohio",
                  "questions": [
                    {
                      "label": "\u003cvalue\u003e",
                      "description": "which difficult really",
                      "key": "\u003ckey\u003e",
                      "input_question_format": {
                        "type": "\u003cvalue\u003e"
                      },
                      "answers": [
                        {},
                        {}
                      ]
                    }
                  ]
                },
                {
                  "employee_uuid": "\u003cid\u003e",
                  "state": "Alabama",
                  "questions": []
                },
                {
                  "employee_uuid": "\u003cid\u003e",
                  "state": "Tennessee",
                  "questions": [
                    {
                      "label": "\u003cvalue\u003e",
                      "description": "notwithstanding yippee now cinch against however unearth outside stiff",
                      "key": "\u003ckey\u003e",
                      "input_question_format": {
                        "type": "\u003cvalue\u003e"
                      },
                      "answers": [
                        {},
                        {},
                        {}
                      ]
                    },
                    {
                      "label": "\u003cvalue\u003e",
                      "description": "incidentally shadowy cleverly",
                      "key": "\u003ckey\u003e",
                      "input_question_format": {
                        "type": "\u003cvalue\u003e"
                      },
                      "answers": [
                        {},
                        {},
                        {}
                      ]
                    },
                    {
                      "label": "\u003cvalue\u003e",
                      "description": "off frizz yowza huzzah whose",
                      "key": "\u003ckey\u003e",
                      "input_question_format": {
                        "type": "\u003cvalue\u003e"
                      },
                      "answers": [
                        {},
                        {}
                      ]
                    }
                  ]
                }
              ]
            type: simple
    x-speakeasy-test-group: employeeTaxSetup
  - workflowId: put-v1-employees-employee_id-state_taxes-Employee-State-Taxes-List-Example
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-state_taxes
        parameters:
          - name: employee_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            states:
              - state: Minnesota
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "employee_uuid": "92fa4d30-e284-43d0-a26e-605619c04beb",
                  "state": "CA",
                  "file_new_hire_report": false,
                  "is_work_state": true,
                  "questions": [
                    {
                      "label": "Filing Status",
                      "description": "The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the \u003ca target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'\u003eCA Filing Status explanation\u003c/a\u003e.\n",
                      "key": "filing_status",
                      "input_question_format": {
                        "type": "Select",
                        "options": [
                          {
                            "value": "S",
                            "label": "Single"
                          },
                          {
                            "value": "M",
                            "label": "Married one income"
                          },
                          {
                            "value": "MD",
                            "label": "Married dual income"
                          },
                          {
                            "value": "H",
                            "label": "Head of household"
                          },
                          {
                            "value": "E",
                            "label": "Do Not Withhold"
                          }
                        ]
                      },
                      "answers": [
                        {
                          "value": "S",
                          "valid_from": "2010-01-01",
                          "valid_up_to": null
                        }
                      ]
                    },
                    {
                      "label": "Withholding Allowance",
                      "description": "This value is needed to calculate the employee's CA income tax withholding. If unsure, use the \u003ca target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'\u003eCA DE-4 form\u003c/a\u003e to calculate the value manually.\n",
                      "key": "withholding_allowance",
                      "input_question_format": {
                        "type": "Number"
                      },
                      "answers": [
                        {
                          "value": "1",
                          "valid_from": "2010-01-01",
                          "valid_up_to": null
                        }
                      ]
                    },
                    {
                      "label": "Additional Withholding",
                      "description": "You can withhold an additional amount of California income taxes here.",
                      "key": "additional_withholding",
                      "input_question_format": {
                        "type": "Currency"
                      },
                      "answers": [
                        {
                          "value": "0.0",
                          "valid_from": "2010-01-01",
                          "valid_up_to": null
                        }
                      ]
                    },
                    {
                      "label": "File a New Hire Report?",
                      "description": "State law requires you to file a new hire report within 20 days of hiring or re-hiring an employee.",
                      "key": "file_new_hire_report",
                      "input_question_format": {
                        "type": "Select"
                      },
                      "answers": [
                        {
                          "value": "true",
                          "valid_from": "2010-01-01",
                          "valid_up_to": null
                        }
                      ]
                    }
                  ]
                }
              ]
            type: simple
    x-speakeasy-test-group: employeeTaxSetup
  - workflowId: post-v1-employees-employee_id-bank_accounts-Example
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-bank_accounts
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: "5809431207"
            account_type: Checking
            name: BoA Checking Account
            routing_number: "266905059"
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7",
                "employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9",
                "account_type": "Checking",
                "name": "BoA Checking Account",
                "routing_number": "266905059",
                "hidden_account_number": "XXXX1207"
              }
            type: simple
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: post-v1-employees-employee_id-bank_accounts-Basic
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-bank_accounts
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: <value>
            account_type: Checking
            name: <value>
            routing_number: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: post-v1-employees-employee_id-bank_accounts-Resource
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-bank_accounts
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: <value>
            account_type: Savings
            name: <value>
            routing_number: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: post-v1-employees-employee_id-bank_accounts-Nested
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-bank_accounts
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: <value>
            account_type: Savings
            name: <value>
            routing_number: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: delete-v1-employees-employee_id-bank_accounts-bank_account_id
    steps:
      - stepId: test
        operationId: delete-v1-employees-employee_id-bank_accounts-bank_account_id
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: bank_account_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: put-v1-employees-employee_id-bank_accounts-Example
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-bank_accounts
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: bank_account_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: "5809431207"
            account_type: Checking
            name: BoA Checking Account
            routing_number: "266905059"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7",
                "employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9",
                "account_type": "Checking",
                "name": "BoA Checking Account",
                "routing_number": "266905059",
                "hidden_account_number": "XXXX1207"
              }
            type: simple
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: put-v1-employees-employee_id-bank_accounts-Basic
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-bank_accounts
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: bank_account_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: <value>
            account_type: Checking
            name: <value>
            routing_number: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: put-v1-employees-employee_id-bank_accounts-Resource
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-bank_accounts
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: bank_account_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: <value>
            account_type: Checking
            name: <value>
            routing_number: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: put-v1-employees-employee_id-bank_accounts-Nested
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-bank_accounts
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: bank_account_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: <value>
            account_type: Checking
            name: <value>
            routing_number: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: get-v1-employees-employee_id-payment_method-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-payment_method
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "63859768485e218ccf8a449bb60f14ed",
                "type": "Direct Deposit",
                "split_by": "Amount",
                "splits": [
                  {
                    "uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e",
                    "name": "BoA Checking Account",
                    "priority": 1,
                    "split_amount": 500
                  },
                  {
                    "uuid": "0d2b7f73-05d6-4184-911d-269edeecc30a",
                    "name": "Chase Checking Account",
                    "priority": 2,
                    "split_amount": 1000
                  },
                  {
                    "uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7",
                    "name": "US Bank Checking Account",
                    "priority": 3,
                    "split_amount": null
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: put-v1-employees-employee_id-payment_method-example-1
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-payment_method
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            split_by: Amount
            splits:
              - name: BoA Checking Account
                priority: 1
                split_amount: 500
                uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
              - name: Chase Checking Account
                priority: 2
                split_amount: 1000
                uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
              - name: US Bank Checking Account
                priority: 3
                split_amount: null
                uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
            type: Direct Deposit
            version: 63859768485e218ccf8a449bb60f14ed
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: put-v1-employees-employee_id-payment_method-example-2
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-payment_method
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            split_by: Percentage
            splits:
              - name: BoA Checking Account
                priority: 1
                split_amount: 60
                uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
              - name: Chase Checking Account
                priority: 2
                split_amount: 40
                uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
            type: Direct Deposit
            version: 63859768485e218ccf8a449bb60f14ed
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: put-v1-employees-employee_id-payment_method-example-3
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-payment_method
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: Check
            version: 63859768485e218ccf8a449bb60f14ed
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: put-v1-employees-employee_id-payment_method-Example
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-payment_method
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: Check
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "63859768485e218ccf8a449bb60f14ed",
                "type": "Direct Deposit",
                "split_by": "Amount",
                "splits": [
                  {
                    "uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e",
                    "name": "BoA Checking Account",
                    "priority": 1,
                    "split_amount": 500
                  },
                  {
                    "uuid": "0d2b7f73-05d6-4184-911d-269edeecc30a",
                    "name": "Chase Checking Account",
                    "priority": 2,
                    "split_amount": 1000
                  },
                  {
                    "uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7",
                    "name": "US Bank Checking Account",
                    "priority": 3,
                    "split_amount": null
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: put-v1-employees-employee_id-payment_method-Basic
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-payment_method
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: Check
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: put-v1-employees-employee_id-payment_method-Resource
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-payment_method
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: Direct Deposit
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: put-v1-employees-employee_id-payment_method-Nested
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-payment_method
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: Check
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeePaymentMethod
  - workflowId: get-v1-employees-employee_id-bank_accounts-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-bank_accounts
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7",
                  "employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9",
                  "account_type": "Checking",
                  "name": "BoA Checking Account",
                  "routing_number": "266905059",
                  "hidden_account_number": "XXXX1207"
                }
              ]
            type: simple
    x-speakeasy-test-group: employeePaymentMethods
  - workflowId: post-v1-jobs-job_id-Example
    steps:
      - stepId: test
        operationId: post-v1-jobs-job_id
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            hire_date: "2020-12-21"
            title: Regional Manager
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                "version": "d0e719137f89ca3dd334dd4cc248ffbb",
                "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22",
                "hire_date": "2020-01-20",
                "title": "Account Director",
                "primary": true,
                "rate": "78000.00",
                "payment_unit": "Year",
                "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                "state_wc_covered": "null,",
                "state_wc_class_code": "null,",
                "compensations": [
                  {
                    "uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                    "version": "994b75511d1debac5d7e2ddeae13679f",
                    "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                    "rate": "78000.00",
                    "payment_unit": "Year",
                    "flsa_status": "Exempt",
                    "effective_date": "2021-01-20",
                    "adjust_for_minimum_wage": false,
                    "minimum_wages": []
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: post-v1-jobs-job_id-Basic
    steps:
      - stepId: test
        operationId: post-v1-jobs-job_id
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            hire_date: <value>
            title: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: post-v1-jobs-job_id-Resource
    steps:
      - stepId: test
        operationId: post-v1-jobs-job_id
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            hire_date: <value>
            title: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: post-v1-jobs-job_id-Nested
    steps:
      - stepId: test
        operationId: post-v1-jobs-job_id
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            hire_date: <value>
            title: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: get-v1-employees-employee_id-jobs-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-jobs
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                  "version": "6c0ed1521e8b86eb36bd4455a63a2dac",
                  "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22",
                  "hire_date": "2020-01-20",
                  "title": "Client Support Director",
                  "primary": true,
                  "rate": "70000.00",
                  "payment_unit": "Year",
                  "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                  "state_wc_covered": "null,",
                  "state_wc_class_code": "null,",
                  "compensations": [
                    {
                      "uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                      "version": "2cd4b18662395eb53bcf80d5b5447f36",
                      "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                      "rate": "70000.00",
                      "payment_unit": "Year",
                      "flsa_status": "Exempt",
                      "effective_date": "2021-01-20",
                      "adjust_for_minimum_wage": false,
                      "minimum_wages": []
                    }
                  ]
                }
              ]
            type: simple
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: get-v1-jobs-job_id-Example
    steps:
      - stepId: test
        operationId: get-v1-jobs-job_id
        parameters:
          - name: job_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                "version": "d0e719137f89ca3dd334dd4cc248ffbb",
                "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22",
                "hire_date": "2020-01-20",
                "title": "Account Director",
                "primary": true,
                "rate": "78000.00",
                "payment_unit": "Year",
                "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                "state_wc_covered": "null,",
                "state_wc_class_code": "null,",
                "compensations": [
                  {
                    "uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                    "version": "994b75511d1debac5d7e2ddeae13679f",
                    "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                    "rate": "78000.00",
                    "payment_unit": "Year",
                    "flsa_status": "Exempt",
                    "effective_date": "2021-01-20",
                    "adjust_for_minimum_wage": false,
                    "minimum_wages": []
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: put-v1-jobs-job_id-Example
    steps:
      - stepId: test
        operationId: put-v1-jobs-job_id
        parameters:
          - name: job_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            hire_date: "2020-12-21"
            title: Regional Manager
            version: gr78930htutrz444kuytr3s5hgxykuveb523fwl8sir
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                "version": "d0e719137f89ca3dd334dd4cc248ffbb",
                "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22",
                "hire_date": "2020-01-20",
                "title": "Account Director",
                "primary": true,
                "rate": "78000.00",
                "payment_unit": "Year",
                "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                "state_wc_covered": "null,",
                "state_wc_class_code": "null,",
                "compensations": [
                  {
                    "uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                    "version": "994b75511d1debac5d7e2ddeae13679f",
                    "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                    "rate": "78000.00",
                    "payment_unit": "Year",
                    "flsa_status": "Exempt",
                    "effective_date": "2021-01-20",
                    "adjust_for_minimum_wage": false,
                    "minimum_wages": []
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: put-v1-jobs-job_id-Basic
    steps:
      - stepId: test
        operationId: put-v1-jobs-job_id
        parameters:
          - name: job_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: put-v1-jobs-job_id-Resource
    steps:
      - stepId: test
        operationId: put-v1-jobs-job_id
        parameters:
          - name: job_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: put-v1-jobs-job_id-Nested
    steps:
      - stepId: test
        operationId: put-v1-jobs-job_id
        parameters:
          - name: job_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: delete-v1-jobs-job_id
    steps:
      - stepId: test
        operationId: delete-v1-jobs-job_id
        parameters:
          - name: job_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: get-v1-jobs-job_id-compensations-Example
    steps:
      - stepId: test
        operationId: get-v1-jobs-job_id-compensations
        parameters:
          - name: job_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037",
                  "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                  "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                  "rate": "70.00",
                  "payment_unit": "Hour",
                  "flsa_status": "Nonexempt",
                  "effective_date": "2020-12-11",
                  "adjust_for_minimum_wage": false,
                  "minimum_wages": []
                },
                {
                  "uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a",
                  "version": "cc59bd3879d655fb940a1f6b675f2ad9",
                  "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                  "rate": "5.00",
                  "payment_unit": "Hour",
                  "flsa_status": "Nonexempt",
                  "effective_date": "2018-12-11",
                  "adjust_for_minimum_wage": true,
                  "minimum_wages": [
                    {
                      "uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738",
                      "wage": "7.25",
                      "effective_date": "2018-12-11"
                    }
                  ]
                }
              ]
            type: simple
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: post-v1-compensations-compensation_id-Exempt
    steps:
      - stepId: test
        operationId: post-v1-compensations-compensation_id
        parameters:
          - name: job_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            flsa_status: Exempt
            payment_unit: Year
            rate: "60000.00"
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037",
                "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                "rate": "60000.00",
                "payment_unit": "Year",
                "flsa_status": "Exempt",
                "effective_date": "2020-12-11",
                "adjust_for_minimum_wage": false,
                "minimum_wages": []
              }
            type: simple
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: post-v1-compensations-compensation_id-Minimum Wage Adjusted
    steps:
      - stepId: test
        operationId: post-v1-compensations-compensation_id
        parameters:
          - name: job_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            adjust_for_minimum_wage: true
            effective_date: "2023-01-01"
            flsa_status: Nonexempt
            minimum_wages:
              - uuid: 340832db-ab28-4112-9e10-28dd1711835f
            payment_unit: Hour
            rate: "7.00"
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a",
                "version": "cc59bd3879d655fb940a1f6b675f2ad9",
                "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                "rate": "5.00",
                "payment_unit": "Hour",
                "flsa_status": "Nonexempt",
                "effective_date": "2018-12-11",
                "adjust_for_minimum_wage": true,
                "minimum_wages": [
                  {
                    "uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738",
                    "wage": "7.25",
                    "effective_date": "2018-12-11"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: post-v1-compensations-compensation_id-Basic
    steps:
      - stepId: test
        operationId: post-v1-compensations-compensation_id
        parameters:
          - name: job_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            flsa_status: Commission Only Nonexempt
            payment_unit: Paycheck
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: post-v1-compensations-compensation_id-Resource
    steps:
      - stepId: test
        operationId: post-v1-compensations-compensation_id
        parameters:
          - name: job_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            flsa_status: Commission Only Exempt
            payment_unit: Hour
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: post-v1-compensations-compensation_id-Nested
    steps:
      - stepId: test
        operationId: post-v1-compensations-compensation_id
        parameters:
          - name: job_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            flsa_status: Commission Only Exempt
            payment_unit: Month
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: get-v1-compensations-compensation_id-Exempt
    steps:
      - stepId: test
        operationId: get-v1-compensations-compensation_id
        parameters:
          - name: compensation_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037",
                "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                "rate": "60000.00",
                "payment_unit": "Year",
                "flsa_status": "Exempt",
                "effective_date": "2020-12-11",
                "adjust_for_minimum_wage": false,
                "minimum_wages": []
              }
            type: simple
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: get-v1-compensations-compensation_id-Minimum Wage Adjusted
    steps:
      - stepId: test
        operationId: get-v1-compensations-compensation_id
        parameters:
          - name: compensation_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a",
                "version": "cc59bd3879d655fb940a1f6b675f2ad9",
                "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                "rate": "5.00",
                "payment_unit": "Hour",
                "flsa_status": "Nonexempt",
                "effective_date": "2018-12-11",
                "adjust_for_minimum_wage": true,
                "minimum_wages": [
                  {
                    "uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738",
                    "wage": "7.25",
                    "effective_date": "2018-12-11"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: put-v1-compensations-compensation_id-Exempt
    steps:
      - stepId: test
        operationId: put-v1-compensations-compensation_id
        parameters:
          - name: compensation_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            flsa_status: Exempt
            payment_unit: Year
            rate: "60000.00"
            version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037",
                "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                "rate": "60000.00",
                "payment_unit": "Year",
                "flsa_status": "Exempt",
                "effective_date": "2020-12-11",
                "adjust_for_minimum_wage": false,
                "minimum_wages": []
              }
            type: simple
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: put-v1-compensations-compensation_id-Minimum Wage Adjusted
    steps:
      - stepId: test
        operationId: put-v1-compensations-compensation_id
        parameters:
          - name: compensation_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            adjust_for_minimum_wage: true
            flsa_status: Nonexempt
            minimum_wages:
              - uuid: 340832db-ab28-4112-9e10-28dd1711835f
            payment_unit: Hour
            rate: "7.00"
            version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a",
                "version": "cc59bd3879d655fb940a1f6b675f2ad9",
                "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                "rate": "5.00",
                "payment_unit": "Hour",
                "flsa_status": "Nonexempt",
                "effective_date": "2018-12-11",
                "adjust_for_minimum_wage": true,
                "minimum_wages": [
                  {
                    "uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738",
                    "wage": "7.25",
                    "effective_date": "2018-12-11"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: put-v1-compensations-compensation_id-Basic
    steps:
      - stepId: test
        operationId: put-v1-compensations-compensation_id
        parameters:
          - name: compensation_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: put-v1-compensations-compensation_id-Resource
    steps:
      - stepId: test
        operationId: put-v1-compensations-compensation_id
        parameters:
          - name: compensation_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: put-v1-compensations-compensation_id-Nested
    steps:
      - stepId: test
        operationId: put-v1-compensations-compensation_id
        parameters:
          - name: compensation_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: delete-v1-compensations-compensation_id
    steps:
      - stepId: test
        operationId: delete-v1-compensations-compensation_id
        parameters:
          - name: compensation_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: jobsAndCompensations
  - workflowId: post-v1-companies-company_id-earning_types-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-earning_types
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            name: Gym Membership Stipend
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "name": "Gym Membership Stipend",
                "uuid": "f4dc8972-8830-4c07-b623-349a04b040d7"
              }
            type: simple
    x-speakeasy-test-group: earningTypes
  - workflowId: post-v1-companies-company_id-earning_types-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-earning_types
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            name: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: earningTypes
  - workflowId: post-v1-companies-company_id-earning_types-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-earning_types
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            name: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: earningTypes
  - workflowId: post-v1-companies-company_id-earning_types-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-earning_types
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            name: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: earningTypes
  - workflowId: get-v1-companies-company_id-earning_types-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-earning_types
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "default": [
                  {
                    "name": "Bonus",
                    "uuid": "b82e35c5-d7c6-4705-9e16-9f87499ade18"
                  },
                  {
                    "name": "Cash Tips",
                    "uuid": "f5618c94-ed7d-4366-b2c4-ff05e430064f"
                  },
                  {
                    "name": "Commission",
                    "uuid": "60191999-004a-49d9-b163-630574433653"
                  },
                  {
                    "name": "Correction Payment",
                    "uuid": "368226e0-8e8c-48f0-bc91-aee46caafbc9"
                  },
                  {
                    "name": "Minimum Wage Adjustment",
                    "uuid": "88a2e519-9ff5-4c19-9071-6a709f3c2939"
                  },
                  {
                    "name": "Paycheck Tips",
                    "uuid": "a3eaf03d-e712-4144-8f9b-71a85528adcf"
                  },
                  {
                    "name": "Severance",
                    "uuid": "a6a2eba7-6c7d-4ced-bbe8-43452fbc9f63"
                  }
                ],
                "custom": [
                  {
                    "name": "Gym Membership Stipend",
                    "uuid": "6b4a8efb-db90-4c13-a75f-aae11b3f4ff9"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: earningTypes
  - workflowId: put-v1-companies-company_id-earning_types-earning_type_uuid-Example
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-earning_types-earning_type_uuid
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: earning_type_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            name: Gym Membership Stipend
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "name": "Gym Membership Stipend",
                "uuid": "f4dc8972-8830-4c07-b623-349a04b040d7"
              }
            type: simple
    x-speakeasy-test-group: earningTypes
  - workflowId: put-v1-companies-company_id-earning_types-earning_type_uuid-Basic
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-earning_types-earning_type_uuid
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: earning_type_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: earningTypes
  - workflowId: put-v1-companies-company_id-earning_types-earning_type_uuid-Resource
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-earning_types-earning_type_uuid
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: earning_type_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: earningTypes
  - workflowId: put-v1-companies-company_id-earning_types-earning_type_uuid-Nested
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-earning_types-earning_type_uuid
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: earning_type_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: earningTypes
  - workflowId: delete-v1-companies-company_id-earning_types-earning_type_uuid
    steps:
      - stepId: test
        operationId: delete-v1-companies-company_id-earning_types-earning_type_uuid
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: earning_type_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: earningTypes
  - workflowId: post-v1-companies-company_uuid-contractors-Create an Individual contractor
    steps:
      - stepId: test
        operationId: post-v1-companies-company_uuid-contractors
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            email: johnson@johnson.com
            file_new_hire_report: true,
            first_name: Johnson
            last_name: Johnson
            self_onboarding: true
            start_date: "2020-04-01"
            type: Individual
            wage_type: Fixed
            work_state: CA
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "45c84535-4779-4ecb-af28-3bb833fa3225",
                "is_active": true,
                "hourly_rate": "50.0",
                "file_new_hire_report": false
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: post-v1-companies-company_uuid-contractors-Create a Business contractor
    steps:
      - stepId: test
        operationId: post-v1-companies-company_uuid-contractors
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            business_name: Johnson-Johnson Contractors
            file_new_hire_report: false
            self_onboarding: false
            start_date: "2020-04-01"
            type: Business
            wage_type: Fixed
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "4113dafc-14a6-4275-a15f-9c79a520c8a0",
                "is_active": true,
                "hourly_rate": "50.0",
                "file_new_hire_report": false
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: post-v1-companies-company_uuid-contractors-Individual Contractor
    steps:
      - stepId: test
        operationId: post-v1-companies-company_uuid-contractors
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            file_new_hire_report: false
            hourly_rate: "40.0"
            self_onboarding: false
            start_date: "2020-01-11"
            type: Individual
            wage_type: Fixed
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07",
                "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942",
                "wage_type": "Hourly",
                "is_active": false,
                "version": "63859768485e218ccf8a449bb60f14ed",
                "type": "Individual",
                "first_name": "Kory",
                "last_name": "Gottlieb",
                "middle_initial": "P",
                "business_name": null,
                "ein": null,
                "has_ein": false,
                "email": "keira.west@mckenzie.org",
                "start_date": "2022-01-01",
                "address": null,
                "hourly_rate": "60.00",
                "file_new_hire_report": true,
                "work_state": "FL",
                "onboarded": true,
                "onboarding_status": "onboarding_completed",
                "payment_method": null,
                "has_ssn": true,
                "department_uuid": null
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: post-v1-companies-company_uuid-contractors-Business Contractor
    steps:
      - stepId: test
        operationId: post-v1-companies-company_uuid-contractors
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            file_new_hire_report: false
            hourly_rate: "40.0"
            self_onboarding: false
            start_date: "2020-01-11"
            type: Individual
            wage_type: Hourly
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c",
                "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f",
                "wage_type": "Fixed",
                "is_active": true,
                "version": "8aab307f1e8ed788697f8986346af559",
                "type": "Business",
                "first_name": null,
                "last_name": null,
                "middle_initial": null,
                "business_name": "Labadie-Stroman",
                "ein": "XX-XXX0001",
                "has_ein": true,
                "email": "jonatan@kerluke.info",
                "start_date": "2022-01-01",
                "address": null,
                "hourly_rate": "0.00",
                "file_new_hire_report": false,
                "work_state": null,
                "onboarded": false,
                "onboarding_status": "admin_onboarding_incomplete",
                "payment_method": null,
                "has_ssn": false
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: post-v1-companies-company_uuid-contractors-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_uuid-contractors
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            file_new_hire_report: false
            hourly_rate: "40.0"
            self_onboarding: false
            start_date: "2020-01-11"
            type: Individual
            wage_type: Hourly
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Contractors
  - workflowId: post-v1-companies-company_uuid-contractors-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_uuid-contractors
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            file_new_hire_report: false
            hourly_rate: "40.0"
            self_onboarding: false
            start_date: "2020-01-11"
            type: Individual
            wage_type: Fixed
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Contractors
  - workflowId: post-v1-companies-company_uuid-contractors-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_uuid-contractors
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            file_new_hire_report: false
            hourly_rate: "40.0"
            self_onboarding: false
            start_date: "2020-01-11"
            type: Individual
            wage_type: Hourly
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Contractors
  - workflowId: get-v1-companies-company_uuid-contractors-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_uuid-contractors
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07",
                  "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942",
                  "wage_type": "Fixed",
                  "is_active": false,
                  "version": "63859768485e218ccf8a449bb60f14ed",
                  "type": "Individual",
                  "first_name": "Kory",
                  "last_name": "Gottlieb",
                  "middle_initial": "P",
                  "business_name": null,
                  "ein": null,
                  "has_ein": false,
                  "email": "keira.west@mckenzie.org",
                  "start_date": "2022-01-01",
                  "address": {
                    "street_1": "621 Jast Row",
                    "street_2": "Apt. 281",
                    "city": "Coral Springs",
                    "state": "FL",
                    "zip": "33065",
                    "country": "USA"
                  },
                  "hourly_rate": "0.00",
                  "file_new_hire_report": false,
                  "work_state": null,
                  "onboarded": true,
                  "onboarding_status": "onboarding_completed",
                  "has_ssn": true,
                  "department_uuid": "1802465d-4f68-4865-920c-1307ab095f12"
                },
                {
                  "uuid": "183a86f4-a803-4b38-9357-cd9b78e2560c",
                  "company_uuid": "afdd5d98-581b-4fc0-b988-706b7d23b2a5",
                  "wage_type": "Fixed",
                  "is_active": true,
                  "version": "8aab307f1e8ed788697f8986346af559",
                  "type": "Business",
                  "first_name": null,
                  "last_name": null,
                  "middle_initial": null,
                  "business_name": "Labadie-Stroman",
                  "ein": "XX-XXX0001",
                  "has_ein": true,
                  "email": "jonatan@kerluke.info",
                  "start_date": "2022-01-01",
                  "address": {
                    "street_1": "1625 Bednar Center",
                    "street_2": "Apt. 480",
                    "city": "Port Charlotte",
                    "state": "FL",
                    "zip": "33954",
                    "country": "USA"
                  },
                  "hourly_rate": "0.00",
                  "file_new_hire_report": false,
                  "work_state": null,
                  "onboarded": true,
                  "onboarding_status": "onboarding_completed",
                  "has_ssn": false
                },
                {
                  "uuid": "ea1c2d65-b622-4899-bcb7-5cd0fe0232aa",
                  "company_uuid": "281c763d-a2ba-4f51-b9e8-b1ed61576d62",
                  "wage_type": "Fixed",
                  "is_active": true,
                  "version": "b48c46abfed1487b873b442334b3c4ff",
                  "type": "Individual",
                  "first_name": "Chanel",
                  "last_name": "Boyle",
                  "middle_initial": "X",
                  "business_name": null,
                  "ein": null,
                  "has_ein": false,
                  "email": "loyal@hettinger.biz",
                  "address": {
                    "street_1": "35913 Darrick Run",
                    "street_2": "Apt. 913",
                    "city": "Cypress",
                    "state": "TX",
                    "zip": "77433",
                    "country": "USA"
                  },
                  "hourly_rate": "0.00",
                  "file_new_hire_report": true,
                  "work_state": "TX",
                  "onboarded": true,
                  "onboarding_status": "onboarding_completed",
                  "has_ssn": true
                }
              ]
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: get-v1-contractors-contractor_uuid-Individual Contractor
    steps:
      - stepId: test
        operationId: get-v1-contractors-contractor_uuid
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07",
                "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942",
                "wage_type": "Hourly",
                "is_active": false,
                "version": "63859768485e218ccf8a449bb60f14ed",
                "type": "Individual",
                "first_name": "Kory",
                "last_name": "Gottlieb",
                "middle_initial": "P",
                "business_name": null,
                "ein": null,
                "has_ein": false,
                "email": "keira.west@mckenzie.org",
                "start_date": "2022-01-01",
                "address": {
                  "street_1": "621 Jast Row",
                  "street_2": "Apt. 281",
                  "city": "Coral Springs",
                  "state": "FL",
                  "zip": "33065",
                  "country": "USA"
                },
                "hourly_rate": "60.00",
                "file_new_hire_report": true,
                "work_state": "FL",
                "onboarded": true,
                "onboarding_status": "onboarding_completed",
                "payment_method": "Direct Deposit",
                "has_ssn": true,
                "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193"
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: get-v1-contractors-contractor_uuid-Business Contractor
    steps:
      - stepId: test
        operationId: get-v1-contractors-contractor_uuid
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c",
                "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f",
                "wage_type": "Fixed",
                "is_active": true,
                "version": "8aab307f1e8ed788697f8986346af559",
                "type": "Business",
                "first_name": null,
                "last_name": null,
                "middle_initial": null,
                "business_name": "Labadie-Stroman",
                "ein": "XX-XXX0001",
                "has_ein": true,
                "email": "jonatan@kerluke.info",
                "start_date": "2022-01-01",
                "address": null,
                "hourly_rate": "0.00",
                "file_new_hire_report": false,
                "work_state": null,
                "onboarded": false,
                "onboarding_status": "admin_onboarding_incomplete",
                "payment_method": "Direct Deposit",
                "has_ssn": false
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-Update an Individual Contractor
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            file_new_hire_report: false
            first_name: Chanel
            hourly_rate: "20.00"
            is_active: true
            last_name: Boyle
            middle_initial: X
            self_onboarding: false
            start_date: "2021-01-01"
            type: Individual
            version: b48c46abfed1487b873b442334b3c4ff
            wage_type: Hourly
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "63ba7bbb-da29-4c1b-827d-792289357acf",
                "is_active": true,
                "hourly_rate": "50.0",
                "file_new_hire_report": false
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-Update a Business Contractor
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            business_name: Contracting Solutions
            ein: "991113334"
            file_new_hire_report: false
            is_active: false
            self_onboarding: false
            start_date: "2020-01-11"
            type: Individual
            version: b48c46abfed1487b873b442334b3c4ff
            wage_type: Fixed
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "72a92a7e-5b65-4564-908c-30ecaedc35c9",
                "is_active": true,
                "hourly_rate": "50.0",
                "file_new_hire_report": false
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-Individual Contractor
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            file_new_hire_report: false
            hourly_rate: "40.0"
            self_onboarding: false
            start_date: "2020-01-11"
            type: Individual
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07",
                "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942",
                "wage_type": "Hourly",
                "is_active": false,
                "version": "63859768485e218ccf8a449bb60f14ed",
                "type": "Individual",
                "first_name": "Kory",
                "last_name": "Gottlieb",
                "middle_initial": "P",
                "business_name": null,
                "ein": null,
                "has_ein": false,
                "email": "keira.west@mckenzie.org",
                "start_date": "2022-01-01",
                "address": {
                  "street_1": "621 Jast Row",
                  "street_2": "Apt. 281",
                  "city": "Coral Springs",
                  "state": "FL",
                  "zip": "33065",
                  "country": "USA"
                },
                "hourly_rate": "60.00",
                "file_new_hire_report": true,
                "work_state": "FL",
                "onboarded": true,
                "onboarding_status": "onboarding_completed",
                "payment_method": "Direct Deposit",
                "has_ssn": true,
                "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193"
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-Business Contractor
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            file_new_hire_report: false
            hourly_rate: "40.0"
            self_onboarding: false
            start_date: "2020-01-11"
            type: Individual
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c",
                "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f",
                "wage_type": "Fixed",
                "is_active": true,
                "version": "8aab307f1e8ed788697f8986346af559",
                "type": "Business",
                "first_name": null,
                "last_name": null,
                "middle_initial": null,
                "business_name": "Labadie-Stroman",
                "ein": "XX-XXX0001",
                "has_ein": true,
                "email": "jonatan@kerluke.info",
                "start_date": "2022-01-01",
                "address": null,
                "hourly_rate": "0.00",
                "file_new_hire_report": false,
                "work_state": null,
                "onboarded": false,
                "onboarding_status": "admin_onboarding_incomplete",
                "payment_method": "Direct Deposit",
                "has_ssn": false
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-Basic
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            file_new_hire_report: false
            hourly_rate: "40.0"
            self_onboarding: false
            start_date: "2020-01-11"
            type: Individual
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-Resource
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            file_new_hire_report: false
            hourly_rate: "40.0"
            self_onboarding: false
            start_date: "2020-01-11"
            type: Individual
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-Nested
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            file_new_hire_report: false
            hourly_rate: "40.0"
            self_onboarding: false
            start_date: "2020-01-11"
            type: Individual
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Contractors
  - workflowId: delete-v1-contractors-contractor_uuid
    steps:
      - stepId: test
        operationId: delete-v1-contractors-contractor_uuid
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: Contractors
  - workflowId: get-v1-contractors-contractor_uuid-onboarding_status-Example
    steps:
      - stepId: test
        operationId: get-v1-contractors-contractor_uuid-onboarding_status
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037",
                "onboarding_status": "admin_onboarding_incomplete",
                "onboarding_steps": [
                  {
                    "title": "Basic details",
                    "id": "basic_details",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Enter compensation details",
                    "id": "compensation_details",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Add an address",
                    "id": "add_address",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Payment details",
                    "id": "payment_details",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Sign and acknowledge documents",
                    "id": "sign_documents",
                    "required": false,
                    "completed": false,
                    "requirements": [
                      "basic_details,",
                      "add_address"
                    ]
                  },
                  {
                    "title": "File new hire report",
                    "id": "file_new_hire_report",
                    "required": false,
                    "completed": false,
                    "requirements": [
                      "basic_details"
                    ]
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-onboarding_status-Example
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid-onboarding_status
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            onboarding_status: onboarding_completed
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037",
                "onboarding_status": "admin_onboarding_incomplete",
                "onboarding_steps": [
                  {
                    "title": "Basic details",
                    "id": "basic_details",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Enter compensation details",
                    "id": "compensation_details",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Add an address",
                    "id": "add_address",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Payment details",
                    "id": "payment_details",
                    "required": true,
                    "completed": false,
                    "requirements": []
                  },
                  {
                    "title": "Sign and acknowledge documents",
                    "id": "sign_documents",
                    "required": false,
                    "completed": false,
                    "requirements": [
                      "basic_details,",
                      "add_address"
                    ]
                  },
                  {
                    "title": "File new hire report",
                    "id": "file_new_hire_report",
                    "required": false,
                    "completed": false,
                    "requirements": [
                      "basic_details"
                    ]
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-onboarding_status-Basic
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid-onboarding_status
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            onboarding_status: onboarding_completed
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-onboarding_status-Resource
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid-onboarding_status
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            onboarding_status: onboarding_completed
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-onboarding_status-Nested
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid-onboarding_status
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            onboarding_status: onboarding_completed
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Contractors
  - workflowId: get-v1-contractors-contractor_uuid-address-Example
    steps:
      - stepId: test
        operationId: get-v1-contractors-contractor_uuid-address
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "23323096a8015e32d9795fadf1fd300d",
                "street_1": "999 Kiera Stravenue",
                "street_2": "Suite 391",
                "city": "San Francisco",
                "state": "CA",
                "zip": "94107",
                "country": "USA",
                "active": true,
                "contractor_uuid": "9779767c-6044-48e0-bf68-aeb370b9a2e7"
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-address-Example
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid-address
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            city: San Francisco
            state: CA
            street_1: 300 3rd Street
            street_2: <value>
            version: fe75bd065ff48b91c35fe8ff842f986c
            zip: "94107"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "23323096a8015e32d9795fadf1fd300d",
                "street_1": "999 Kiera Stravenue",
                "street_2": "Suite 391",
                "city": "San Francisco",
                "state": "CA",
                "zip": "94107",
                "country": "USA",
                "active": true,
                "contractor_uuid": "9779767c-6044-48e0-bf68-aeb370b9a2e7"
              }
            type: simple
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-address-Basic
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid-address
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-address-Resource
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid-address
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Contractors
  - workflowId: put-v1-contractors-contractor_uuid-address-Nested
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_uuid-address
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Contractors
  - workflowId: post-v1-contractors-contractor_uuid-bank_accounts-Example
    steps:
      - stepId: test
        operationId: post-v1-contractors-contractor_uuid-bank_accounts
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: "5809431207"
            account_type: Checking
            name: BoA Checking Account
            routing_number: "266905059"
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7",
                "contractor_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9",
                "account_type": "Checking",
                "name": "BoA Checking Account",
                "routing_number": "266905059",
                "hidden_account_number": "XXXX1207"
              }
            type: simple
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: post-v1-contractors-contractor_uuid-bank_accounts-Basic
    steps:
      - stepId: test
        operationId: post-v1-contractors-contractor_uuid-bank_accounts
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: <value>
            account_type: Checking
            name: <value>
            routing_number: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: post-v1-contractors-contractor_uuid-bank_accounts-Resource
    steps:
      - stepId: test
        operationId: post-v1-contractors-contractor_uuid-bank_accounts
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: <value>
            account_type: Savings
            name: <value>
            routing_number: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: post-v1-contractors-contractor_uuid-bank_accounts-Nested
    steps:
      - stepId: test
        operationId: post-v1-contractors-contractor_uuid-bank_accounts
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            account_number: <value>
            account_type: Savings
            name: <value>
            routing_number: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: get-v1-contractors-contractor_uuid-bank_accounts-Example
    steps:
      - stepId: test
        operationId: get-v1-contractors-contractor_uuid-bank_accounts
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7",
                  "contractor_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9",
                  "account_type": "Checking",
                  "name": "BoA Checking Account",
                  "routing_number": "266905059",
                  "hidden_account_number": "XXXX1207"
                }
              ]
            type: simple
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: get-v1-contractors-contractor_uuid-payment_method-Example
    steps:
      - stepId: test
        operationId: get-v1-contractors-contractor_uuid-payment_method
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "63859768485e218ccf8a449bb60f14ed",
                "type": "Direct Deposit",
                "split_by": "Percentage",
                "splits": [
                  {
                    "uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e",
                    "name": "BoA Checking Account",
                    "hidden_account_number": "XXXX0992",
                    "priority": 1,
                    "split_amount": 100
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: put-v1-contractors-contractor_id-payment_method-example-1
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_id-payment_method
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: Direct Deposit
            version: 63859768485e218ccf8a449bb60f14ed
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: put-v1-contractors-contractor_id-payment_method-example-3
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_id-payment_method
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: Check
            version: 63859768485e218ccf8a449bb60f14ed
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: put-v1-contractors-contractor_id-payment_method-Example
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_id-payment_method
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: Check
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "63859768485e218ccf8a449bb60f14ed",
                "type": "Direct Deposit",
                "split_by": "Percentage",
                "splits": [
                  {
                    "uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e",
                    "name": "BoA Checking Account",
                    "hidden_account_number": "XXXX0992",
                    "priority": 1,
                    "split_amount": 100
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: put-v1-contractors-contractor_id-payment_method-Basic
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_id-payment_method
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: Check
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: put-v1-contractors-contractor_id-payment_method-Resource
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_id-payment_method
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: Check
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: put-v1-contractors-contractor_id-payment_method-Nested
    steps:
      - stepId: test
        operationId: put-v1-contractors-contractor_id-payment_method
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            type: Check
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentMethod
  - workflowId: post-v1-webhook-subscription-Example
    steps:
      - stepId: test
        operationId: post-v1-webhook-subscription
        requestBody:
          contentType: application/json
          payload:
            subscription_types:
              - Company
              - Employee
            url: https://partner-app.com/subscriber
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                "url": "https://the-partner-app.com/subscriber",
                "status": "verified",
                "subscription_types": [
                  "BankAccount",
                  "Company",
                  "CompanyBenefit",
                  "Contractor",
                  "ContractorPayment",
                  "Employee",
                  "EmployeeBenefit",
                  "EmployeeJobCompensation",
                  "ExternalPayroll",
                  "Form",
                  "Location",
                  "Notification",
                  "Payroll",
                  "PaySchedule",
                  "Signatory"
                ]
              }
            type: simple
    x-speakeasy-test-group: Webhooks
  - workflowId: post-v1-webhook-subscription-Basic
    steps:
      - stepId: test
        operationId: post-v1-webhook-subscription
        requestBody:
          contentType: application/json
          payload:
            subscription_types:
              - EmployeeJobCompensation
            url: https://dense-bidet.name/
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Webhooks
  - workflowId: post-v1-webhook-subscription-Resource
    steps:
      - stepId: test
        operationId: post-v1-webhook-subscription
        requestBody:
          contentType: application/json
          payload:
            subscription_types:
              - EmployeeJobCompensation
              - Notification
            url: https://quarterly-omelet.biz
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Webhooks
  - workflowId: post-v1-webhook-subscription-Nested
    steps:
      - stepId: test
        operationId: post-v1-webhook-subscription
        requestBody:
          contentType: application/json
          payload:
            subscription_types:
              - Payroll
            url: https://stunning-hope.com
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Webhooks
  - workflowId: get-v1-webhook-subscriptions-Example
    steps:
      - stepId: test
        operationId: get-v1-webhook-subscriptions
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "dcceb38a-46be-4110-9d1d-1b3384c3b906",
                  "url": "https://6116-2603-6000-8900-3d42-58e7-f1e3-b394-1f21.ngrok.io/subscriber",
                  "status": "pending",
                  "subscription_types": [
                    "BankAccount",
                    "Company",
                    "CompanyBenefit",
                    "Contractor",
                    "ContractorPayment",
                    "Employee",
                    "EmployeeBenefit",
                    "EmployeeJobCompensation",
                    "ExternalPayroll",
                    "Form",
                    "Location",
                    "Notification",
                    "Payroll",
                    "PaySchedule",
                    "Signatory"
                  ]
                }
              ]
            type: simple
    x-speakeasy-test-group: Webhooks
  - workflowId: put-v1-webhook-subscription-uuid-Example
    steps:
      - stepId: test
        operationId: put-v1-webhook-subscription-uuid
        parameters:
          - name: webhook_subscription_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            subscription_types:
              - Company
              - Employee
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                "url": "https://the-partner-app.com/subscriber",
                "status": "verified",
                "subscription_types": [
                  "BankAccount",
                  "Company",
                  "CompanyBenefit",
                  "Contractor",
                  "ContractorPayment",
                  "Employee",
                  "EmployeeBenefit",
                  "EmployeeJobCompensation",
                  "ExternalPayroll",
                  "Form",
                  "Location",
                  "Notification",
                  "Payroll",
                  "PaySchedule",
                  "Signatory"
                ]
              }
            type: simple
    x-speakeasy-test-group: Webhooks
  - workflowId: put-v1-webhook-subscription-uuid-Basic
    steps:
      - stepId: test
        operationId: put-v1-webhook-subscription-uuid
        parameters:
          - name: webhook_subscription_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            subscription_types:
              - Company
              - ExternalPayroll
              - Payroll
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Webhooks
  - workflowId: put-v1-webhook-subscription-uuid-Resource
    steps:
      - stepId: test
        operationId: put-v1-webhook-subscription-uuid
        parameters:
          - name: webhook_subscription_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            subscription_types: []
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Webhooks
  - workflowId: put-v1-webhook-subscription-uuid-Nested
    steps:
      - stepId: test
        operationId: put-v1-webhook-subscription-uuid
        parameters:
          - name: webhook_subscription_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            subscription_types:
              - EmployeeJobCompensation
              - Signatory
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Webhooks
  - workflowId: get-v1-webhook-subscription-uuid-Example
    steps:
      - stepId: test
        operationId: get-v1-webhook-subscription-uuid
        parameters:
          - name: webhook_subscription_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                "url": "https://the-partner-app.com/subscriber",
                "status": "verified",
                "subscription_types": [
                  "BankAccount",
                  "Company",
                  "CompanyBenefit",
                  "Contractor",
                  "ContractorPayment",
                  "Employee",
                  "EmployeeBenefit",
                  "EmployeeJobCompensation",
                  "ExternalPayroll",
                  "Form",
                  "Location",
                  "Notification",
                  "Payroll",
                  "PaySchedule",
                  "Signatory"
                ]
              }
            type: simple
    x-speakeasy-test-group: Webhooks
  - workflowId: delete-v1-webhook-subscription-uuid
    steps:
      - stepId: test
        operationId: delete-v1-webhook-subscription-uuid
        parameters:
          - name: webhook_subscription_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: Webhooks
  - workflowId: put-v1-verify-webhook-subscription-uuid-Example
    steps:
      - stepId: test
        operationId: put-v1-verify-webhook-subscription-uuid
        parameters:
          - name: webhook_subscription_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            verification_token: asefasedfe23e234easd
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                "url": "https://the-partner-app.com/subscriber",
                "status": "verified",
                "subscription_types": [
                  "BankAccount",
                  "Company",
                  "CompanyBenefit",
                  "Contractor",
                  "ContractorPayment",
                  "Employee",
                  "EmployeeBenefit",
                  "EmployeeJobCompensation",
                  "ExternalPayroll",
                  "Form",
                  "Location",
                  "Notification",
                  "Payroll",
                  "PaySchedule",
                  "Signatory"
                ]
              }
            type: simple
    x-speakeasy-test-group: Webhooks
  - workflowId: put-v1-verify-webhook-subscription-uuid-Basic
    steps:
      - stepId: test
        operationId: put-v1-verify-webhook-subscription-uuid
        parameters:
          - name: webhook_subscription_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            verification_token: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Webhooks
  - workflowId: put-v1-verify-webhook-subscription-uuid-Resource
    steps:
      - stepId: test
        operationId: put-v1-verify-webhook-subscription-uuid
        parameters:
          - name: webhook_subscription_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            verification_token: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Webhooks
  - workflowId: put-v1-verify-webhook-subscription-uuid-Nested
    steps:
      - stepId: test
        operationId: put-v1-verify-webhook-subscription-uuid
        parameters:
          - name: webhook_subscription_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            verification_token: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Webhooks
  - workflowId: get-v1-webhook-subscription-verification-token-uuid
    steps:
      - stepId: test
        operationId: get-v1-webhook-subscription-verification-token-uuid
        parameters:
          - name: webhook_subscription_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Webhooks
  - workflowId: get-v1-contractor-forms-Example
    steps:
      - stepId: test
        operationId: get-v1-contractor-forms
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
                  "name": "US_1099",
                  "title": "Form 1099: 2020",
                  "description": "Form 1099 records your annual income as a contractor.",
                  "draft": false,
                  "year": 2020,
                  "quarter": null,
                  "requires_signing": false,
                  "contractor_uuid": "123dd616-6dbc-4724-938a-403f6217a933"
                }
              ]
            type: simple
    x-speakeasy-test-group: contractorForms
  - workflowId: get-v1-contractor-form-Example
    steps:
      - stepId: test
        operationId: get-v1-contractor-form
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
          - name: form_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
                "name": "US_1099",
                "title": "Form 1099: 2020",
                "description": "Form 1099 records your annual income as a contractor.",
                "draft": false,
                "year": 2020,
                "quarter": null,
                "requires_signing": false,
                "contractor_uuid": "123dd616-6dbc-4724-938a-403f6217a933"
              }
            type: simple
    x-speakeasy-test-group: contractorForms
  - workflowId: get-v1-contractor-form-pdf-Example
    steps:
      - stepId: test
        operationId: get-v1-contractor-form-pdf
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
          - name: form_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
                "document_url": "https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020"
              }
            type: simple
    x-speakeasy-test-group: contractorForms
  - workflowId: post-v1-sandbox-generate_1099-Example
    steps:
      - stepId: test
        operationId: post-v1-sandbox-generate_1099
        requestBody:
          contentType: application/json
          payload:
            contractor_id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "29afb141-2256-431d-90e0-1c7344222342",
                "name": "US_1099",
                "title": "Form 1099: 2022",
                "description": "Form 1099 records your annual income as a contractor.",
                "draft": false,
                "year": 2022,
                "quarter": null,
                "requires_signing": false,
                "contractor_uuid": "b68484a9-4487-4ee5-bafc-4245133a426c"
              }
            type: simple
    x-speakeasy-test-group: contractorForms
  - workflowId: post-v1-sandbox-generate_1099-Basic
    steps:
      - stepId: test
        operationId: post-v1-sandbox-generate_1099
        requestBody:
          contentType: application/json
          payload:
            contractor_id: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorForms
  - workflowId: post-v1-sandbox-generate_1099-Resource
    steps:
      - stepId: test
        operationId: post-v1-sandbox-generate_1099
        requestBody:
          contentType: application/json
          payload:
            contractor_id: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorForms
  - workflowId: post-v1-sandbox-generate_1099-Nested
    steps:
      - stepId: test
        operationId: post-v1-sandbox-generate_1099
        requestBody:
          contentType: application/json
          payload:
            contractor_id: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorForms
  - workflowId: get-v1-contractor-documents-Example
    steps:
      - stepId: test
        operationId: get-v1-contractor-documents
        parameters:
          - name: contractor_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b",
                  "title": "Taxpayer Identification (Form W-9)",
                  "name": "taxpayer_identification_form_w_9",
                  "recipient_type": "Contractor",
                  "recipient_uuid": "f079c253-29e2-45e2-b384-2cc615c9c568",
                  "pages": [
                    {
                      "image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/0.jpg",
                      "page_number": 0
                    },
                    {
                      "image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/1.jpg",
                      "page_number": 1
                    }
                  ],
                  "fields": [
                    {
                      "key": "text1596141656513",
                      "value": null,
                      "x": 69,
                      "y": 94,
                      "width": 261,
                      "height": 13,
                      "page_number": 0,
                      "data_type": "text",
                      "required": true
                    },
                    {
                      "key": "optional_text1596141704672",
                      "value": null,
                      "x": 69,
                      "y": 118,
                      "width": 262,
                      "height": 13,
                      "page_number": 0,
                      "data_type": "text",
                      "required": false
                    }
                  ],
                  "signed_at": null,
                  "description": "Form W-9, Request for Taxpayer Identification Number and Certification",
                  "requires_signing": true,
                  "draft": false,
                  "year": null,
                  "quarter": null
                }
              ]
            type: simple
    x-speakeasy-test-group: contractorDocuments
  - workflowId: get-v1-contractor-document-Example
    steps:
      - stepId: test
        operationId: get-v1-contractor-document
        parameters:
          - name: document_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b",
                "title": "Taxpayer Identification (Form W-9)",
                "name": "taxpayer_identification_form_w_9",
                "recipient_type": "Contractor",
                "recipient_uuid": "f079c253-29e2-45e2-b384-2cc615c9c568",
                "pages": [
                  {
                    "image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/0.jpg",
                    "page_number": 0
                  },
                  {
                    "image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/1.jpg",
                    "page_number": 1
                  }
                ],
                "fields": [
                  {
                    "key": "text1596141656513",
                    "value": null,
                    "x": 69,
                    "y": 94,
                    "width": 261,
                    "height": 13,
                    "page_number": 0,
                    "data_type": "text",
                    "required": true
                  },
                  {
                    "key": "optional_text1596141704672",
                    "value": null,
                    "x": 69,
                    "y": 118,
                    "width": 262,
                    "height": 13,
                    "page_number": 0,
                    "data_type": "text",
                    "required": false
                  }
                ],
                "signed_at": null,
                "description": "Form W-9, Request for Taxpayer Identification Number and Certification",
                "requires_signing": true,
                "draft": false,
                "year": null,
                "quarter": null
              }
            type: simple
    x-speakeasy-test-group: contractorDocuments
  - workflowId: get-v1-contractor-document-pdf-Example
    steps:
      - stepId: test
        operationId: get-v1-contractor-document-pdf
        parameters:
          - name: document_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b",
                "document_url": "https://app.gusto-demo.com/assets/personal_documents/23/original.pdf?1724367941"
              }
            type: simple
    x-speakeasy-test-group: contractorDocuments
  - workflowId: put-v1-contractor-document-sign-Example
    steps:
      - stepId: test
        operationId: put-v1-contractor-document-sign
        parameters:
          - name: document_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            fields:
              - {}
              - {}
              - {}
            signed_by_ip_address: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b",
                "title": "Taxpayer Identification (Form W-9)",
                "name": "taxpayer_identification_form_w_9",
                "recipient_type": "Contractor",
                "recipient_uuid": "f079c253-29e2-45e2-b384-2cc615c9c568",
                "signed_at": "2024-09-03T16:39:22.000-07:00",
                "description": "Form W-9, Request for Taxpayer Identification Number and Certification",
                "requires_signing": false,
                "draft": false,
                "year": null,
                "quarter": null
              }
            type: simple
    x-speakeasy-test-group: contractorDocuments
  - workflowId: put-v1-contractor-document-sign-Basic
    steps:
      - stepId: test
        operationId: put-v1-contractor-document-sign
        parameters:
          - name: document_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            fields: []
            signed_by_ip_address: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorDocuments
  - workflowId: put-v1-contractor-document-sign-Resource
    steps:
      - stepId: test
        operationId: put-v1-contractor-document-sign
        parameters:
          - name: document_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            fields:
              - {}
              - {}
              - {}
            signed_by_ip_address: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorDocuments
  - workflowId: put-v1-contractor-document-sign-Nested
    steps:
      - stepId: test
        operationId: put-v1-contractor-document-sign
        parameters:
          - name: document_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            fields:
              - {}
              - {}
            signed_by_ip_address: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorDocuments
  - workflowId: post-v1-sandbox-generate_w2-Example
    steps:
      - stepId: test
        operationId: post-v1-sandbox-generate_w2
        requestBody:
          contentType: application/json
          payload:
            employee_id: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "employee_uuid": "19394e76-a866-4570-b237-9a26b0163907",
                "uuid": "bf5b2496-26df-436e-b465-eae4ed5c8021",
                "name": "US_W-2",
                "title": "Draft Form W-2: 2021",
                "description": "Form W-2 records your annual wages and taxes.",
                "draft": false,
                "requires_signing": false
              }
            type: simple
    x-speakeasy-test-group: employeeForms
  - workflowId: post-v1-sandbox-generate_w2-Basic
    steps:
      - stepId: test
        operationId: post-v1-sandbox-generate_w2
        requestBody:
          contentType: application/json
          payload:
            employee_id: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeForms
  - workflowId: post-v1-sandbox-generate_w2-Resource
    steps:
      - stepId: test
        operationId: post-v1-sandbox-generate_w2
        requestBody:
          contentType: application/json
          payload:
            employee_id: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeForms
  - workflowId: post-v1-sandbox-generate_w2-Nested
    steps:
      - stepId: test
        operationId: post-v1-sandbox-generate_w2
        requestBody:
          contentType: application/json
          payload:
            employee_id: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeForms
  - workflowId: get-v1-employee-forms-Example
    steps:
      - stepId: test
        operationId: get-v1-employee-forms
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
                  "name": "company_direct_deposit",
                  "title": "Direct Deposit Authorization",
                  "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.",
                  "draft": false,
                  "requires_signing": true
                }
              ]
            type: simple
    x-speakeasy-test-group: employeeForms
  - workflowId: get-v1-employee-form-Example
    steps:
      - stepId: test
        operationId: get-v1-employee-form
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: form_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
                "name": "company_direct_deposit",
                "title": "Direct Deposit Authorization",
                "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.",
                "draft": false,
                "requires_signing": true
              }
            type: simple
    x-speakeasy-test-group: employeeForms
  - workflowId: get-v1-employee-form-pdf-Example
    steps:
      - stepId: test
        operationId: get-v1-employee-form-pdf
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: form_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
                "document_url": "https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020"
              }
            type: simple
    x-speakeasy-test-group: employeeForms
  - workflowId: put-v1-employee-form-sign-Example
    steps:
      - stepId: test
        operationId: put-v1-employee-form-sign
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: form_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            signature_text: Jane Smith
            signed_by_ip_address: 192.168.0.1
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
                "name": "company_direct_deposit",
                "title": "Direct Deposit Authorization",
                "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.",
                "draft": false,
                "requires_signing": true
              }
            type: simple
    x-speakeasy-test-group: employeeForms
  - workflowId: put-v1-employee-form-sign-Basic
    steps:
      - stepId: test
        operationId: put-v1-employee-form-sign
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: form_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: false
            signature_text: <value>
            signed_by_ip_address: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeForms
  - workflowId: put-v1-employee-form-sign-Resource
    steps:
      - stepId: test
        operationId: put-v1-employee-form-sign
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: form_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            signature_text: <value>
            signed_by_ip_address: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeForms
  - workflowId: put-v1-employee-form-sign-Nested
    steps:
      - stepId: test
        operationId: put-v1-employee-form-sign
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: form_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            signature_text: <value>
            signed_by_ip_address: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeForms
  - workflowId: post-v1-companies-company_id-payrolls-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-payrolls
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            end_date: <value>
            off_cycle: true
            off_cycle_reason: Dismissed employee
            start_date: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "payroll_deadline": "2022-02-18T22:00:00Z",
                "check_date": "2021-02-22",
                "processed": false,
                "processed_date": "\u003cvalue\u003e",
                "calculated_at": "\u003cvalue\u003e",
                "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                "off_cycle": true,
                "off_cycle_reason": "Bonus",
                "auto_pilot": false,
                "external": false,
                "final_termination_payroll": false,
                "withholding_pay_period": "Every other week",
                "skip_regular_deductions": true,
                "fixed_withholding_rate": true,
                "pay_period": {
                  "start_date": "2021-02-01",
                  "end_date": "2021-02-15",
                  "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                },
                "payroll_status_meta": {
                  "cancellable": false,
                  "expected_check_date": "2022-02-22",
                  "initial_check_date": "2022-02-22",
                  "expected_debit_time": "2022-02-18T22:00:00Z",
                  "payroll_late": false,
                  "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"
                },
                "employee_compensations": [
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067",
                    "excluded": false,
                    "payment_method": "Direct Deposit",
                    "memo": null,
                    "fixed_compensations": [],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "0.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      },
                      {
                        "name": "Overtime",
                        "hours": "0.000",
                        "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23",
                        "compensation_multiplier": 1.5
                      },
                      {
                        "name": "Double overtime",
                        "hours": "0.000",
                        "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e",
                        "compensation_multiplier": 2
                      },
                      {
                        "name": "Regular Hours",
                        "hours": "0.000",
                        "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a",
                        "compensation_multiplier": 1
                      },
                      {
                        "name": "Overtime",
                        "hours": "0.000",
                        "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5",
                        "compensation_multiplier": 1.5
                      },
                      {
                        "name": "Double overtime",
                        "hours": "0.000",
                        "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3",
                        "compensation_multiplier": 2
                      }
                    ],
                    "paid_time_off": []
                  }
                ],
                "created_at": "2022-02-01T22:00:00Z",
                "processing_request": null
              }
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: post-v1-companies-company_id-payrolls-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-payrolls
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            end_date: <value>
            off_cycle: true
            off_cycle_reason: Bonus
            start_date: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: post-v1-companies-company_id-payrolls-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-payrolls
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            end_date: <value>
            off_cycle: true
            off_cycle_reason: Transition from old pay schedule
            start_date: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: post-v1-companies-company_id-payrolls-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-payrolls
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            end_date: <value>
            off_cycle: false
            off_cycle_reason: Bonus
            start_date: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: get-v1-companies-company_id-payrolls-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-payrolls
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: sort_order
            in: query
            value: asc
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "payroll_deadline": "2021-02-18T22:00:00Z",
                  "check_date": "2021-02-22",
                  "processed": true,
                  "processed_date": "2021-02-18",
                  "calculated_at": "2021-02-18T12:00:00Z",
                  "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                  "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                  "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                  "off_cycle": false,
                  "external": false,
                  "pay_period": {
                    "start_date": "2021-02-01",
                    "end_date": "2021-02-15",
                    "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                  },
                  "totals": {
                    "company_debit": "121747.71",
                    "net_pay_debit": "79283.80",
                    "tax_debit": "42463.91",
                    "reimbursement_debit": "0.00",
                    "child_support_debit": "0.00",
                    "reimbursements": "0.00",
                    "net_pay": "81752.94",
                    "gross_pay": "130635.89",
                    "employee_bonuses": "0.00",
                    "employee_commissions": "18536.37",
                    "employee_cash_tips": "0.00",
                    "employee_paycheck_tips": "0.00",
                    "additional_earnings": "0.00",
                    "owners_draw": "0.00",
                    "check_amount": "2469.14",
                    "employer_taxes": "6917.19",
                    "employee_taxes": "35546.72",
                    "benefits": "0.00",
                    "employee_benefits_deductions": "13336.23",
                    "imputed_pay": "0.00",
                    "deferred_payroll_taxes": "0.00",
                    "other_deductions": "240.00"
                  },
                  "created_at": "2021-02-01T22:00:00Z"
                },
                {
                  "payroll_deadline": "2021-02-28",
                  "check_date": "2021-03-01",
                  "processed": false,
                  "processed_date": "nil",
                  "calculated_at": "nil",
                  "uuid": "709a0790-cc23-4f27-84a6-4b0d278a6af5",
                  "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                  "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                  "off_cycle": false,
                  "external": false,
                  "pay_period": {
                    "start_date": "2021-02-16",
                    "end_date": "2021-03-01",
                    "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                  },
                  "created_at": "2022-02-01T22:00:00Z"
                }
              ]
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: get-v1-companies-company_id-payroll_reversals-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-payroll_reversals
        parameters:
          - name: company_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "reversed_payroll_uuid": "09505984-8d8c-41a3-adbe-5740322ae8e9",
                "reversal_payroll_uuid": "0424688e-0a2e-4cd0-ac86-42283e788fb3",
                "reason": "Customer Request",
                "approved_at": null,
                "category": "convert_check_ee_requested",
                "reversed_employee_uuids": [
                  "5f036964-185e-4c85-bbf2-3873e1203b30"
                ]
              }
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: get-v1-companies-company_id-payrolls-payroll_id-Unprocessed
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-payrolls-payroll_id
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "payroll_deadline": "2021-02-18T22:00:00Z",
                "check_date": "2021-02-22",
                "processed": false,
                "processed_date": "\u003cvalue\u003e",
                "calculated_at": "\u003cvalue\u003e",
                "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                "off_cycle": false,
                "auto_pilot": false,
                "external": false,
                "pay_period": {
                  "start_date": "2021-02-01",
                  "end_date": "2021-02-15",
                  "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                },
                "payroll_status_meta": {
                  "cancellable": false,
                  "expected_check_date": "2021-02-22",
                  "initial_check_date": "2021-02-22",
                  "expected_debit_time": "2021-02-18T22:00:00Z",
                  "payroll_late": false,
                  "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"
                },
                "created_at": "2022-02-01T22:00:00Z",
                "submission_blockers": [
                  {
                    "blocker_type": "fast_ach_threshold_exceeded",
                    "blocker_name": "Fast ACH Threshold Exceeded",
                    "unblock_options": [
                      {
                        "unblock_type": "wire_in",
                        "check_date": "2024-06-10T00:00:00Z"
                      },
                      {
                        "unblock_type": "move_to_four_day",
                        "check_date": "2024-06-12T00:00:00Z",
                        "metadata": {}
                      }
                    ],
                    "selected_option": null,
                    "status": "unresolved"
                  }
                ],
                "processing_request": null
              }
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: get-v1-companies-company_id-payrolls-payroll_id-Processed
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-payrolls-payroll_id
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "payroll_deadline": "2021-02-18T22:00:00Z",
                "check_date": "2021-02-22",
                "processed": true,
                "processed_date": "2021-02-18",
                "calculated_at": "2021-02-18T12:00:00Z",
                "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                "off_cycle": false,
                "auto_pilot": true,
                "external": false,
                "pay_period": {
                  "start_date": "2021-02-01",
                  "end_date": "2021-02-15",
                  "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                },
                "payroll_status_meta": {
                  "cancellable": false,
                  "expected_check_date": "2021-02-22",
                  "initial_check_date": "2021-02-22",
                  "expected_debit_time": "2021-02-18T22:00:00Z",
                  "payroll_late": false,
                  "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"
                },
                "totals": {
                  "company_debit": "121747.71",
                  "net_pay_debit": "79283.80",
                  "tax_debit": "42463.91",
                  "reimbursement_debit": "0.00",
                  "child_support_debit": "0.00",
                  "reimbursements": "0.00",
                  "net_pay": "81752.94",
                  "gross_pay": "130635.89",
                  "employee_bonuses": "0.00",
                  "employee_commissions": "18536.37",
                  "employee_cash_tips": "0.00",
                  "employee_paycheck_tips": "0.00",
                  "additional_earnings": "0.00",
                  "owners_draw": "0.00",
                  "check_amount": "2469.14",
                  "employer_taxes": "6917.19",
                  "employee_taxes": "35546.72",
                  "benefits": "0.00",
                  "employee_benefits_deductions": "13336.23",
                  "imputed_pay": "0.00",
                  "deferred_payroll_taxes": "0.00",
                  "other_deductions": "240.00"
                },
                "employee_compensations": [
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067",
                    "excluded": false,
                    "gross_pay": "2791.25",
                    "net_pay": "1953.31",
                    "check_amount": "1953.31",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      },
                      {
                        "name": "Overtime",
                        "hours": "15.000",
                        "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23",
                        "compensation_multiplier": 1.5
                      },
                      {
                        "name": "Double overtime",
                        "hours": "0.000",
                        "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e",
                        "compensation_multiplier": 2
                      },
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a",
                        "compensation_multiplier": 1
                      },
                      {
                        "name": "Overtime",
                        "hours": "5.000",
                        "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5",
                        "compensation_multiplier": 1.5
                      },
                      {
                        "name": "Double overtime",
                        "hours": "0.000",
                        "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3",
                        "compensation_multiplier": 2
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ],
                    "benefits": [
                      {
                        "name": "Group Term Life",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": true
                      },
                      {
                        "name": "401K",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": false
                      }
                    ],
                    "deductions": [
                      {
                        "name": "Child Support",
                        "amount": "80.00"
                      }
                    ],
                    "taxes": [
                      {
                        "name": "Federal Income Tax",
                        "employer": false,
                        "amount": "646.69"
                      },
                      {
                        "name": "Social Security",
                        "employer": true,
                        "amount": "191.25"
                      }
                    ]
                  },
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012",
                    "excluded": false,
                    "gross_pay": "2791.25",
                    "net_pay": "1953.31",
                    "check_amount": "1953.31",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ],
                    "benefits": [
                      {
                        "name": "Group Term Life",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": true
                      },
                      {
                        "name": "401K",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": false
                      }
                    ],
                    "deductions": [
                      {
                        "name": "Child Support",
                        "amount": "80.00"
                      }
                    ],
                    "taxes": [
                      {
                        "name": "Federal Income Tax",
                        "employer": false,
                        "amount": "646.69"
                      },
                      {
                        "name": "Social Security",
                        "employer": true,
                        "amount": "191.25"
                      }
                    ]
                  },
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781",
                    "excluded": false,
                    "gross_pay": "2791.25",
                    "net_pay": "1953.31",
                    "check_amount": "1953.31",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ],
                    "benefits": [
                      {
                        "name": "Group Term Life",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": true
                      },
                      {
                        "name": "401K",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": false
                      }
                    ],
                    "deductions": [
                      {
                        "name": "Child Support",
                        "amount": "80.00"
                      }
                    ],
                    "taxes": [
                      {
                        "name": "Federal Income Tax",
                        "employer": false,
                        "amount": "646.69"
                      },
                      {
                        "name": "Social Security",
                        "employer": true,
                        "amount": "191.25"
                      }
                    ]
                  }
                ],
                "company_taxes": [
                  {
                    "name": "MO Compensation Deduction",
                    "employer": true,
                    "amount": "-0.92"
                  },
                  {
                    "name": "NY MCTMT",
                    "employer": true,
                    "amount": "5.00"
                  }
                ],
                "created_at": "2022-02-01T22:00:00Z",
                "credit_blockers": [
                  {
                    "blocker_type": "waiting_for_wire_in",
                    "blocker_name": "Waiting for Wire In",
                    "unblock_options": [
                      {
                        "unblock_type": "submit_wire",
                        "check_date": "2024-06-10T00:00:00Z"
                      }
                    ],
                    "selected_option": "submit_wire",
                    "status": "unresolved"
                  }
                ],
                "processing_request": {
                  "status": "submit_success",
                  "errors": []
                }
              }
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: put-v1-companies-company_id-payrolls-Example
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-payrolls
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employee_compensations:
              - {}
              - {}
              - {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "payroll_deadline": "2022-02-18T22:00:00Z",
                "check_date": "2021-02-22",
                "processed": false,
                "processed_date": "\u003cvalue\u003e",
                "calculated_at": "\u003cvalue\u003e",
                "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                "off_cycle": false,
                "off_cycle_reason": null,
                "auto_pilot": false,
                "external": false,
                "pay_period": {
                  "start_date": "2021-02-01",
                  "end_date": "2021-02-15",
                  "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                },
                "payroll_status_meta": {
                  "cancellable": false,
                  "expected_check_date": "2022-02-22",
                  "initial_check_date": "2022-02-22",
                  "expected_debit_time": "2022-02-18T22:00:00Z",
                  "payroll_late": false,
                  "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"
                },
                "employee_compensations": [
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067",
                    "excluded": false,
                    "version": "4ba36d23a78c7393b4900ef38019d8ff",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      },
                      {
                        "name": "Overtime",
                        "hours": "15.000",
                        "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23",
                        "compensation_multiplier": 1.5
                      },
                      {
                        "name": "Double overtime",
                        "hours": "0.000",
                        "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e",
                        "compensation_multiplier": 2
                      },
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a",
                        "compensation_multiplier": 1
                      },
                      {
                        "name": "Overtime",
                        "hours": "5.000",
                        "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5",
                        "compensation_multiplier": 1.5
                      },
                      {
                        "name": "Double overtime",
                        "hours": "0.000",
                        "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3",
                        "compensation_multiplier": 2
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ]
                  },
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012",
                    "excluded": false,
                    "version": "ff083257a5583291fb86656ad0df1b42",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ]
                  },
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781",
                    "excluded": false,
                    "version": "259816479e3729bf855318af9b9adddf",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ]
                  }
                ],
                "created_at": "2022-02-01T22:00:00Z",
                "fixed_compensation_types": [
                  {
                    "name": "Bonus"
                  },
                  {
                    "name": "Commission"
                  },
                  {
                    "name": "Paycheck Tips"
                  },
                  {
                    "name": "Cash Tips"
                  },
                  {
                    "name": "Correction Payment"
                  },
                  {
                    "name": "Anniversary Bonus"
                  },
                  {
                    "name": "Internet Stipend"
                  },
                  {
                    "name": "Reimbursement"
                  }
                ],
                "processing_request": null
              }
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: put-v1-companies-company_id-payrolls-Basic
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-payrolls
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employee_compensations:
              - {}
              - {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: put-v1-companies-company_id-payrolls-Resource
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-payrolls
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employee_compensations:
              - {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: put-v1-companies-company_id-payrolls-Nested
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-payrolls
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employee_compensations:
              - {}
              - {}
              - {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: delete-v1-companies-company_id-payrolls
    steps:
      - stepId: test
        operationId: delete-v1-companies-company_id-payrolls
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
    x-speakeasy-test-group: Payrolls
  - workflowId: put-v1-companies-company_id-payrolls-payroll_id-prepare-Example
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-payrolls-payroll_id-prepare
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "payroll_deadline": "2022-02-18T22:00:00Z",
                "check_date": "2021-02-22",
                "processed": false,
                "processed_date": "\u003cvalue\u003e",
                "calculated_at": "\u003cvalue\u003e",
                "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                "off_cycle": false,
                "off_cycle_reason": null,
                "auto_pilot": false,
                "external": false,
                "pay_period": {
                  "start_date": "2021-02-01",
                  "end_date": "2021-02-15",
                  "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                },
                "payroll_status_meta": {
                  "cancellable": false,
                  "expected_check_date": "2022-02-22",
                  "initial_check_date": "2022-02-22",
                  "expected_debit_time": "2022-02-18T22:00:00Z",
                  "payroll_late": false,
                  "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"
                },
                "employee_compensations": [
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067",
                    "excluded": false,
                    "version": "4ba36d23a78c7393b4900ef38019d8ff",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      },
                      {
                        "name": "Overtime",
                        "hours": "15.000",
                        "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23",
                        "compensation_multiplier": 1.5
                      },
                      {
                        "name": "Double overtime",
                        "hours": "0.000",
                        "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e",
                        "compensation_multiplier": 2
                      },
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a",
                        "compensation_multiplier": 1
                      },
                      {
                        "name": "Overtime",
                        "hours": "5.000",
                        "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5",
                        "compensation_multiplier": 1.5
                      },
                      {
                        "name": "Double overtime",
                        "hours": "0.000",
                        "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3",
                        "compensation_multiplier": 2
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ]
                  },
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012",
                    "excluded": false,
                    "version": "ff083257a5583291fb86656ad0df1b42",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ]
                  },
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781",
                    "excluded": false,
                    "version": "259816479e3729bf855318af9b9adddf",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ]
                  }
                ],
                "created_at": "2022-02-01T22:00:00Z",
                "fixed_compensation_types": [
                  {
                    "name": "Bonus"
                  },
                  {
                    "name": "Commission"
                  },
                  {
                    "name": "Paycheck Tips"
                  },
                  {
                    "name": "Cash Tips"
                  },
                  {
                    "name": "Correction Payment"
                  },
                  {
                    "name": "Anniversary Bonus"
                  },
                  {
                    "name": "Internet Stipend"
                  },
                  {
                    "name": "Reimbursement"
                  }
                ],
                "processing_request": null
              }
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: get-v1-payment-receipts-payrolls-payroll_uuid-Example
    steps:
      - stepId: test
        operationId: get-v1-payment-receipts-payrolls-payroll_uuid
        parameters:
          - name: payroll_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "payroll_uuid": "afccb970-357e-4013-81f5-85dafc74f9b6",
                "company_uuid": "c827aa0d-3928-4d5a-ab1f-400641a7d2b8",
                "name_of_sender": "Torp and Sons and Sons",
                "name_of_recipient": "Payroll Recipients",
                "recipient_notice": "Payroll recipients include the employees listed below plus the tax agencies for the taxes listed below.",
                "debit_date": "2022-06-02",
                "license": "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For more about Gustoâ€™s licenses and your state-specific rights to request information, submit complaints, dispute errors, or cancel transactions, visit our license page.",
                "license_uri": "https://gusto.com/about/licenses",
                "right_to_refund": "https://gusto.com/about/licenses",
                "liability_of_licensee": "https://gusto.com/about/licenses",
                "totals": {
                  "company_debit": "1080.47",
                  "net_pay_debit": "748.34",
                  "child_support_debit": "100.0",
                  "reimbursement_debit": "50.0",
                  "tax_debit": "182.13"
                },
                "taxes": [
                  {
                    "name": "Federal Income Tax",
                    "amount": "30.36"
                  },
                  {
                    "name": "Social Security",
                    "amount": "104.54"
                  },
                  {
                    "name": "Medicare",
                    "amount": "24.46"
                  },
                  {
                    "name": "Additional Medicare",
                    "amount": "0.0"
                  },
                  {
                    "name": "TX SUTA",
                    "amount": "22.77"
                  },
                  {
                    "name": "FUTA",
                    "amount": "0.0"
                  }
                ],
                "employee_compensations": [
                  {
                    "employee_uuid": "f83d0bd8-7e20-43b9-834c-6d514ef6cb47",
                    "employee_first_name": "Patricia",
                    "employee_last_name": "Hamill",
                    "payment_method": "Direct Deposit",
                    "net_pay": "748.34",
                    "total_tax": "182.13",
                    "total_garnishments": "0.0",
                    "child_support_garnishment": "100.0",
                    "total_reimbursement": "50.0"
                  }
                ],
                "licensee": {
                  "name": "Gusto, Zenpayroll Inc.",
                  "address": "525 20th St",
                  "city": "San Francisco",
                  "state": "CA",
                  "postal_code": "94107",
                  "phone_number": "4157778888"
                }
              }
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: get-v1-companies-payroll-blockers-company_uuid-Payroll Blockers
    steps:
      - stepId: test
        operationId: get-v1-companies-payroll-blockers-company_uuid
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "key": "wc_pending_approval",
                  "message": "Worker's compensation policy needs to be accepted."
                },
                {
                  "key": "eftps_in_error",
                  "message": "We could not make payments to the Electronic Federal Tax Payment System."
                },
                {
                  "key": "geocode_error",
                  "message": "Company or employee address could not be verified. Please ensure all addresses are valid."
                },
                {
                  "key": "geocode_needed",
                  "message": "Company or employee address verification is missing. Please ensure all addresses are entered correctly."
                },
                {
                  "key": "pay_schedule_setup_not_complete",
                  "message": "Some employees donâ€™t have a pay schedule set up yet. Please complete this step to run payroll."
                },
                {
                  "key": "invalid_signatory",
                  "message": "A signatory who is authorized to sign documents on behalf of your company is required. Please ensure their identity verification is successful."
                },
                {
                  "key": "suspended",
                  "message": "Company is suspended and cannot run payroll."
                },
                {
                  "key": "soft_suspended",
                  "message": "Company is placed in a 'soft' suspension state and requires missing/incorrect information to be corrected."
                },
                {
                  "key": "pending_payroll_review",
                  "message": "Payroll is blocked. We are reviewing payroll information in your account. Please contact support if you believe this is an error."
                },
                {
                  "key": "pending_recovery_case",
                  "message": "Payroll is blocked due to an open recovery case. Please contact support if you believe this is an error."
                },
                {
                  "key": "pending_information_request",
                  "message": "Payroll is blocked due to an open information request. Please contact support if you believe this is an error."
                },
                {
                  "key": "needs_approval",
                  "message": "Company needs to be approved to run payroll."
                },
                {
                  "key": "missing_addresses",
                  "message": "Company must add addresses in order to run payroll."
                },
                {
                  "key": "missing_federal_tax_setup",
                  "message": "Company must complete federal tax setup in order to run payroll."
                },
                {
                  "key": "missing_industry_selection",
                  "message": "Company must complete industry selection in order to run payroll."
                },
                {
                  "key": "missing_bank_info",
                  "message": "Company must have a bank account in order to run payroll."
                },
                {
                  "key": "missing_employee_setup",
                  "message": "Company must add employees in order to run payroll."
                },
                {
                  "key": "missing_state_tax_setup",
                  "message": "Company must complete state tax setup in order to run payroll."
                },
                {
                  "key": "missing_pay_schedule",
                  "message": "Company must have a pay schedule in order to run payroll."
                },
                {
                  "key": "missing_forms",
                  "message": "Company forms must be signed in order to run payroll."
                },
                {
                  "key": "missing_bank_verification",
                  "message": "Company bank account must be verified in order to run payroll."
                },
                {
                  "key": "missing_signatory",
                  "message": "Company must have a verified signatory in order to run payroll."
                }
              ]
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: post-companies-payroll-skip-company_uuid-Example
    steps:
      - stepId: test
        operationId: post-companies-payroll-skip-company_uuid
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            end_date: "2023-06-25T00:00:00Z"
            pay_schedule_uuid: 85100524-4b42-4d2d-bd62-9d864f9aea64
            payroll_type: Regular
            start_date: "2023-05-26T00:00:00Z"
        successCriteria:
          - condition: $statusCode == 202
    x-speakeasy-test-group: Payrolls
  - workflowId: post-payrolls-gross-up-payroll_uuid-Example
    steps:
      - stepId: test
        operationId: post-payrolls-gross-up-payroll_uuid
        parameters:
          - name: payroll_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employee_uuid: be48c41e-142d-4116-9430-5aba2313fac7
            net_pay: "1000.00"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "net_pay": "1183.25"
              }
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: put-v1-companies-company_id-payrolls-payroll_id-calculate-Example
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-payrolls-payroll_id-calculate
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
    x-speakeasy-test-group: Payrolls
  - workflowId: put-v1-companies-company_id-payrolls-payroll_id-submit-Example
    steps:
      - stepId: test
        operationId: put-v1-companies-company_id-payrolls-payroll_id-submit
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 202
    x-speakeasy-test-group: Payrolls
  - workflowId: put-api-v1-companies-company_id-payrolls-payroll_id-cancel-Unprocessed
    steps:
      - stepId: test
        operationId: put-api-v1-companies-company_id-payrolls-payroll_id-cancel
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "payroll_deadline": "2021-02-18T22:00:00Z",
                "check_date": "2021-02-22",
                "processed": false,
                "processed_date": "\u003cvalue\u003e",
                "calculated_at": "\u003cvalue\u003e",
                "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                "off_cycle": false,
                "auto_pilot": false,
                "external": false,
                "pay_period": {
                  "start_date": "2021-02-01",
                  "end_date": "2021-02-15",
                  "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                },
                "payroll_status_meta": {
                  "cancellable": false,
                  "expected_check_date": "2021-02-22",
                  "initial_check_date": "2021-02-22",
                  "expected_debit_time": "2021-02-18T22:00:00Z",
                  "payroll_late": false,
                  "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"
                },
                "created_at": "2022-02-01T22:00:00Z",
                "submission_blockers": [
                  {
                    "blocker_type": "fast_ach_threshold_exceeded",
                    "blocker_name": "Fast ACH Threshold Exceeded",
                    "unblock_options": [
                      {
                        "unblock_type": "wire_in",
                        "check_date": "2024-06-10T00:00:00Z"
                      },
                      {
                        "unblock_type": "move_to_four_day",
                        "check_date": "2024-06-12T00:00:00Z",
                        "metadata": {}
                      }
                    ],
                    "selected_option": null,
                    "status": "unresolved"
                  }
                ],
                "processing_request": null
              }
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: put-api-v1-companies-company_id-payrolls-payroll_id-cancel-Processed
    steps:
      - stepId: test
        operationId: put-api-v1-companies-company_id-payrolls-payroll_id-cancel
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "payroll_deadline": "2021-02-18T22:00:00Z",
                "check_date": "2021-02-22",
                "processed": true,
                "processed_date": "2021-02-18",
                "calculated_at": "2021-02-18T12:00:00Z",
                "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                "off_cycle": false,
                "auto_pilot": true,
                "external": false,
                "pay_period": {
                  "start_date": "2021-02-01",
                  "end_date": "2021-02-15",
                  "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                },
                "payroll_status_meta": {
                  "cancellable": false,
                  "expected_check_date": "2021-02-22",
                  "initial_check_date": "2021-02-22",
                  "expected_debit_time": "2021-02-18T22:00:00Z",
                  "payroll_late": false,
                  "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"
                },
                "totals": {
                  "company_debit": "121747.71",
                  "net_pay_debit": "79283.80",
                  "tax_debit": "42463.91",
                  "reimbursement_debit": "0.00",
                  "child_support_debit": "0.00",
                  "reimbursements": "0.00",
                  "net_pay": "81752.94",
                  "gross_pay": "130635.89",
                  "employee_bonuses": "0.00",
                  "employee_commissions": "18536.37",
                  "employee_cash_tips": "0.00",
                  "employee_paycheck_tips": "0.00",
                  "additional_earnings": "0.00",
                  "owners_draw": "0.00",
                  "check_amount": "2469.14",
                  "employer_taxes": "6917.19",
                  "employee_taxes": "35546.72",
                  "benefits": "0.00",
                  "employee_benefits_deductions": "13336.23",
                  "imputed_pay": "0.00",
                  "deferred_payroll_taxes": "0.00",
                  "other_deductions": "240.00"
                },
                "employee_compensations": [
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067",
                    "excluded": false,
                    "gross_pay": "2791.25",
                    "net_pay": "1953.31",
                    "check_amount": "1953.31",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      },
                      {
                        "name": "Overtime",
                        "hours": "15.000",
                        "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23",
                        "compensation_multiplier": 1.5
                      },
                      {
                        "name": "Double overtime",
                        "hours": "0.000",
                        "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e",
                        "compensation_multiplier": 2
                      },
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a",
                        "compensation_multiplier": 1
                      },
                      {
                        "name": "Overtime",
                        "hours": "5.000",
                        "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5",
                        "compensation_multiplier": 1.5
                      },
                      {
                        "name": "Double overtime",
                        "hours": "0.000",
                        "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3",
                        "compensation_multiplier": 2
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ],
                    "benefits": [
                      {
                        "name": "Group Term Life",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": true
                      },
                      {
                        "name": "401K",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": false
                      }
                    ],
                    "deductions": [
                      {
                        "name": "Child Support",
                        "amount": "80.00"
                      }
                    ],
                    "taxes": [
                      {
                        "name": "Federal Income Tax",
                        "employer": false,
                        "amount": "646.69"
                      },
                      {
                        "name": "Social Security",
                        "employer": true,
                        "amount": "191.25"
                      }
                    ]
                  },
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012",
                    "excluded": false,
                    "gross_pay": "2791.25",
                    "net_pay": "1953.31",
                    "check_amount": "1953.31",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ],
                    "benefits": [
                      {
                        "name": "Group Term Life",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": true
                      },
                      {
                        "name": "401K",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": false
                      }
                    ],
                    "deductions": [
                      {
                        "name": "Child Support",
                        "amount": "80.00"
                      }
                    ],
                    "taxes": [
                      {
                        "name": "Federal Income Tax",
                        "employer": false,
                        "amount": "646.69"
                      },
                      {
                        "name": "Social Security",
                        "employer": true,
                        "amount": "191.25"
                      }
                    ]
                  },
                  {
                    "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781",
                    "excluded": false,
                    "gross_pay": "2791.25",
                    "net_pay": "1953.31",
                    "check_amount": "1953.31",
                    "payment_method": "Direct Deposit",
                    "fixed_compensations": [
                      {
                        "name": "Bonus",
                        "amount": "100.00",
                        "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"
                      },
                      {
                        "name": "Reimbursement",
                        "amount": "100.00",
                        "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"
                      }
                    ],
                    "hourly_compensations": [
                      {
                        "name": "Regular Hours",
                        "hours": "40.000",
                        "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                        "compensation_multiplier": 1
                      }
                    ],
                    "paid_time_off": [
                      {
                        "name": "Vacation Hours",
                        "hours": "20.000"
                      },
                      {
                        "name": "Sick Hours",
                        "hours": "0.000"
                      },
                      {
                        "name": "Holiday Hours",
                        "hours": "0.000"
                      }
                    ],
                    "benefits": [
                      {
                        "name": "Group Term Life",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": true
                      },
                      {
                        "name": "401K",
                        "employee_deduction": "100.00",
                        "company_contribution": "50.00",
                        "imputed": false
                      }
                    ],
                    "deductions": [
                      {
                        "name": "Child Support",
                        "amount": "80.00"
                      }
                    ],
                    "taxes": [
                      {
                        "name": "Federal Income Tax",
                        "employer": false,
                        "amount": "646.69"
                      },
                      {
                        "name": "Social Security",
                        "employer": true,
                        "amount": "191.25"
                      }
                    ]
                  }
                ],
                "company_taxes": [
                  {
                    "name": "MO Compensation Deduction",
                    "employer": true,
                    "amount": "-0.92"
                  },
                  {
                    "name": "NY MCTMT",
                    "employer": true,
                    "amount": "5.00"
                  }
                ],
                "created_at": "2022-02-01T22:00:00Z",
                "credit_blockers": [
                  {
                    "blocker_type": "waiting_for_wire_in",
                    "blocker_name": "Waiting for Wire In",
                    "unblock_options": [
                      {
                        "unblock_type": "submit_wire",
                        "check_date": "2024-06-10T00:00:00Z"
                      }
                    ],
                    "selected_option": "submit_wire",
                    "status": "unresolved"
                  }
                ],
                "processing_request": {
                  "status": "submit_success",
                  "errors": []
                }
              }
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: put-api-v1-companies-company_id-payrolls-payroll_id-cancel-Basic
    steps:
      - stepId: test
        operationId: put-api-v1-companies-company_id-payrolls-payroll_id-cancel
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: put-api-v1-companies-company_id-payrolls-payroll_id-cancel-Resource
    steps:
      - stepId: test
        operationId: put-api-v1-companies-company_id-payrolls-payroll_id-cancel
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: put-api-v1-companies-company_id-payrolls-payroll_id-cancel-Nested
    steps:
      - stepId: test
        operationId: put-api-v1-companies-company_id-payrolls-payroll_id-cancel
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: payroll_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: get-v1-payrolls-payroll_uuid-employees-employee_uuid-pay_stub
    steps:
      - stepId: test
        operationId: get-v1-payrolls-payroll_uuid-employees-employee_uuid-pay_stub
        parameters:
          - name: payroll_id
            in: path
            value: <id>
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: get-v1-employees-employee_uuid-pay_stubs-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_uuid-pay_stubs
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9",
                  "check_date": "2023-11-24T00:00:00Z",
                  "gross_pay": "880",
                  "net_pay": "541.02",
                  "payroll_uuid": "a039cafb-745e-4af4-bf1e-935a86fc18e0",
                  "check_amount": "500.2"
                }
              ]
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: post-v1-payrolls-payroll_uuid-generated_documents-printable_payroll_checks-Example
    steps:
      - stepId: test
        operationId: post-v1-payrolls-payroll_uuid-generated_documents-printable_payroll_checks
        parameters:
          - name: payroll_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            printing_format: bottom
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "payroll_uuid": "a83d0bd8-7d20-43b9-834c-6d514ef6cb20",
                "printing_format": "top",
                "starting_check_number": "10",
                "request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20",
                "status": "pending",
                "employee_check_number_mapping": [
                  {
                    "employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9",
                    "check_number": 10
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Payrolls
  - workflowId: post-v1-payrolls-payroll_uuid-generated_documents-printable_payroll_checks-Basic
    steps:
      - stepId: test
        operationId: post-v1-payrolls-payroll_uuid-generated_documents-printable_payroll_checks
        parameters:
          - name: payroll_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            printing_format: top
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: post-v1-payrolls-payroll_uuid-generated_documents-printable_payroll_checks-Resource
    steps:
      - stepId: test
        operationId: post-v1-payrolls-payroll_uuid-generated_documents-printable_payroll_checks
        parameters:
          - name: payroll_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            printing_format: bottom
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: post-v1-payrolls-payroll_uuid-generated_documents-printable_payroll_checks-Nested
    steps:
      - stepId: test
        operationId: post-v1-payrolls-payroll_uuid-generated_documents-printable_payroll_checks
        parameters:
          - name: payroll_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            printing_format: bottom
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Payrolls
  - workflowId: post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours-Example
    steps:
      - stepId: test
        operationId: post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours
        parameters:
          - name: payroll_id
            in: path
            value: <id>
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            double_overtime_hours_worked: 0
            overtime_hours_worked: 10
            pto_hours_used: 5.5
            regular_hours_worked: 30.25
            sick_hours_used: 0
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "time_off_policy_uuid": "c3a15554-f124-415d-b2c4-90b430fd8eb1",
                  "hours": "3.2"
                },
                {
                  "time_off_policy_uuid": "386fc48d-52d2-4009-87b3-368f74f6b3df",
                  "hours": "6.0"
                }
              ]
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours-Basic
    steps:
      - stepId: test
        operationId: post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours
        parameters:
          - name: payroll_id
            in: path
            value: <id>
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours-Resource
    steps:
      - stepId: test
        operationId: post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours
        parameters:
          - name: payroll_id
            in: path
            value: <id>
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours-Nested
    steps:
      - stepId: test
        operationId: post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours
        parameters:
          - name: payroll_id
            in: path
            value: <id>
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: get-time_off_policies-time_off_policy_uuid-Unlimited Policy
    steps:
      - stepId: test
        operationId: get-time_off_policies-time_off_policy_uuid
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9",
                "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3",
                "name": "Test Vacation Unlimited Policy",
                "policy_type": "vacation",
                "accrual_method": "unlimited",
                "accrual_rate": "\u003cvalue\u003e",
                "accrual_rate_unit": "\u003cvalue\u003e",
                "paid_out_on_termination": false,
                "accrual_waiting_period_days": 370456,
                "carryover_limit_hours": "\u003cvalue\u003e",
                "max_accrual_hours_per_year": "\u003cvalue\u003e",
                "max_hours": "\u003cvalue\u003e",
                "complete": true,
                "version": "f5556bce3d75ec2b62bd11990aa7993a",
                "is_active": true,
                "employees": [
                  {
                    "uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"
                  },
                  {
                    "uuid": "3633ce57-abb7-422f-8c5a-455566618e6a"
                  },
                  {
                    "uuid": "9b37429c-e540-40fb-86b3-738ca9af65c7"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: get-time_off_policies-time_off_policy_uuid-Fixed Policy
    steps:
      - stepId: test
        operationId: get-time_off_policies-time_off_policy_uuid
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "2439c13f-f6d7-4a93-af8c-175fd4cc7ce8",
                "company_uuid": "f5f7b10d-2ddb-42f6-a955-d55320ce5316",
                "name": "Test Vacation Fixed Policy",
                "policy_type": "vacation",
                "accrual_method": "per_anniversary_year",
                "accrual_rate": "120.0",
                "accrual_rate_unit": "\u003cvalue\u003e",
                "paid_out_on_termination": true,
                "accrual_waiting_period_days": 0,
                "carryover_limit_hours": "240.0",
                "max_accrual_hours_per_year": "120.0",
                "max_hours": "300.0",
                "complete": true,
                "version": "f5556bce3d75ec2b62bd11990aa7993a",
                "is_active": true,
                "employees": [
                  {
                    "uuid": "de7a5fb3-2e0f-460a-abbf-467fe310bf5c"
                  },
                  {
                    "uuid": "92af03c7-a833-43ae-bae8-f67007a59b37"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: get-time_off_policies-time_off_policy_uuid-Hourly Policy
    steps:
      - stepId: test
        operationId: get-time_off_policies-time_off_policy_uuid
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "bd5f354f-12e0-4a5e-ad1f-953bb2685ad4",
                "company_uuid": "6767445f-5075-4ea4-a7f5-d5b5b93d4d60",
                "name": "Test Vacation Hourly Policy",
                "policy_type": "vacation",
                "accrual_method": "per_hour_paid",
                "accrual_rate": "4.0",
                "accrual_rate_unit": "80.0",
                "paid_out_on_termination": true,
                "accrual_waiting_period_days": 30,
                "carryover_limit_hours": "200.0",
                "max_accrual_hours_per_year": "120.0",
                "max_hours": "240.0",
                "complete": true,
                "version": "f5556bce3d75ec2b62bd11990aa7993a",
                "is_active": true,
                "employees": [
                  {
                    "uuid": "1ea2764d-0f1a-4f09-b1d9-3006aecf63c4"
                  },
                  {
                    "uuid": "a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-time_off_policies-time_off_policy_uuid-example
    steps:
      - stepId: test
        operationId: put-time_off_policies-time_off_policy_uuid
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            accrual_method: per_hour_paid
            accrual_rate: "4.0"
            accrual_rate_unit: "80.0"
            accrual_waiting_period_days: 30
            carryover_limit_hours: "200.0"
            max_accrual_hours_per_year: "120.0"
            max_hours: "240.0"
            name: Hourly Vacation Policy
            paid_out_on_termination: true
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "64a9fdcb-6b72-49e9-938f-aad91c34e607",
                "company_uuid": "\u003cid\u003e",
                "name": "\u003cvalue\u003e",
                "policy_type": "vacation",
                "accrual_method": "\u003cvalue\u003e",
                "is_active": true,
                "employees": [
                  {}
                ]
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-time_off_policies-time_off_policy_uuid-Unlimited Vacation Policy
    steps:
      - stepId: test
        operationId: put-time_off_policies-time_off_policy_uuid
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9",
                "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3",
                "name": "Unlimited Vacation Policy",
                "policy_type": "vacation",
                "accrual_method": "unlimited",
                "accrual_rate": "\u003cvalue\u003e",
                "accrual_rate_unit": "\u003cvalue\u003e",
                "paid_out_on_termination": false,
                "accrual_waiting_period_days": 857478,
                "carryover_limit_hours": "\u003cvalue\u003e",
                "max_accrual_hours_per_year": "\u003cvalue\u003e",
                "max_hours": "\u003cvalue\u003e",
                "complete": true,
                "is_active": true,
                "employees": []
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-time_off_policies-time_off_policy_uuid-Hourly Vacation Policy
    steps:
      - stepId: test
        operationId: put-time_off_policies-time_off_policy_uuid
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "d86223a1-ec67-4204-8d6a-0f36499c02d0",
                "company_uuid": "f43bcd64-7f57-4d4e-9c1a-7c90bab8a358",
                "name": "Test Vacation Hourly Policy",
                "policy_type": "vacation",
                "accrual_method": "per_hour_paid",
                "accrual_rate": "4.0",
                "accrual_rate_unit": "80.0",
                "paid_out_on_termination": true,
                "accrual_waiting_period_days": 30,
                "carryover_limit_hours": "200.0",
                "max_accrual_hours_per_year": "120.0",
                "max_hours": "240.0",
                "complete": true,
                "is_active": true,
                "employees": []
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-time_off_policies-time_off_policy_uuid-Basic
    steps:
      - stepId: test
        operationId: put-time_off_policies-time_off_policy_uuid
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-time_off_policies-time_off_policy_uuid-Resource
    steps:
      - stepId: test
        operationId: put-time_off_policies-time_off_policy_uuid
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-time_off_policies-time_off_policy_uuid-Nested
    steps:
      - stepId: test
        operationId: put-time_off_policies-time_off_policy_uuid
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: get-companies-company_uuid-time_off_policies-example
    steps:
      - stepId: test
        operationId: get-companies-company_uuid-time_off_policies
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9",
                  "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3",
                  "name": "Test Vacation Unlimited Policy",
                  "policy_type": "vacation",
                  "accrual_method": "unlimited",
                  "accrual_rate": "\u003cvalue\u003e",
                  "accrual_rate_unit": "\u003cvalue\u003e",
                  "paid_out_on_termination": false,
                  "accrual_waiting_period_days": 700347,
                  "carryover_limit_hours": "\u003cvalue\u003e",
                  "max_accrual_hours_per_year": "\u003cvalue\u003e",
                  "max_hours": "\u003cvalue\u003e",
                  "complete": true,
                  "version": "f5556bce3d75ec2b62bd11990aa7993a",
                  "is_active": true,
                  "employees": [
                    {
                      "uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"
                    },
                    {
                      "uuid": "3633ce57-abb7-422f-8c5a-455566618e6a"
                    },
                    {
                      "uuid": "9b37429c-e540-40fb-86b3-738ca9af65c7"
                    }
                  ]
                },
                {
                  "uuid": "2439c13f-f6d7-4a93-af8c-175fd4cc7ce8",
                  "company_uuid": "f5f7b10d-2ddb-42f6-a955-d55320ce5316",
                  "name": "Test Vacation Fixed Policy",
                  "policy_type": "vacation",
                  "accrual_method": "per_anniversary_year",
                  "accrual_rate": "120.0",
                  "accrual_rate_unit": "\u003cvalue\u003e",
                  "paid_out_on_termination": true,
                  "accrual_waiting_period_days": 0,
                  "carryover_limit_hours": "240.0",
                  "max_accrual_hours_per_year": "120.0",
                  "max_hours": "300.0",
                  "complete": true,
                  "version": "f5556bce3d75ec2b62bd11990aa7993a",
                  "is_active": true,
                  "employees": [
                    {
                      "uuid": "de7a5fb3-2e0f-460a-abbf-467fe310bf5c"
                    },
                    {
                      "uuid": "92af03c7-a833-43ae-bae8-f67007a59b37"
                    }
                  ]
                },
                {
                  "uuid": "bd5f354f-12e0-4a5e-ad1f-953bb2685ad4",
                  "company_uuid": "6767445f-5075-4ea4-a7f5-d5b5b93d4d60",
                  "name": "Test Vacation Hourly Policy",
                  "policy_type": "vacation",
                  "accrual_method": "per_hour_paid",
                  "accrual_rate": "4.0",
                  "accrual_rate_unit": "80.0",
                  "paid_out_on_termination": true,
                  "accrual_waiting_period_days": 30,
                  "carryover_limit_hours": "200.0",
                  "max_accrual_hours_per_year": "120.0",
                  "max_hours": "240.0",
                  "complete": true,
                  "version": "f5556bce3d75ec2b62bd11990aa7993a",
                  "is_active": true,
                  "employees": [
                    {
                      "uuid": "1ea2764d-0f1a-4f09-b1d9-3006aecf63c4"
                    },
                    {
                      "uuid": "a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8"
                    }
                  ]
                }
              ]
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: post-companies-company_uuid-time_off_policies-Unlimited Policy
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-time_off_policies
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            accrual_method: unlimited
            name: Unlimited Vacation Policy
            policy_type: vacation
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "68a1c8b1-cf9c-4f0b-91c3-8910fc125ec7",
                "company_uuid": "\u003cid\u003e",
                "name": "\u003cvalue\u003e",
                "policy_type": "vacation",
                "accrual_method": "\u003cvalue\u003e",
                "is_active": false,
                "employees": []
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: post-companies-company_uuid-time_off_policies-Hourly Policy
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-time_off_policies
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            accrual_method: per_hour_paid
            accrual_rate: "4.0"
            accrual_rate_unit: "80.0"
            accrual_waiting_period_days: 30
            carryover_limit_hours: "200.0"
            max_accrual_hours_per_year: "120.0"
            max_hours: "240.0"
            name: Test Vacation Hourly Policy
            paid_out_on_termination: true
            policy_type: vacation
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "8b50daa4-883a-45ac-bf16-67931a204633",
                "company_uuid": "\u003cid\u003e",
                "name": "\u003cvalue\u003e",
                "policy_type": "vacation",
                "accrual_method": "\u003cvalue\u003e",
                "is_active": false,
                "employees": [
                  {},
                  {},
                  {}
                ]
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: post-companies-company_uuid-time_off_policies-Unlimited Vacation Policy
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-time_off_policies
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            accrual_method: per_anniversary_year
            name: <value>
            policy_type: <value>
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9",
                "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3",
                "name": "Unlimited Vacation Policy",
                "policy_type": "vacation",
                "accrual_method": "unlimited",
                "accrual_rate": "\u003cvalue\u003e",
                "accrual_rate_unit": "\u003cvalue\u003e",
                "paid_out_on_termination": false,
                "accrual_waiting_period_days": 486589,
                "carryover_limit_hours": "\u003cvalue\u003e",
                "max_accrual_hours_per_year": "\u003cvalue\u003e",
                "max_hours": "\u003cvalue\u003e",
                "complete": true,
                "is_active": true,
                "employees": []
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: post-companies-company_uuid-time_off_policies-Hourly Vacation Policy
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-time_off_policies
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            accrual_method: per_anniversary_year
            name: <value>
            policy_type: <value>
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "d86223a1-ec67-4204-8d6a-0f36499c02d0",
                "company_uuid": "f43bcd64-7f57-4d4e-9c1a-7c90bab8a358",
                "name": "Test Vacation Hourly Policy",
                "policy_type": "vacation",
                "accrual_method": "per_hour_paid",
                "accrual_rate": "4.0",
                "accrual_rate_unit": "80.0",
                "paid_out_on_termination": true,
                "accrual_waiting_period_days": 30,
                "carryover_limit_hours": "200.0",
                "max_accrual_hours_per_year": "120.0",
                "max_hours": "240.0",
                "complete": true,
                "is_active": true,
                "employees": []
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: post-companies-company_uuid-time_off_policies-Basic
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-time_off_policies
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            accrual_method: per_pay_period
            name: <value>
            policy_type: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: post-companies-company_uuid-time_off_policies-Resource
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-time_off_policies
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            accrual_method: unlimited
            name: <value>
            policy_type: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: post-companies-company_uuid-time_off_policies-Nested
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-time_off_policies
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            accrual_method: per_hour_paid
            name: <value>
            policy_type: <value>
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-version-time_off_policies-time_off_policy_uuid-add_employees-Unlimited Policy
    steps:
      - stepId: test
        operationId: put-version-time_off_policies-time_off_policy_uuid-add_employees
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9",
                "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3",
                "name": "test policy",
                "policy_type": "vacation",
                "accrual_method": "unlimited",
                "accrual_rate": "\u003cvalue\u003e",
                "accrual_rate_unit": "\u003cvalue\u003e",
                "paid_out_on_termination": false,
                "accrual_waiting_period_days": 556955,
                "carryover_limit_hours": "\u003cvalue\u003e",
                "max_accrual_hours_per_year": "\u003cvalue\u003e",
                "max_hours": "\u003cvalue\u003e",
                "complete": true,
                "is_active": true,
                "employees": [
                  {
                    "uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-version-time_off_policies-time_off_policy_uuid-add_employees-Fixed/Hourly Policy
    steps:
      - stepId: test
        operationId: put-version-time_off_policies-time_off_policy_uuid-add_employees
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "1cb0826f-c6d7-4361-b3e7-5e6d8af6853e",
                "company_uuid": "\u003cid\u003e",
                "name": "\u003cvalue\u003e",
                "policy_type": "vacation",
                "accrual_method": "\u003cvalue\u003e",
                "is_active": true,
                "employees": [
                  {}
                ]
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-version-time_off_policies-time_off_policy_uuid-add_employees-Hourly Policy
    steps:
      - stepId: test
        operationId: put-version-time_off_policies-time_off_policy_uuid-add_employees
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9",
                "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3",
                "name": "test policy",
                "policy_type": "vacation",
                "accrual_method": "per_hour_paid",
                "accrual_rate": "4.0",
                "accrual_rate_unit": "80.0",
                "paid_out_on_termination": true,
                "accrual_waiting_period_days": 30,
                "carryover_limit_hours": "200.0",
                "max_accrual_hours_per_year": "120.0",
                "max_hours": "240.0",
                "complete": true,
                "is_active": true,
                "employees": [
                  {
                    "uuid": "56c672b4-3918-45cd-a3bb-a62ae0ff1307"
                  },
                  {
                    "uuid": "28e7a45d-32dd-4925-a82a-9a3ccc6d302c"
                  },
                  {
                    "uuid": "f60650da-ba18-417a-b2ab-3c9b6f0fe4f2"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-version-time_off_policies-time_off_policy_uuid-add_employees-Basic
    steps:
      - stepId: test
        operationId: put-version-time_off_policies-time_off_policy_uuid-add_employees
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-version-time_off_policies-time_off_policy_uuid-add_employees-Resource
    steps:
      - stepId: test
        operationId: put-version-time_off_policies-time_off_policy_uuid-add_employees
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-version-time_off_policies-time_off_policy_uuid-add_employees-Nested
    steps:
      - stepId: test
        operationId: put-version-time_off_policies-time_off_policy_uuid-add_employees
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-v1-time_off_policies-time_off_policy_uuid-remove_employees-example
    steps:
      - stepId: test
        operationId: put-v1-time_off_policies-time_off_policy_uuid-remove_employees
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9",
                "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3",
                "name": "test policy",
                "policy_type": "vacation",
                "accrual_method": "unlimited",
                "accrual_rate": "\u003cvalue\u003e",
                "accrual_rate_unit": "\u003cvalue\u003e",
                "paid_out_on_termination": false,
                "accrual_waiting_period_days": 75298,
                "carryover_limit_hours": "\u003cvalue\u003e",
                "max_accrual_hours_per_year": "\u003cvalue\u003e",
                "max_hours": "\u003cvalue\u003e",
                "complete": true,
                "is_active": true,
                "employees": [
                  {
                    "uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-v1-time_off_policies-time_off_policy_uuid-remove_employees-Basic
    steps:
      - stepId: test
        operationId: put-v1-time_off_policies-time_off_policy_uuid-remove_employees
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-v1-time_off_policies-time_off_policy_uuid-remove_employees-Resource
    steps:
      - stepId: test
        operationId: put-v1-time_off_policies-time_off_policy_uuid-remove_employees
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-v1-time_off_policies-time_off_policy_uuid-remove_employees-Nested
    steps:
      - stepId: test
        operationId: put-v1-time_off_policies-time_off_policy_uuid-remove_employees
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-version-time_off_policies-time_off_policy_uuid-balance-example
    steps:
      - stepId: test
        operationId: put-version-time_off_policies-time_off_policy_uuid-balance
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9",
                "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3",
                "name": "test policy",
                "policy_type": "vacation",
                "accrual_method": "per_hour_paid",
                "accrual_rate": "4.0",
                "accrual_rate_unit": "80.0",
                "paid_out_on_termination": true,
                "accrual_waiting_period_days": 30,
                "carryover_limit_hours": "200.0",
                "max_accrual_hours_per_year": "120.0",
                "max_hours": "240.0",
                "complete": true,
                "is_active": true,
                "employees": [
                  {
                    "uuid": "56c672b4-3918-45cd-a3bb-a62ae0ff1307"
                  },
                  {
                    "uuid": "28e7a45d-32dd-4925-a82a-9a3ccc6d302c"
                  },
                  {
                    "uuid": "f60650da-ba18-417a-b2ab-3c9b6f0fe4f2"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-version-time_off_policies-time_off_policy_uuid-balance-Basic
    steps:
      - stepId: test
        operationId: put-version-time_off_policies-time_off_policy_uuid-balance
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-version-time_off_policies-time_off_policy_uuid-balance-Resource
    steps:
      - stepId: test
        operationId: put-version-time_off_policies-time_off_policy_uuid-balance
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-version-time_off_policies-time_off_policy_uuid-balance-Nested
    steps:
      - stepId: test
        operationId: put-version-time_off_policies-time_off_policy_uuid-balance
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-v1-time_off_policies-time_off_policy_uuid-deactivate-example
    steps:
      - stepId: test
        operationId: put-v1-time_off_policies-time_off_policy_uuid-deactivate
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9",
                "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3",
                "name": "test policy",
                "policy_type": "vacation",
                "accrual_method": "unlimited",
                "accrual_rate": "\u003cvalue\u003e",
                "accrual_rate_unit": "\u003cvalue\u003e",
                "paid_out_on_termination": false,
                "accrual_waiting_period_days": 340065,
                "carryover_limit_hours": "\u003cvalue\u003e",
                "max_accrual_hours_per_year": "\u003cvalue\u003e",
                "max_hours": "\u003cvalue\u003e",
                "complete": true,
                "is_active": false,
                "employees": [
                  {
                    "uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-v1-time_off_policies-time_off_policy_uuid-deactivate-Basic
    steps:
      - stepId: test
        operationId: put-v1-time_off_policies-time_off_policy_uuid-deactivate
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-v1-time_off_policies-time_off_policy_uuid-deactivate-Resource
    steps:
      - stepId: test
        operationId: put-v1-time_off_policies-time_off_policy_uuid-deactivate
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: put-v1-time_off_policies-time_off_policy_uuid-deactivate-Nested
    steps:
      - stepId: test
        operationId: put-v1-time_off_policies-time_off_policy_uuid-deactivate
        parameters:
          - name: time_off_policy_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: timeOffPolicies
  - workflowId: get-v1-contractor_payments-contractor_payment_uuid-receipt-Example
    steps:
      - stepId: test
        operationId: get-v1-contractor_payments-contractor_payment_uuid-receipt
        parameters:
          - name: contractor_payment_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "contractor_payment_uuid": "afccb970-357e-4013-81f5-85dafc74f9b6",
                "company_uuid": "c827aa0d-3928-4d5a-ab1f-400641a7d2b8",
                "name_of_sender": "Torp and Sons and Sons",
                "name_of_recipient": "Patricia Hamill",
                "debit_date": "2022-06-02",
                "license": "Your payroll provider partners with Gusto Inc. for payments processing. Gusto Inc. is a licensed money transmitter. Learn more on our license page.",
                "license_uri": "https://gusto.com/about/licenses",
                "right_to_refund": "https://gusto.com/about/licenses",
                "liability_of_licensee": "https://gusto.com/about/licenses",
                "totals": {
                  "company_debit": "748.34"
                },
                "contractor_payments": [
                  {
                    "contractor_uuid": "f83d0bd8-7e20-43b9-834c-6d514ef6cb47",
                    "contractor_first_name": "Patricia",
                    "contractor_last_name": "Hamill",
                    "contractor_business_name": "",
                    "contractor_type": "Individual",
                    "payment_method": "Direct Deposit",
                    "wage": "448.34",
                    "bonus": "248.00",
                    "reimbursement": "100.00"
                  }
                ],
                "licensee": {
                  "name": "Gusto, Zenpayroll Inc.",
                  "address": "525 20th St",
                  "city": "San Francisco",
                  "state": "CA",
                  "postal_code": "94107",
                  "phone_number": "4157778888"
                }
              }
            type: simple
    x-speakeasy-test-group: contractorPayments
  - workflowId: get-v1-contractor_payments-contractor_payment_uuid-fund-Example
    steps:
      - stepId: test
        operationId: get-v1-contractor_payments-contractor_payment_uuid-fund
        parameters:
          - name: contractor_payment_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                "contractor_uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037",
                "bonus": "20.0",
                "date": "2020-10-19",
                "hours": "40.0",
                "payment_method": "Direct Deposit",
                "reimbursement": "100.0",
                "status": "Unfunded",
                "hourly_rate": "18.0",
                "may_cancel": true,
                "wage": "0.0",
                "wage_type": "Hourly",
                "wage_total": "740.00"
              }
            type: simple
    x-speakeasy-test-group: contractorPayments
  - workflowId: get-v1-contractor_payments-contractor_payment_uuid-fund-Basic
    steps:
      - stepId: test
        operationId: get-v1-contractor_payments-contractor_payment_uuid-fund
        parameters:
          - name: contractor_payment_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPayments
  - workflowId: get-v1-contractor_payments-contractor_payment_uuid-fund-Resource
    steps:
      - stepId: test
        operationId: get-v1-contractor_payments-contractor_payment_uuid-fund
        parameters:
          - name: contractor_payment_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPayments
  - workflowId: get-v1-contractor_payments-contractor_payment_uuid-fund-Nested
    steps:
      - stepId: test
        operationId: get-v1-contractor_payments-contractor_payment_uuid-fund
        parameters:
          - name: contractor_payment_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPayments
  - workflowId: post-v1-companies-company_id-contractor_payments-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payments
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            bonus: 500
            contractor_uuid: <id>
            date: "2020-01-01"
            hours: 40
            payment_method: Direct Deposit
            reimbursement: 20
            wage: 5000
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                "contractor_uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037",
                "bonus": "20.0",
                "date": "2020-10-19",
                "hours": "40.0",
                "payment_method": "Direct Deposit",
                "reimbursement": "100.0",
                "status": "Unfunded",
                "hourly_rate": "18.0",
                "may_cancel": true,
                "wage": "0.0",
                "wage_type": "Hourly",
                "wage_total": "740.00"
              }
            type: simple
    x-speakeasy-test-group: contractorPayments
  - workflowId: post-v1-companies-company_id-contractor_payments-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payments
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            bonus: 500
            contractor_uuid: <id>
            date: "2020-01-01"
            hours: 40
            payment_method: Direct Deposit
            reimbursement: 20
            wage: 5000
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPayments
  - workflowId: post-v1-companies-company_id-contractor_payments-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payments
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            bonus: 500
            contractor_uuid: <id>
            date: "2020-01-01"
            hours: 40
            payment_method: Direct Deposit
            reimbursement: 20
            wage: 5000
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPayments
  - workflowId: post-v1-companies-company_id-contractor_payments-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payments
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            bonus: 500
            contractor_uuid: <id>
            date: "2020-01-01"
            hours: 40
            payment_method: Direct Deposit
            reimbursement: 20
            wage: 5000
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPayments
  - workflowId: get-v1-companies-company_id-contractor_payments-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-contractor_payments
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: start_date
            in: query
            value: "2020-01-01"
          - name: end_date
            in: query
            value: "2020-12-31"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {}
            type: simple
    x-speakeasy-test-group: contractorPayments
  - workflowId: get-v1-companies-company_id-contractor_payment-contractor-payment-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-contractor_payment-contractor-payment
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: contractor_payment_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                "contractor_uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037",
                "bonus": "20.0",
                "date": "2020-10-19",
                "hours": "40.0",
                "payment_method": "Direct Deposit",
                "reimbursement": "100.0",
                "status": "Unfunded",
                "hourly_rate": "18.0",
                "may_cancel": true,
                "wage": "0.0",
                "wage_type": "Hourly",
                "wage_total": "740.00"
              }
            type: simple
    x-speakeasy-test-group: contractorPayments
  - workflowId: delete-v1-companies-company_id-contractor_payment-contractor-payment-Basic
    steps:
      - stepId: test
        operationId: delete-v1-companies-company_id-contractor_payment-contractor-payment
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: contractor_payment_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: contractorPayments
  - workflowId: delete-v1-companies-company_id-contractor_payment-contractor-payment-Resource
    steps:
      - stepId: test
        operationId: delete-v1-companies-company_id-contractor_payment-contractor-payment
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: contractor_payment_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: contractorPayments
  - workflowId: delete-v1-companies-company_id-contractor_payment-contractor-payment-Nested
    steps:
      - stepId: test
        operationId: delete-v1-companies-company_id-contractor_payment-contractor-payment
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: contractor_payment_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: contractorPayments
  - workflowId: post-v1-companies-company_id-contractor_payment_groups-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payment_groups
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: "2020-01-01"
            contractor_payments: []
            creation_token: 1d532d13-8f61-4a57-ad3c-b5fac1c6e05e
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "f693e034-d833-46e3-88d4-2c820c383c57",
                "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d",
                "check_date": "2024-05-07T00:00:00Z",
                "debit_date": "2024-05-01T00:00:00Z",
                "status": "Unfunded",
                "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed",
                "totals": {
                  "amount": "2295.0",
                  "debit_amount": "2295.0",
                  "wage_amount": "2220.0",
                  "reimbursement_amount": "75.0"
                },
                "contractor_payments": [
                  {
                    "uuid": "630dc982-f498-4ebc-a6dc-4d76711027ce",
                    "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4",
                    "bonus": "0.0",
                    "hours": "40.0",
                    "payment_method": "Direct Deposit",
                    "reimbursement": "75.0",
                    "status": "Unfunded",
                    "hourly_rate": "18.0",
                    "may_cancel": false,
                    "wage": "0.0",
                    "wage_type": "Hourly",
                    "wage_total": "720.0"
                  },
                  {
                    "uuid": "12f51eba-d653-4357-8c05-1f1f8d0fd5e3",
                    "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d",
                    "bonus": "0.0",
                    "hours": "0.0",
                    "payment_method": "Check",
                    "reimbursement": "0.0",
                    "status": "Unfunded",
                    "hourly_rate": "0.0",
                    "may_cancel": false,
                    "wage": "1500.0",
                    "wage_type": "Fixed",
                    "wage_total": "1500.0"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: post-v1-companies-company_id-contractor_payment_groups-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payment_groups
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: "2020-01-01"
            contractor_payments:
              - bonus: 500
                hours: 40
                payment_method: Direct Deposit
                reimbursement: 20
                wage: 5000
              - bonus: 500
                hours: 40
                payment_method: Direct Deposit
                reimbursement: 20
                wage: 5000
              - bonus: 500
                hours: 40
                payment_method: Direct Deposit
                reimbursement: 20
                wage: 5000
            creation_token: 1d532d13-8f61-4a57-ad3c-b5fac1c6e05e
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: post-v1-companies-company_id-contractor_payment_groups-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payment_groups
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: "2020-01-01"
            contractor_payments:
              - bonus: 500
                hours: 40
                payment_method: Direct Deposit
                reimbursement: 20
                wage: 5000
              - bonus: 500
                hours: 40
                payment_method: Direct Deposit
                reimbursement: 20
                wage: 5000
            creation_token: 1d532d13-8f61-4a57-ad3c-b5fac1c6e05e
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: post-v1-companies-company_id-contractor_payment_groups-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payment_groups
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: "2020-01-01"
            contractor_payments: []
            creation_token: 1d532d13-8f61-4a57-ad3c-b5fac1c6e05e
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: get-v1-companies-company_id-contractor_payment_groups-Example
    steps:
      - stepId: test
        operationId: get-v1-companies-company_id-contractor_payment_groups
        parameters:
          - name: company_id
            in: path
            value: <id>
          - name: start_date
            in: query
            value: "2020-01-01"
          - name: end_date
            in: query
            value: "2020-12-31"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "7f2337f9-9b78-44b9-aeed-be4777b833a8",
                  "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d",
                  "check_date": "2024-03-15T00:00:00Z",
                  "debit_date": "2024-03-11T00:00:00Z",
                  "status": "Funded",
                  "creation_token": "a51a3500-3200-43af-a738-169d4b66a9db",
                  "totals": {
                    "debit_amount": "740.00",
                    "wage_amount": "720.00",
                    "reimbursement_amount": "20.00"
                  }
                },
                {
                  "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                  "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d",
                  "check_date": "2024-05-02T00:00:00Z",
                  "debit_date": "2024-04-26T00:00:00Z",
                  "status": "Unfunded",
                  "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed",
                  "totals": {
                    "debit_amount": "2365.00",
                    "wage_amount": "2270.00",
                    "reimbursement_amount": "95.00"
                  }
                }
              ]
            type: simple
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: post-v1-companies-company_id-contractor_payment_groups-preview-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payment_groups-preview
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: "2020-01-01"
            contractor_payments:
              - bonus: 500
                hours: 40
                payment_method: Direct Deposit
                reimbursement: 20
                wage: 5000
            creation_token: 1d532d13-8f61-4a57-ad3c-b5fac1c6e05e
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "nil",
                "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d",
                "check_date": "2024-05-07T00:00:00Z",
                "debit_date": "2024-05-01T00:00:00Z",
                "status": "Unfunded",
                "creation_token": "nil",
                "totals": {
                  "amount": "2295.0",
                  "debit_amount": "2295.0",
                  "wage_amount": "2220.0",
                  "reimbursement_amount": "75.0"
                },
                "contractor_payments": [
                  {
                    "uuid": "nil",
                    "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4",
                    "bonus": "0.0",
                    "hours": "40.0",
                    "payment_method": "Direct Deposit",
                    "reimbursement": "75.0",
                    "status": "Unfunded",
                    "hourly_rate": "18.0",
                    "may_cancel": false,
                    "wage": "0.0",
                    "wage_type": "Hourly",
                    "wage_total": "720.0"
                  },
                  {
                    "uuid": "nil",
                    "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d",
                    "bonus": "0.0",
                    "hours": "0.0",
                    "payment_method": "Check",
                    "reimbursement": "0.0",
                    "status": "Unfunded",
                    "hourly_rate": "0.0",
                    "may_cancel": false,
                    "wage": "1500.0",
                    "wage_type": "Fixed",
                    "wage_total": "1500.0"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: post-v1-companies-company_id-contractor_payment_groups-preview-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payment_groups-preview
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: "2020-01-01"
            contractor_payments:
              - bonus: 500
                hours: 40
                payment_method: Direct Deposit
                reimbursement: 20
                wage: 5000
            creation_token: 1d532d13-8f61-4a57-ad3c-b5fac1c6e05e
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: post-v1-companies-company_id-contractor_payment_groups-preview-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payment_groups-preview
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: "2020-01-01"
            contractor_payments:
              - bonus: 500
                hours: 40
                payment_method: Direct Deposit
                reimbursement: 20
                wage: 5000
              - bonus: 500
                hours: 40
                payment_method: Direct Deposit
                reimbursement: 20
                wage: 5000
              - bonus: 500
                hours: 40
                payment_method: Direct Deposit
                reimbursement: 20
                wage: 5000
            creation_token: 1d532d13-8f61-4a57-ad3c-b5fac1c6e05e
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: post-v1-companies-company_id-contractor_payment_groups-preview-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-contractor_payment_groups-preview
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            check_date: "2020-01-01"
            contractor_payments: []
            creation_token: 1d532d13-8f61-4a57-ad3c-b5fac1c6e05e
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: get-v1-contractor_payment_groups-contractor_payment_group_id-Example
    steps:
      - stepId: test
        operationId: get-v1-contractor_payment_groups-contractor_payment_group_id
        parameters:
          - name: contractor_payment_group_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "f693e034-d833-46e3-88d4-2c820c383c57",
                "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d",
                "check_date": "2024-05-07T00:00:00Z",
                "debit_date": "2024-05-01T00:00:00Z",
                "status": "Unfunded",
                "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed",
                "totals": {
                  "amount": "2295.0",
                  "debit_amount": "2295.0",
                  "wage_amount": "2220.0",
                  "reimbursement_amount": "75.0"
                },
                "contractor_payments": [
                  {
                    "uuid": "630dc982-f498-4ebc-a6dc-4d76711027ce",
                    "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4",
                    "bonus": "0.0",
                    "hours": "40.0",
                    "payment_method": "Direct Deposit",
                    "reimbursement": "75.0",
                    "status": "Unfunded",
                    "hourly_rate": "18.0",
                    "may_cancel": false,
                    "wage": "0.0",
                    "wage_type": "Hourly",
                    "wage_total": "720.0"
                  },
                  {
                    "uuid": "12f51eba-d653-4357-8c05-1f1f8d0fd5e3",
                    "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d",
                    "bonus": "0.0",
                    "hours": "0.0",
                    "payment_method": "Check",
                    "reimbursement": "0.0",
                    "status": "Unfunded",
                    "hourly_rate": "0.0",
                    "may_cancel": false,
                    "wage": "1500.0",
                    "wage_type": "Fixed",
                    "wage_total": "1500.0"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: delete-v1-contractor_payment_groups-contractor_payment_group_id-Basic
    steps:
      - stepId: test
        operationId: delete-v1-contractor_payment_groups-contractor_payment_group_id
        parameters:
          - name: contractor_payment_group_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: delete-v1-contractor_payment_groups-contractor_payment_group_id-Resource
    steps:
      - stepId: test
        operationId: delete-v1-contractor_payment_groups-contractor_payment_group_id
        parameters:
          - name: contractor_payment_group_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: delete-v1-contractor_payment_groups-contractor_payment_group_id-Nested
    steps:
      - stepId: test
        operationId: delete-v1-contractor_payment_groups-contractor_payment_group_id
        parameters:
          - name: contractor_payment_group_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: put-v1-contractor_payment_groups-contractor_payment_group_id-fund-Example
    steps:
      - stepId: test
        operationId: put-v1-contractor_payment_groups-contractor_payment_group_id-fund
        parameters:
          - name: contractor_payment_group_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "f693e034-d833-46e3-88d4-2c820c383c57",
                "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d",
                "check_date": "2024-05-07T00:00:00Z",
                "debit_date": "2024-05-01T00:00:00Z",
                "status": "Unfunded",
                "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed",
                "totals": {
                  "amount": "2295.0",
                  "debit_amount": "2295.0",
                  "wage_amount": "2220.0",
                  "reimbursement_amount": "75.0"
                },
                "contractor_payments": [
                  {
                    "uuid": "630dc982-f498-4ebc-a6dc-4d76711027ce",
                    "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4",
                    "bonus": "0.0",
                    "hours": "40.0",
                    "payment_method": "Direct Deposit",
                    "reimbursement": "75.0",
                    "status": "Unfunded",
                    "hourly_rate": "18.0",
                    "may_cancel": false,
                    "wage": "0.0",
                    "wage_type": "Hourly",
                    "wage_total": "720.0"
                  },
                  {
                    "uuid": "12f51eba-d653-4357-8c05-1f1f8d0fd5e3",
                    "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d",
                    "bonus": "0.0",
                    "hours": "0.0",
                    "payment_method": "Check",
                    "reimbursement": "0.0",
                    "status": "Unfunded",
                    "hourly_rate": "0.0",
                    "may_cancel": false,
                    "wage": "1500.0",
                    "wage_type": "Fixed",
                    "wage_total": "1500.0"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: put-v1-contractor_payment_groups-contractor_payment_group_id-fund-Basic
    steps:
      - stepId: test
        operationId: put-v1-contractor_payment_groups-contractor_payment_group_id-fund
        parameters:
          - name: contractor_payment_group_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: put-v1-contractor_payment_groups-contractor_payment_group_id-fund-Resource
    steps:
      - stepId: test
        operationId: put-v1-contractor_payment_groups-contractor_payment_group_id-fund
        parameters:
          - name: contractor_payment_group_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: put-v1-contractor_payment_groups-contractor_payment_group_id-fund-Nested
    steps:
      - stepId: test
        operationId: put-v1-contractor_payment_groups-contractor_payment_group_id-fund
        parameters:
          - name: contractor_payment_group_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: contractorPaymentGroups
  - workflowId: get-v1-company-form-Example
    steps:
      - stepId: test
        operationId: get-v1-company-form
        parameters:
          - name: form_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
                "name": "company_direct_deposit",
                "title": "Direct Deposit Authorization",
                "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.",
                "draft": false,
                "requires_signing": true
              }
            type: simple
    x-speakeasy-test-group: companyForms
  - workflowId: get-v1-company-form-pdf-Example
    steps:
      - stepId: test
        operationId: get-v1-company-form-pdf
        parameters:
          - name: form_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
                "document_url": "https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020"
              }
            type: simple
    x-speakeasy-test-group: companyForms
  - workflowId: put-v1-company-form-sign-Example
    steps:
      - stepId: test
        operationId: put-v1-company-form-sign
        parameters:
          - name: form_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            signature_text: Jane Smith
            signed_by_ip_address: 192.168.0.1
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408",
                "name": "company_direct_deposit",
                "title": "Direct Deposit Authorization",
                "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.",
                "draft": false,
                "requires_signing": true
              }
            type: simple
    x-speakeasy-test-group: companyForms
  - workflowId: put-v1-company-form-sign-Basic
    steps:
      - stepId: test
        operationId: put-v1-company-form-sign
        parameters:
          - name: form_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: false
            signature_text: <value>
            signed_by_ip_address: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: companyForms
  - workflowId: put-v1-company-form-sign-Resource
    steps:
      - stepId: test
        operationId: put-v1-company-form-sign
        parameters:
          - name: form_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            signature_text: <value>
            signed_by_ip_address: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: companyForms
  - workflowId: put-v1-company-form-sign-Nested
    steps:
      - stepId: test
        operationId: put-v1-company-form-sign
        parameters:
          - name: form_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            signature_text: <value>
            signed_by_ip_address: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: companyForms
  - workflowId: get-v1-generated_documents-document_type-request_uuid-Example
    steps:
      - stepId: test
        operationId: get-v1-generated_documents-document_type-request_uuid
        parameters:
          - name: document_type
            in: path
            value: printable_payroll_checks
          - name: request_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20",
                "status": "succeeded",
                "document_urls": [
                  "https://document.url.com"
                ]
              }
            type: simple
    x-speakeasy-test-group: generatedDocuments
  - workflowId: post-companies-company_uuid-reports-Example
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-reports
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            columns:
              - employee_compensation_time_period
              - employee_social_security_tax
              - bank_account_account_number
            dismissed_end_date: "2024-04-01"
            dismissed_start_date: "2024-01-01"
            end_date: "2024-04-01"
            file_type: csv
            groupings:
              - work_address_state
            start_date: "2024-01-01"
            with_totals: false
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20",
                "company_uuid": "z83d0ca8-7d41-42a9-834y-7d218ef6cb20",
                "custom_name": "CustomReport",
                "file_type": "csv"
              }
            type: simple
    x-speakeasy-test-group: Reports
  - workflowId: post-companies-company_uuid-reports-Basic
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-reports
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            columns: []
            dismissed_end_date: "2024-04-01"
            dismissed_start_date: "2024-01-01"
            end_date: "2024-04-01"
            file_type: json
            groupings:
              - employee
            start_date: "2024-01-01"
            with_totals: false
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Reports
  - workflowId: post-companies-company_uuid-reports-Resource
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-reports
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            columns:
              - employee_taxes
              - check_date
            dismissed_end_date: "2024-04-01"
            dismissed_start_date: "2024-01-01"
            end_date: "2024-04-01"
            file_type: json
            groupings:
              - work_address
              - payroll
              - work_address
            start_date: "2024-01-01"
            with_totals: false
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Reports
  - workflowId: post-companies-company_uuid-reports-Nested
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-reports
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            columns: []
            dismissed_end_date: "2024-04-01"
            dismissed_start_date: "2024-01-01"
            end_date: "2024-04-01"
            file_type: csv
            groupings:
              - work_address_state
              - work_address
            start_date: "2024-01-01"
            with_totals: false
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Reports
  - workflowId: get-reports-report_uuid-Example
    steps:
      - stepId: test
        operationId: get-reports-report_uuid
        parameters:
          - name: report_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20",
                "status": "succeeded",
                "report_urls": [
                  "https://report.url.com"
                ]
              }
            type: simple
    x-speakeasy-test-group: Reports
  - workflowId: get-companies-company_uuid-report-templates-report_type-Example
    steps:
      - stepId: test
        operationId: get-companies-company_uuid-report-templates-report_type
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: report_type
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "columns": [
                  "regular_rate",
                  "regular_hours",
                  "regular_earnings"
                ],
                "groupings": [
                  "payroll",
                  "employee"
                ],
                "company_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20",
                "report_type": "payroll_journal"
              }
            type: simple
    x-speakeasy-test-group: Reports
  - workflowId: post-v1-companies-company_id-company_benefits-Example
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-company_benefits
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            description: yuck vice between gee ugh ha
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9",
                "benefit_type": 1,
                "active": true,
                "description": "Kaiser Permanente",
                "deletable": true,
                "supports_percentage_amounts": true,
                "responsible_for_employer_taxes": false,
                "responsible_for_employee_w2": false
              }
            type: simple
    x-speakeasy-test-group: companyBenefits
  - workflowId: post-v1-companies-company_id-company_benefits-Basic
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-company_benefits
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            description: bulky electronics through for ick superb nudge embalm simple ouch
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: companyBenefits
  - workflowId: post-v1-companies-company_id-company_benefits-Resource
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-company_benefits
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            description: yahoo until planula conceal pfft partially till distant zowie nasalise
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: companyBenefits
  - workflowId: post-v1-companies-company_id-company_benefits-Nested
    steps:
      - stepId: test
        operationId: post-v1-companies-company_id-company_benefits
        parameters:
          - name: company_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            description: down ha who political inside bony procurement funny entwine institute
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: companyBenefits
  - workflowId: get-v1-company_benefits-company_benefit_id-Example
    steps:
      - stepId: test
        operationId: get-v1-company_benefits-company_benefit_id
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9",
                "active": true,
                "description": "Kaiser Permanente",
                "deletable": true,
                "supports_percentage_amounts": true,
                "responsible_for_employer_taxes": false,
                "responsible_for_employee_w2": false,
                "employee_benefits": [
                  {
                    "employee_uuid": "ae44a0b2-3c89-41e1-91c8-5f8224a779ca",
                    "company_benefit_uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9",
                    "active": true,
                    "deduct_as_percentage": false,
                    "employee_deduction": "3",
                    "company_contribution": "0",
                    "uuid": "9988f241-9aee-4383-bfca-eac79cf58135",
                    "contribution": {
                      "type": "amount",
                      "value": {}
                    }
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: companyBenefits
  - workflowId: put-v1-company_benefits-company_benefit_id-Example
    steps:
      - stepId: test
        operationId: put-v1-company_benefits-company_benefit_id
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: false
            version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9",
                "benefit_type": 1,
                "active": true,
                "description": "Kaiser Permanente",
                "deletable": true,
                "supports_percentage_amounts": true,
                "responsible_for_employer_taxes": false,
                "responsible_for_employee_w2": false
              }
            type: simple
    x-speakeasy-test-group: companyBenefits
  - workflowId: put-v1-company_benefits-company_benefit_id-Basic
    steps:
      - stepId: test
        operationId: put-v1-company_benefits-company_benefit_id
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: companyBenefits
  - workflowId: put-v1-company_benefits-company_benefit_id-Resource
    steps:
      - stepId: test
        operationId: put-v1-company_benefits-company_benefit_id
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: companyBenefits
  - workflowId: put-v1-company_benefits-company_benefit_id-Nested
    steps:
      - stepId: test
        operationId: put-v1-company_benefits-company_benefit_id
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: companyBenefits
  - workflowId: delete-v1-company_benefits-company_benefit_id-Example
    steps:
      - stepId: test
        operationId: delete-v1-company_benefits-company_benefit_id
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: companyBenefits
  - workflowId: get-v1-benefits-Supported Benefits
    steps:
      - stepId: test
        operationId: get-v1-benefits
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "benefit_type": 1,
                  "name": "Medical Insurance",
                  "description": "Deductions and contributions for Medical Insurance",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": true,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Health"
                },
                {
                  "benefit_type": 2,
                  "name": "Dental Insurance",
                  "description": "Deductions and contributions for Dental Insurance",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": true,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Health"
                },
                {
                  "benefit_type": 3,
                  "name": "Vision Insurance",
                  "description": "Deductions and contributions for Vision Insurance",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": true,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Health"
                },
                {
                  "benefit_type": 6,
                  "name": "Health Savings Account",
                  "description": "Health Savings Accounts (HSA) allow employees to be reimbursed for qualified medical expenses. Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employees' HSA. Remaining balances are carried over in next year.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": true,
                  "category": "Health"
                },
                {
                  "benefit_type": 7,
                  "name": "Health FSA",
                  "description": "Flexible Spending Accounts (FSA) allow employees to be reimbursed for qualified medical expenses. Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employees' FSA. Remaining balances are not carried over in next year.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": true,
                  "category": "Health"
                },
                {
                  "benefit_type": 11,
                  "name": "Dependent Care FSA",
                  "description": "Dependent Care FSA reimburses employees for expenses to care for dependents while the employee is at work (e.g. Daycares). Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employee FSA. Remaining balances are not carried over to the next year. Single parents or Married couples filing a joint return can elect up to $5000 per year. Married couples filing separate returns are limited to $2500 elections each.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": true,
                  "category": "Health"
                },
                {
                  "benefit_type": 8,
                  "name": "SIMPLE IRA",
                  "description": "The SIMPLE IRA is a tax-deferred retirement savings plan for employees. It is often used by small businesses as an alternative to 401(k) due to its relatively low operating cost. Employers are required to contribute a specific percentage to an employee's SIMPLE IRA.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": true,
                  "yearly_limit": true,
                  "category": "Savings and Retirement"
                },
                {
                  "benefit_type": 105,
                  "name": "Roth 401(k)",
                  "description": "Roth 401(k) is an after-tax savings plan for employees. The standard maximum is $18,000, or $24,000 for employees over 50 years old.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": true,
                  "yearly_limit": true,
                  "category": "Savings and Retirement"
                },
                {
                  "benefit_type": 110,
                  "name": "Roth 403(b)",
                  "description": "Roth 403(b) is an after-tax savings plan for certain clerics, employees of public schools, and employees of other types of tax-exempt organizations. Contributions made by employees are taxable for federal and state withholding. Often, employers contribute additional pre-tax dollars to the employeeâ€™s Roth account to encourage saving for retirement.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": true,
                  "yearly_limit": true,
                  "category": "Savings and Retirement"
                },
                {
                  "benefit_type": 5,
                  "name": "401(k)",
                  "description": "401(k) is tax-deferred retirement savings plan for employees. The standard maximum is $18,000, or $24,000 for employees over 50 years old.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": true,
                  "yearly_limit": true,
                  "category": "Savings and Retirement"
                },
                {
                  "benefit_type": 9,
                  "name": "403(b)",
                  "description": "403(b) is tax-deferred retirement savings plan for certain clerics, employees of public schools, and employees of other types of tax-exempt organizations.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": true,
                  "yearly_limit": true,
                  "category": "Savings and Retirement"
                },
                {
                  "benefit_type": 108,
                  "name": "SEP-IRA",
                  "description": "A SEP-IRA is a pre-tax retirement savings plan where only the employer contributes. It is often used by small businesses as an alternative to 401(k) due to its relatively low operating cost. Employers are required to contribute the same percentage to all enrolled employees, with a maximum contribution of 25% of the employeeâ€™s compensation.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": true,
                  "yearly_limit": true,
                  "category": "Savings and Retirement"
                },
                {
                  "benefit_type": 109,
                  "name": "SARSEP",
                  "description": "A SARSEP is a pre-tax retirement savings plan used by small businesses as an alternative to 401(k) due to its relatively low operating cost. While new SARSEP plans are not available, there are still some companies that are grandfathered into the plan. Employers are required to contribute the same percentage to all enrolled employees, with a maximum contribution of 25% of the employeeâ€™s compensation.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": true,
                  "yearly_limit": true,
                  "category": "Savings and Retirement"
                },
                {
                  "benefit_type": 107,
                  "name": "Group-Term Life Insurance",
                  "description": "Group-Term Life Insurance for coverage in excess of $50,000 per employee is a taxable fringe benefit. See IRS Publication 15-B to determine the dollar value of the excess coverage.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": true,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Health"
                },
                {
                  "benefit_type": 10,
                  "name": "Commuter Benefits (pre-tax)",
                  "description": "Tax-free commuter benefits for transit, vanpooling, bicycling, and work-related parking costs. The annual maximum contribution for this pre-tax benefit is in the IRS publication 15-B.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Transportation"
                },
                {
                  "benefit_type": 106,
                  "name": "Personal Use of Company Car",
                  "description": "When an employee uses a company-owned car for personal matters, it is considered taxable benefit provided in-kind.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": true,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Transportation"
                },
                {
                  "benefit_type": 111,
                  "name": "529 College Savings",
                  "description": "529 College Savings is an after-tax savings plan for employees designed to encourage saving for future college costs. This benefit should be reported as a taxable benefit and will therefore be taxed.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": true,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Other"
                },
                {
                  "benefit_type": 112,
                  "name": "Student Loan Repayment",
                  "description": "Student Loan Repayment is an after-tax savings plan for employees to pay towards their outstanding student loans. An employee can choose to set aside after-tax dollars towards this benefit. These benefits should be reported as a taxable benefit and will therefore be taxed.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": true,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Other"
                },
                {
                  "benefit_type": 998,
                  "name": "Short Term Disability (post-tax)",
                  "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Health"
                },
                {
                  "benefit_type": 999,
                  "name": "Long Term Disability (post-tax)",
                  "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Health"
                },
                {
                  "benefit_type": 996,
                  "name": "Short Term Disability (pre-tax)",
                  "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Health"
                },
                {
                  "benefit_type": 997,
                  "name": "Long Term Disability (pre-tax)",
                  "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Health"
                },
                {
                  "benefit_type": 991,
                  "name": "Voluntary Short Term Disability (post-tax)",
                  "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Health"
                },
                {
                  "benefit_type": 992,
                  "name": "Voluntary Long Term Disability (post-tax)",
                  "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Health"
                },
                {
                  "benefit_type": 993,
                  "name": "Voluntary Life (post-tax)",
                  "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Health"
                },
                {
                  "benefit_type": 113,
                  "name": "Commuter Parking",
                  "description": "Tax-free commuter benefits allow employees to reduce their monthly commuting expenses for transit, carpooling, bicycling, and work-related parking costs. Please note that there is an annual maximum for this pre-tax benefit. The maximum dollar amount is found in IRS Publication 15-B.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Transportation"
                },
                {
                  "benefit_type": 114,
                  "name": "Commuter Transit",
                  "description": "Tax-free commuter benefits allow employees to reduce their monthly commuting expenses for transit, carpooling, bicycling, and work-related parking costs. Please note that there is an annual maximum for this pre-tax benefit. The maximum dollar amount is found in IRS Publication 15-B.",
                  "pretax": true,
                  "posttax": false,
                  "imputed": false,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Transportation"
                },
                {
                  "benefit_type": 100,
                  "name": "Other (taxable)",
                  "description": "Other taxable benefit",
                  "pretax": false,
                  "posttax": true,
                  "imputed": true,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Other"
                },
                {
                  "benefit_type": 201,
                  "name": "Cell Phone (taxable)",
                  "description": "Employer-sponsored benefits like this are called fringe benefits, and they donâ€™t get special tax treatmentâ€”theyâ€™ll be reported as taxable wages on your employeesâ€™ paystubs.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": true,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Transportation"
                },
                {
                  "benefit_type": 202,
                  "name": "Gym \u0026 Fitness (taxable)",
                  "description": "Employer-sponsored benefits like this are called fringe benefits, and they donâ€™t get special tax treatmentâ€”theyâ€™ll be reported as taxable wages on your employeesâ€™ paystubs.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": true,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Transportation"
                },
                {
                  "benefit_type": 203,
                  "name": "Housing (taxable)",
                  "description": "Employer-sponsored benefits like this are called fringe benefits, and they donâ€™t get special tax treatmentâ€”theyâ€™ll be reported as taxable wages on your employeesâ€™ paystubs.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": true,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Transportation"
                },
                {
                  "benefit_type": 204,
                  "name": "Wellness (taxable)",
                  "description": "Employer-sponsored benefits like this are called fringe benefits, and they donâ€™t get special tax treatmentâ€”theyâ€™ll be reported as taxable wages on your employeesâ€™ paystubs.",
                  "pretax": false,
                  "posttax": true,
                  "imputed": true,
                  "healthcare": false,
                  "retirement": false,
                  "yearly_limit": false,
                  "category": "Transportation"
                }
              ]
            type: simple
    x-speakeasy-test-group: companyBenefits
  - workflowId: get-v1-benefits-benefit_id-Example
    steps:
      - stepId: test
        operationId: get-v1-benefits-benefit_id
        parameters:
          - name: benefit_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "benefit_type": 1,
                "name": "Medical Insurance",
                "description": "Deductions and contributions for Medical Insurance",
                "pretax": true,
                "posttax": false,
                "imputed": false,
                "healthcare": true,
                "retirement": false,
                "yearly_limit": false
              }
            type: simple
    x-speakeasy-test-group: companyBenefits
  - workflowId: get-v1-benefits-company_benefit_id-summary-Example
    steps:
      - stepId: test
        operationId: get-v1-benefits-company_benefit_id-summary
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
          - name: start_date
            in: query
            value: "2022-01-01"
          - name: end_date
            in: query
            value: "2022-12-31"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "start_date": "2022-01-01",
                "end_date": "2022-12-31",
                "description": "Simple IRA",
                "company_benefit_deduction": "60.0",
                "company_benefit_contribution": "30.0"
              }
            type: simple
    x-speakeasy-test-group: companyBenefits
  - workflowId: get-v1-company_benefits-company_benefit_id-employee_benefits-Example
    steps:
      - stepId: test
        operationId: get-v1-company_benefits-company_benefit_id-employee_benefits
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "version": "09j3d29jqdpj92109j9j2d90dq",
                  "active": true,
                  "employee_deduction": "100.00",
                  "deduct_as_percentage": false,
                  "employee_deduction_annual_maximum": "200.00",
                  "elective": false,
                  "company_contribution_annual_maximum": "200.00",
                  "limit_option": null,
                  "catch_up": false,
                  "coverage_amount": null,
                  "deduction_reduces_taxable_income": null,
                  "coverage_salary_multiplier": "0.00",
                  "company_contribution": "100.00",
                  "contribute_as_percentage": false,
                  "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e",
                  "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                  "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"
                }
              ]
            type: simple
    x-speakeasy-test-group: companyBenefits
  - workflowId: put-v1-company_benefits-company_benefit_id-employee_benefits-Example
    steps:
      - stepId: test
        operationId: put-v1-company_benefits-company_benefit_id-employee_benefits
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employee_benefits:
              - active: true
                catch_up: false
                company_contribution: "0.00"
                contribute_as_percentage: false
                coverage_salary_multiplier: "0.00"
                deduct_as_percentage: false
                deduction_reduces_taxable_income: unset
                elective: false
                employee_deduction: "250.00"
                employee_uuid: 8f9f3f68-8fd3-499d-ade7-4a052e56494e
                version: 09j3d29jqdpj92109j9j2d90dq
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "version": "09j3d29jqdpj92109j9j2d90dq",
                  "active": true,
                  "employee_deduction": "100.00",
                  "deduct_as_percentage": false,
                  "employee_deduction_annual_maximum": "200.00",
                  "elective": false,
                  "company_contribution_annual_maximum": "200.00",
                  "limit_option": null,
                  "catch_up": false,
                  "coverage_amount": null,
                  "deduction_reduces_taxable_income": null,
                  "coverage_salary_multiplier": "0.00",
                  "company_contribution": "100.00",
                  "contribute_as_percentage": false,
                  "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e",
                  "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                  "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"
                }
              ]
            type: simple
    x-speakeasy-test-group: companyBenefits
  - workflowId: put-v1-company_benefits-company_benefit_id-employee_benefits-Basic
    steps:
      - stepId: test
        operationId: put-v1-company_benefits-company_benefit_id-employee_benefits
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employee_benefits: []
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: companyBenefits
  - workflowId: put-v1-company_benefits-company_benefit_id-employee_benefits-Resource
    steps:
      - stepId: test
        operationId: put-v1-company_benefits-company_benefit_id-employee_benefits
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employee_benefits:
              - active: true
                catch_up: false
                company_contribution: "0.00"
                contribute_as_percentage: false
                coverage_salary_multiplier: "0.00"
                deduct_as_percentage: false
                deduction_reduces_taxable_income: unset
                elective: false
                employee_deduction: "0.00"
                employee_uuid: <id>
              - active: true
                catch_up: false
                company_contribution: "0.00"
                contribute_as_percentage: false
                coverage_salary_multiplier: "0.00"
                deduct_as_percentage: false
                deduction_reduces_taxable_income: unset
                elective: false
                employee_deduction: "0.00"
                employee_uuid: <id>
              - active: true
                catch_up: false
                company_contribution: "0.00"
                contribute_as_percentage: false
                coverage_salary_multiplier: "0.00"
                deduct_as_percentage: false
                deduction_reduces_taxable_income: unset
                elective: false
                employee_deduction: "0.00"
                employee_uuid: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: companyBenefits
  - workflowId: put-v1-company_benefits-company_benefit_id-employee_benefits-Nested
    steps:
      - stepId: test
        operationId: put-v1-company_benefits-company_benefit_id-employee_benefits
        parameters:
          - name: company_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employee_benefits: []
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: companyBenefits
  - workflowId: get-v1-benefits-benefits_id-requirements-Example
    steps:
      - stepId: test
        operationId: get-v1-benefits-benefits_id-requirements
        parameters:
          - name: benefit_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "employee_deduction": {
                  "required": true,
                  "editable": true,
                  "choices": [
                    "\u003cvalue\u003e"
                  ]
                },
                "contribution": {
                  "required": true,
                  "editable": true,
                  "default_value": {
                    "value": "2",
                    "type": "percentage"
                  },
                  "choices": [
                    "percentage"
                  ]
                },
                "deduct_as_percentage": {
                  "required": true,
                  "editable": true,
                  "choices": [
                    "\u003cvalue\u003e",
                    "\u003cvalue\u003e",
                    "\u003cvalue\u003e"
                  ]
                },
                "catch_up": {
                  "required": true,
                  "editable": true,
                  "choices": [
                    "\u003cvalue\u003e"
                  ]
                },
                "limit_option": {
                  "required": false,
                  "editable": false,
                  "choices": [
                    "\u003cvalue\u003e"
                  ]
                },
                "company_contribution_annual_maximum": {
                  "required": false,
                  "editable": false,
                  "choices": [
                    "\u003cvalue\u003e",
                    "\u003cvalue\u003e"
                  ]
                },
                "coverage_salary_multiplier": {
                  "required": false,
                  "editable": false,
                  "choices": [
                    "\u003cvalue\u003e",
                    "\u003cvalue\u003e"
                  ]
                },
                "coverage_amount": {
                  "required": false,
                  "editable": false,
                  "choices": [
                    "\u003cvalue\u003e",
                    "\u003cvalue\u003e",
                    "\u003cvalue\u003e"
                  ]
                }
              }
            type: simple
    x-speakeasy-test-group: companyBenefits
  - workflowId: post-v1-employees-employee_id-employee_benefits-Example
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-employee_benefits
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            catch_up: false
            company_benefit_uuid: f68abb42-431e-4392-bc3f-2795627e00f3
            company_contribution: "0.00"
            contribute_as_percentage: false
            contribution:
              type: amount
              value: "100.00"
            coverage_salary_multiplier: "0.00"
            deduct_as_percentage: false
            elective: false
            employee_deduction: "100.00"
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "09j3d29jqdpj92109j9j2d90dq",
                "active": true,
                "employee_deduction": "100.00",
                "deduct_as_percentage": false,
                "employee_deduction_annual_maximum": "200.00",
                "contribution": {
                  "type": "amount",
                  "value": "100.00"
                },
                "elective": false,
                "company_contribution_annual_maximum": "200.00",
                "limit_option": null,
                "catch_up": false,
                "coverage_amount": null,
                "deduction_reduces_taxable_income": null,
                "coverage_salary_multiplier": "0.00",
                "company_contribution": "0.00",
                "contribute_as_percentage": false,
                "employee_uuid": "908123091820398",
                "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"
              }
            type: simple
    x-speakeasy-test-group: employeeBenefits
  - workflowId: post-v1-employees-employee_id-employee_benefits-Tiered example
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-employee_benefits
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            catch_up: false
            company_benefit_uuid: <id>
            company_contribution: "0.00"
            contribute_as_percentage: false
            coverage_salary_multiplier: "0.00"
            deduct_as_percentage: false
            elective: false
            employee_deduction: "0.00"
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "string",
                "active": true,
                "employee_deduction": "0.00",
                "deduct_as_percentage": false,
                "employee_deduction_annual_maximum": "string",
                "contribution": {
                  "type": "tiered",
                  "value": {
                    "tiers": [
                      {
                        "rate": "5.0",
                        "threshold": "2.0",
                        "threshold_delta": "2.0"
                      },
                      {
                        "rate": "3.0",
                        "threshold": "5.0",
                        "threshold_delta": "3.0"
                      }
                    ]
                  }
                },
                "elective": false,
                "company_contribution_annual_maximum": "string",
                "limit_option": "string",
                "catch_up": false,
                "coverage_amount": "string",
                "deduction_reduces_taxable_income": "unset",
                "coverage_salary_multiplier": "0.00",
                "company_contribution": "0.00",
                "contribute_as_percentage": false,
                "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e",
                "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"
              }
            type: simple
    x-speakeasy-test-group: employeeBenefits
  - workflowId: post-v1-employees-employee_id-employee_benefits-Basic
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-employee_benefits
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            catch_up: false
            company_benefit_uuid: <id>
            company_contribution: "0.00"
            contribute_as_percentage: false
            coverage_salary_multiplier: "0.00"
            deduct_as_percentage: false
            elective: false
            employee_deduction: "0.00"
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeeBenefits
  - workflowId: post-v1-employees-employee_id-employee_benefits-Resource
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-employee_benefits
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            catch_up: false
            company_benefit_uuid: <id>
            company_contribution: "0.00"
            contribute_as_percentage: false
            coverage_salary_multiplier: "0.00"
            deduct_as_percentage: false
            elective: false
            employee_deduction: "0.00"
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeeBenefits
  - workflowId: post-v1-employees-employee_id-employee_benefits-Nested
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-employee_benefits
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            catch_up: false
            company_benefit_uuid: <id>
            company_contribution: "0.00"
            contribute_as_percentage: false
            coverage_salary_multiplier: "0.00"
            deduct_as_percentage: false
            elective: false
            employee_deduction: "0.00"
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: employeeBenefits
  - workflowId: get-v1-employees-employee_id-employee_benefits-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-employee_benefits
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "version": "09j3d29jqdpj92109j9j2d90dq",
                  "active": true,
                  "employee_deduction": "100.00",
                  "deduct_as_percentage": false,
                  "employee_deduction_annual_maximum": "200.00",
                  "elective": false,
                  "company_contribution_annual_maximum": "200.00",
                  "limit_option": null,
                  "catch_up": false,
                  "coverage_amount": null,
                  "deduction_reduces_taxable_income": null,
                  "coverage_salary_multiplier": "0.00",
                  "company_contribution": "100.00",
                  "contribute_as_percentage": false,
                  "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e",
                  "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                  "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"
                }
              ]
            type: simple
    x-speakeasy-test-group: employeeBenefits
  - workflowId: get-v1-employee_benefits-employee_benefit_id-Example
    steps:
      - stepId: test
        operationId: get-v1-employee_benefits-employee_benefit_id
        parameters:
          - name: employee_benefit_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "09j3d29jqdpj92109j9j2d90dq",
                "active": true,
                "employee_deduction": "100.00",
                "deduct_as_percentage": false,
                "employee_deduction_annual_maximum": "200.00",
                "contribution": {
                  "type": "amount",
                  "value": "100.00"
                },
                "elective": false,
                "company_contribution_annual_maximum": "200.00",
                "limit_option": null,
                "catch_up": false,
                "coverage_amount": null,
                "deduction_reduces_taxable_income": null,
                "coverage_salary_multiplier": "0.00",
                "company_contribution": "0.00",
                "contribute_as_percentage": false,
                "employee_uuid": "908123091820398",
                "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"
              }
            type: simple
    x-speakeasy-test-group: employeeBenefits
  - workflowId: get-v1-employee_benefits-employee_benefit_id-Tiered example
    steps:
      - stepId: test
        operationId: get-v1-employee_benefits-employee_benefit_id
        parameters:
          - name: employee_benefit_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "string",
                "active": true,
                "employee_deduction": "0.00",
                "deduct_as_percentage": false,
                "employee_deduction_annual_maximum": "string",
                "contribution": {
                  "type": "tiered",
                  "value": {
                    "tiers": [
                      {
                        "rate": "5.0",
                        "threshold": "2.0",
                        "threshold_delta": "2.0"
                      },
                      {
                        "rate": "3.0",
                        "threshold": "5.0",
                        "threshold_delta": "3.0"
                      }
                    ]
                  }
                },
                "elective": false,
                "company_contribution_annual_maximum": "string",
                "limit_option": "string",
                "catch_up": false,
                "coverage_amount": "string",
                "deduction_reduces_taxable_income": "unset",
                "coverage_salary_multiplier": "0.00",
                "company_contribution": "0.00",
                "contribute_as_percentage": false,
                "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e",
                "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"
              }
            type: simple
    x-speakeasy-test-group: employeeBenefits
  - workflowId: put-v1-employee_benefits-employee_benefit_id-Example
    steps:
      - stepId: test
        operationId: put-v1-employee_benefits-employee_benefit_id
        parameters:
          - name: employee_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            catch_up: false
            company_contribution: "0.00"
            contribute_as_percentage: false
            coverage_salary_multiplier: "0.00"
            deduction_reduces_taxable_income: unset
            elective: false
            employee_deduction: "250.00"
            version: 09j3d29jqdpj92109j9j2d90dq
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "09j3d29jqdpj92109j9j2d90dq",
                "active": true,
                "employee_deduction": "100.00",
                "deduct_as_percentage": false,
                "employee_deduction_annual_maximum": "200.00",
                "contribution": {
                  "type": "amount",
                  "value": "100.00"
                },
                "elective": false,
                "company_contribution_annual_maximum": "200.00",
                "limit_option": null,
                "catch_up": false,
                "coverage_amount": null,
                "deduction_reduces_taxable_income": null,
                "coverage_salary_multiplier": "0.00",
                "company_contribution": "0.00",
                "contribute_as_percentage": false,
                "employee_uuid": "908123091820398",
                "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"
              }
            type: simple
    x-speakeasy-test-group: employeeBenefits
  - workflowId: put-v1-employee_benefits-employee_benefit_id-Tiered example
    steps:
      - stepId: test
        operationId: put-v1-employee_benefits-employee_benefit_id
        parameters:
          - name: employee_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            catch_up: false
            company_contribution: "0.00"
            contribute_as_percentage: false
            coverage_salary_multiplier: "0.00"
            deduction_reduces_taxable_income: unset
            elective: false
            employee_deduction: "0.00"
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "string",
                "active": true,
                "employee_deduction": "0.00",
                "deduct_as_percentage": false,
                "employee_deduction_annual_maximum": "string",
                "contribution": {
                  "type": "tiered",
                  "value": {
                    "tiers": [
                      {
                        "rate": "5.0",
                        "threshold": "2.0",
                        "threshold_delta": "2.0"
                      },
                      {
                        "rate": "3.0",
                        "threshold": "5.0",
                        "threshold_delta": "3.0"
                      }
                    ]
                  }
                },
                "elective": false,
                "company_contribution_annual_maximum": "string",
                "limit_option": "string",
                "catch_up": false,
                "coverage_amount": "string",
                "deduction_reduces_taxable_income": "unset",
                "coverage_salary_multiplier": "0.00",
                "company_contribution": "0.00",
                "contribute_as_percentage": false,
                "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e",
                "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"
              }
            type: simple
    x-speakeasy-test-group: employeeBenefits
  - workflowId: put-v1-employee_benefits-employee_benefit_id-Basic
    steps:
      - stepId: test
        operationId: put-v1-employee_benefits-employee_benefit_id
        parameters:
          - name: employee_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            catch_up: false
            company_contribution: "0.00"
            contribute_as_percentage: false
            coverage_salary_multiplier: "0.00"
            deduction_reduces_taxable_income: unset
            elective: false
            employee_deduction: "0.00"
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeBenefits
  - workflowId: put-v1-employee_benefits-employee_benefit_id-Resource
    steps:
      - stepId: test
        operationId: put-v1-employee_benefits-employee_benefit_id
        parameters:
          - name: employee_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            catch_up: false
            company_contribution: "0.00"
            contribute_as_percentage: false
            coverage_salary_multiplier: "0.00"
            deduction_reduces_taxable_income: unset
            elective: false
            employee_deduction: "0.00"
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeBenefits
  - workflowId: put-v1-employee_benefits-employee_benefit_id-Nested
    steps:
      - stepId: test
        operationId: put-v1-employee_benefits-employee_benefit_id
        parameters:
          - name: employee_benefit_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            catch_up: false
            company_contribution: "0.00"
            contribute_as_percentage: false
            coverage_salary_multiplier: "0.00"
            deduction_reduces_taxable_income: unset
            elective: false
            employee_deduction: "0.00"
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: employeeBenefits
  - workflowId: delete-v1-employee_benefits-employee_benefit_id
    steps:
      - stepId: test
        operationId: delete-v1-employee_benefits-employee_benefit_id
        parameters:
          - name: employee_benefit_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeBenefits
  - workflowId: post-employee-ytd-benefit-amounts-from-different-company-Basic
    steps:
      - stepId: test
        operationId: post-employee-ytd-benefit-amounts-from-different-company
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            tax_year: 2422.08
            ytd_company_contribution_amount: "0.00"
            ytd_employee_deduction_amount: "0.00"
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeBenefits
  - workflowId: post-employee-ytd-benefit-amounts-from-different-company-Resource
    steps:
      - stepId: test
        operationId: post-employee-ytd-benefit-amounts-from-different-company
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            tax_year: 3246.52
            ytd_company_contribution_amount: "0.00"
            ytd_employee_deduction_amount: "0.00"
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeBenefits
  - workflowId: post-employee-ytd-benefit-amounts-from-different-company-Nested
    steps:
      - stepId: test
        operationId: post-employee-ytd-benefit-amounts-from-different-company
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            tax_year: 9918.67
            ytd_company_contribution_amount: "0.00"
            ytd_employee_deduction_amount: "0.00"
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: employeeBenefits
  - workflowId: get-employee-ytd-benefit-amounts-from-different-company-Example
    steps:
      - stepId: test
        operationId: get-employee-ytd-benefit-amounts-from-different-company
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: tax_year
            in: query
            value: 2024
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d3",
                  "benefit_type": 1,
                  "ytd_employee_deduction_amount": "5000.00",
                  "ytd_company_contribution_amount": "2500.00"
                },
                {
                  "uuid": "1bfdb946-b2be-4909-ac46-9e7f73872d0a",
                  "benefit_type": 5,
                  "ytd_employee_deduction_amount": "2132.00",
                  "ytd_company_contribution_amount": "3345.00"
                }
              ]
            type: simple
    x-speakeasy-test-group: employeeBenefits
  - workflowId: post-v1-employees-employee_id-garnishments-Example
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-garnishments
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            amount: "150.00"
            annual_maximum: null
            court_ordered: true
            deduct_as_percentage: false
            description: Back taxes
            pay_period_maximum: null
            recurring: true
            times: null
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "0648730b-e81b-40fd-b400-179e824ec05f",
                "active": true,
                "times": null,
                "recurring": false,
                "annual_maximum": null,
                "pay_period_maximum": null,
                "deduct_as_percentage": false
              }
            type: simple
    x-speakeasy-test-group: Garnishments
  - workflowId: post-v1-employees-employee_id-garnishments-Child-Support-Example
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-garnishments
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            amount: "40"
            annual_maximum: null
            child_support:
              case_number: CS1234
              payment_period: Monthly
              state: FL
            court_ordered: true
            deduct_as_percentage: true
            garnishment_type: child_support
            pay_period_maximum: "500.00"
            recurring: true
            times: null
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "427b9e5b-95d2-4cfd-b063-45dff43ac8aa",
                "active": true,
                "times": null,
                "recurring": false,
                "annual_maximum": null,
                "pay_period_maximum": null,
                "deduct_as_percentage": false
              }
            type: simple
    x-speakeasy-test-group: Garnishments
  - workflowId: post-v1-employees-employee_id-garnishments-Basic
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-garnishments
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            amount: <value>
            annual_maximum: null
            court_ordered: true
            deduct_as_percentage: false
            pay_period_maximum: null
            recurring: false
            times: null
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Garnishments
  - workflowId: post-v1-employees-employee_id-garnishments-Resource
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-garnishments
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            amount: <value>
            annual_maximum: null
            court_ordered: false
            deduct_as_percentage: false
            pay_period_maximum: null
            recurring: false
            times: null
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Garnishments
  - workflowId: post-v1-employees-employee_id-garnishments-Nested
    steps:
      - stepId: test
        operationId: post-v1-employees-employee_id-garnishments
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            amount: <value>
            annual_maximum: null
            court_ordered: true
            deduct_as_percentage: false
            pay_period_maximum: null
            recurring: false
            times: null
        successCriteria:
          - condition: $statusCode == 201
    x-speakeasy-test-group: Garnishments
  - workflowId: get-v1-employees-employee_id-garnishments-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-garnishments
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "b888f774-3e7c-4135-a18c-6b985523c4bc",
                  "active": true,
                  "times": null,
                  "recurring": false,
                  "annual_maximum": null,
                  "pay_period_maximum": null,
                  "deduct_as_percentage": false
                },
                {
                  "uuid": "e50f7622-81da-484b-9c66-1c8a99c6b71b",
                  "active": true,
                  "times": null,
                  "recurring": false,
                  "annual_maximum": null,
                  "pay_period_maximum": null,
                  "deduct_as_percentage": false
                }
              ]
            type: simple
    x-speakeasy-test-group: Garnishments
  - workflowId: get-v1-garnishments-garnishment_id-Example
    steps:
      - stepId: test
        operationId: get-v1-garnishments-garnishment_id
        parameters:
          - name: garnishment_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "a1b1d4d7-9d85-4c0c-970a-7d2676a05c04",
                "active": true,
                "times": null,
                "recurring": false,
                "annual_maximum": null,
                "pay_period_maximum": null,
                "deduct_as_percentage": false
              }
            type: simple
    x-speakeasy-test-group: Garnishments
  - workflowId: get-v1-garnishments-garnishment_id-Child-Support-Example
    steps:
      - stepId: test
        operationId: get-v1-garnishments-garnishment_id
        parameters:
          - name: garnishment_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c70f28ce-90e2-4168-b683-1abb1a5f7f21",
                "active": true,
                "times": null,
                "recurring": false,
                "annual_maximum": null,
                "pay_period_maximum": null,
                "deduct_as_percentage": false
              }
            type: simple
    x-speakeasy-test-group: Garnishments
  - workflowId: put-v1-garnishments-garnishment_id-Example
    steps:
      - stepId: test
        operationId: put-v1-garnishments-garnishment_id
        parameters:
          - name: garnishment_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: false
            annual_maximum: null
            deduct_as_percentage: false
            pay_period_maximum: null
            recurring: false
            times: null
            version: 52b7c567242cb7452e89ba2bc02cb476
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "4c044b4e-cf94-4436-a3fb-eaf811f919f4",
                "active": true,
                "times": null,
                "recurring": false,
                "annual_maximum": null,
                "pay_period_maximum": null,
                "deduct_as_percentage": false
              }
            type: simple
    x-speakeasy-test-group: Garnishments
  - workflowId: put-v1-garnishments-garnishment_id-Child-Support-Example
    steps:
      - stepId: test
        operationId: put-v1-garnishments-garnishment_id
        parameters:
          - name: garnishment_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            annual_maximum: null
            deduct_as_percentage: false
            pay_period_maximum: null
            recurring: false
            times: null
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "b05be711-9e3f-4fc9-8067-cd32e9559970",
                "active": true,
                "times": null,
                "recurring": false,
                "annual_maximum": null,
                "pay_period_maximum": null,
                "deduct_as_percentage": false
              }
            type: simple
    x-speakeasy-test-group: Garnishments
  - workflowId: put-v1-garnishments-garnishment_id-Basic
    steps:
      - stepId: test
        operationId: put-v1-garnishments-garnishment_id
        parameters:
          - name: garnishment_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            annual_maximum: null
            deduct_as_percentage: false
            pay_period_maximum: null
            recurring: false
            times: null
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Garnishments
  - workflowId: put-v1-garnishments-garnishment_id-Resource
    steps:
      - stepId: test
        operationId: put-v1-garnishments-garnishment_id
        parameters:
          - name: garnishment_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            annual_maximum: null
            deduct_as_percentage: false
            pay_period_maximum: null
            recurring: false
            times: null
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Garnishments
  - workflowId: put-v1-garnishments-garnishment_id-Nested
    steps:
      - stepId: test
        operationId: put-v1-garnishments-garnishment_id
        parameters:
          - name: garnishment_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            active: true
            annual_maximum: null
            deduct_as_percentage: false
            pay_period_maximum: null
            recurring: false
            times: null
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Garnishments
  - workflowId: get-v1-garnishments-child_support-Example
    steps:
      - stepId: test
        operationId: get-v1-garnishments-child_support
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "$ref": "#/components/schemas/Child-Support-Data/x-examples/Example"
              }
            type: simple
    x-speakeasy-test-group: Garnishments
  - workflowId: get-v1-employees-employee_id-i9_authorization-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-i9_authorization
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "7fe28e4d-1e30-4ebb-8d22-aae768170b82",
                "version": "\u003cvalue\u003e",
                "authorization_status": "permanent_resident",
                "employer_signed": false,
                "employee_signed": false
              }
            type: simple
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-Example
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            authorization_status: citizen
            version: 52b7c567242cb7452e89ba2bc02cb476
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "4113bed5-50ae-4daa-a9a5-8a55ddb5a141",
                "version": "\u003cvalue\u003e",
                "authorization_status": "citizen",
                "employer_signed": false,
                "employee_signed": true
              }
            type: simple
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-Basic
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            authorization_status: noncitizen
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-Resource
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            authorization_status: alien
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-Nested
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            authorization_status: citizen
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: i9Verification
  - workflowId: get-v1-employees-employee_id-i9_authorization-document_options-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-i9_authorization-document_options
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "section": "A",
                  "description": "Foreign passport",
                  "document_type": "foreign_passport_w_i94",
                  "document_title": [
                    "Foreign passport"
                  ],
                  "common_choice": true
                },
                {
                  "section": "B",
                  "description": "Driverâ€™s license or state-issued ID card",
                  "document_type": "driver_license",
                  "document_title": [
                    "Driver's license",
                    "State ID card"
                  ],
                  "common_choice": true
                },
                {
                  "section": "C",
                  "description": "Social Security card",
                  "document_type": "ssn_card",
                  "document_title": [
                    "Social Security card"
                  ],
                  "common_choice": true
                }
              ]
            type: simple
    x-speakeasy-test-group: i9Verification
  - workflowId: get-v1-employees-employee_id-i9_authorization-documents-Example
    steps:
      - stepId: test
        operationId: get-v1-employees-employee_id-i9_authorization-documents
        parameters:
          - name: employee_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "7f2337f9-9b78-44b9-aeed-be4777b833a8",
                  "document_type": "driver_license",
                  "document_title": "Driver's license",
                  "expiration_date": "2027-01-01",
                  "issuing_authority": "USA"
                },
                {
                  "uuid": "9p2337f9-9b78-44b9-aeed-be4777b833a8",
                  "document_type": "ssn_card",
                  "document_title": "Social Security card",
                  "issuing_authority": "USA"
                }
              ]
            type: simple
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-documents-Example
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization-documents
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            documents:
              - document_number: F12345678
                document_title: US Passport
                document_type: us_passport
                expiration_date: "2026-01-01"
                issuing_authority: USA
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "7f2337f9-9b78-44b9-aeed-be4777b833a8",
                  "document_type": "driver_license",
                  "document_title": "Driver's license",
                  "expiration_date": "2027-01-01",
                  "issuing_authority": "USA"
                },
                {
                  "uuid": "9p2337f9-9b78-44b9-aeed-be4777b833a8",
                  "document_type": "ssn_card",
                  "document_title": "Social Security card",
                  "issuing_authority": "USA"
                }
              ]
            type: simple
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-documents-Basic
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization-documents
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            documents:
              - document_title: <value>
                document_type: <value>
                issuing_authority: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-documents-Resource
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization-documents
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            documents:
              - document_title: <value>
                document_type: <value>
                issuing_authority: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-documents-Nested
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization-documents
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            documents:
              - document_title: <value>
                document_type: <value>
                issuing_authority: <value>
              - document_title: <value>
                document_type: <value>
                issuing_authority: <value>
              - document_title: <value>
                document_type: <value>
                issuing_authority: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: i9Verification
  - workflowId: delete-v1-employees-employee_id-i9_authorization-documents-document_id
    steps:
      - stepId: test
        operationId: delete-v1-employees-employee_id-i9_authorization-documents-document_id
        parameters:
          - name: employee_id
            in: path
            value: <id>
          - name: document_id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-employer_sign-Example
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization-employer_sign
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: false
            signature_text: <value>
            signed_by_ip_address: <value>
            signer_title: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "ab18cec1-6568-4d93-b2ad-8deafd3f650c",
                "version": "\u003cvalue\u003e",
                "authorization_status": "alien",
                "employer_signed": true,
                "employee_signed": true
              }
            type: simple
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-employer_sign-Basic
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization-employer_sign
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            signature_text: <value>
            signed_by_ip_address: <value>
            signer_title: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-employer_sign-Resource
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization-employer_sign
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            signature_text: <value>
            signed_by_ip_address: <value>
            signer_title: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: i9Verification
  - workflowId: put-v1-employees-employee_id-i9_authorization-employer_sign-Nested
    steps:
      - stepId: test
        operationId: put-v1-employees-employee_id-i9_authorization-employer_sign
        parameters:
          - name: employee_id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            agree: true
            signature_text: <value>
            signed_by_ip_address: <value>
            signer_title: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: i9Verification
  - workflowId: get-v1-companies-company_uuid-tax_requirements-state-Example Tax Requirements for GA
    steps:
      - stepId: test
        operationId: get-v1-companies-company_uuid-tax_requirements-state
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: state
            in: path
            value: New Mexico
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "company_uuid": "6c14eac3-0da2-474d-bda1-786b3602d381",
                "state": "GA",
                "requirement_sets": [
                  {
                    "state": "GA",
                    "key": "registrations",
                    "label": "Registrations",
                    "effective_from": null,
                    "requirements": [
                      {
                        "key": "71653ec0-00b5-4c66-a58b-22ecf21704c5",
                        "applicable_if": [],
                        "label": "Withholding Number",
                        "description": "If you have run payroll in the past in GA, find your withholding number on notices received from the Georgia Department of Revenue, or call the agency at (877) 423-6711. If you donâ€™t have a number yet, you should \u003ca target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'\u003eregister the business online\u003c/a\u003e. The last two characters of your ID must be upper case letters.",
                        "value": "1233214-AB",
                        "metadata": {
                          "type": "text"
                        }
                      },
                      {
                        "key": "6c0911ab-5860-412e-bdef-6437cd881df5",
                        "applicable_if": [],
                        "label": "DOL Account Number",
                        "description": "If you have run payroll in the past in GA, find your DOL account number on notices received from the Georgia Department of Labor, or call the agency at (404) 232-3300. If you donâ€™t have an account number yet, please \u003ca target='_blank' data-bypass href='https://support.gusto.com/hc/en-us/articles/210139038#registerdol'\u003efollow the instructions here\u003c/a\u003e to register your business with the Georgia Dept. of Labor.",
                        "value": "474747-88",
                        "metadata": {
                          "type": "text"
                        }
                      }
                    ]
                  },
                  {
                    "state": "GA",
                    "key": "taxrates",
                    "label": "Tax Rates",
                    "effective_from": "2022-01-01",
                    "requirements": [
                      {
                        "key": "e0ac2284-8d30-4100-ae23-f85f9574868b",
                        "applicable_if": [],
                        "label": "Total Tax Rate",
                        "description": "Haven't received your assigned rate yet? \u003ca target='_blank' data-bypass href='https://support.gusto.com/article/106622236100000/State-unemployment-insurance-(SUI)-tax'\u003eFind the new employer rate\u003c/a\u003e and enter it here.",
                        "value": "0.05",
                        "metadata": {
                          "type": "tax_rate",
                          "validation": {
                            "type": "min_max",
                            "min": "0.0004",
                            "max": "0.081"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "state": "GA",
                    "key": "depositschedules",
                    "label": "Deposit Schedules",
                    "effective_from": "2022-01-01",
                    "requirements": [
                      {
                        "key": "6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c",
                        "applicable_if": [],
                        "label": "Deposit Schedule",
                        "description": "Georgia rejects payments made on the wrong schedule. GA employers receive their schedule on a registration verification letter after registering with the Georgia Dept. of Revenue. If you are unsure, call the agency at (877) 423-6711. If you did not register your business yet, please \u003ca target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#2'\u003eregister the business with the Georgia Dept. of Revenue\u003c/a\u003e.",
                        "value": "Semi-weekly",
                        "metadata": {
                          "type": "select",
                          "options": [
                            {
                              "label": "Semiweekly",
                              "value": "Semi-weekly"
                            },
                            {
                              "label": "Monthly",
                              "value": "Monthly"
                            },
                            {
                              "label": "Quarterly",
                              "value": "Quarterly"
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: taxRequirements
  - workflowId: put-v1-companies-company_uuid-tax_requirements-state-Example
    steps:
      - stepId: test
        operationId: put-v1-companies-company_uuid-tax_requirements-state
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: state
            in: path
            value: New Jersey
        requestBody:
          contentType: application/json
          payload:
            requirement_sets:
              - effective_from: null
                key: registrations
                requirements:
                  - key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
                    value: 1233214-AB
                  - key: 6c0911ab-5860-412e-bdef-6437cd881df5
                    value: 474747-22
                state: GA
              - effective_from: "2022-01-01"
                key: taxrates
                requirements:
                  - key: e0ac2284-8d30-4100-ae23-f85f9574868b
                    value: "0.05"
                state: GA
              - effective_from: "2022-01-01"
                key: depositschedules
                requirements:
                  - key: 6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c
                    value: Semi-weekly
                state: GA
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: taxRequirements
  - workflowId: put-v1-companies-company_uuid-tax_requirements-state-Basic
    steps:
      - stepId: test
        operationId: put-v1-companies-company_uuid-tax_requirements-state
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: state
            in: path
            value: West Virginia
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: taxRequirements
  - workflowId: put-v1-companies-company_uuid-tax_requirements-state-Resource
    steps:
      - stepId: test
        operationId: put-v1-companies-company_uuid-tax_requirements-state
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: state
            in: path
            value: Washington
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: taxRequirements
  - workflowId: put-v1-companies-company_uuid-tax_requirements-state-Nested
    steps:
      - stepId: test
        operationId: put-v1-companies-company_uuid-tax_requirements-state
        parameters:
          - name: company_uuid
            in: path
            value: <id>
          - name: state
            in: path
            value: Mississippi
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: taxRequirements
  - workflowId: get-v1-companies-company_uuid-tax_requirements-Company with requirements in CA and GA
    steps:
      - stepId: test
        operationId: get-v1-companies-company_uuid-tax_requirements
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "state": "CA",
                  "setup_complete": true
                },
                {
                  "state": "GA",
                  "setup_complete": false
                }
              ]
            type: simple
    x-speakeasy-test-group: taxRequirements
  - workflowId: get-companies-company_uuid-holiday_pay_policy-Example
    steps:
      - stepId: test
        operationId: get-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "1b37938b017c7fd7116bada007072290",
                "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea",
                "federal_holidays": [
                  {
                    "new_years_day": {
                      "selected": false,
                      "name": "New Year's Day",
                      "date": "January 1"
                    },
                    "mlk_day": {
                      "selected": true,
                      "name": "Martin Luther King, Jr. Day",
                      "date": "Third Monday in January"
                    },
                    "presidents_day": {
                      "selected": false,
                      "name": "Presidents' Day",
                      "date": "Third Monday in February"
                    },
                    "memorial_day": {
                      "selected": true,
                      "name": "Memorial Day",
                      "date": "Last Monday in May"
                    },
                    "juneteenth": {
                      "selected": false,
                      "name": "Juneteenth",
                      "date": "June 19"
                    },
                    "independence_day": {
                      "selected": true,
                      "name": "Independence Day",
                      "date": "July 4"
                    },
                    "labor_day": {
                      "selected": false,
                      "name": "Labor Day",
                      "date": "First Monday in September"
                    },
                    "columbus_day": {
                      "selected": false,
                      "name": "Columbus Day (Indigenous Peoples' Day)",
                      "date": "Second Monday in October"
                    },
                    "veterans_day": {
                      "selected": true,
                      "name": "Veterans Day",
                      "date": "November 11"
                    },
                    "thanksgiving": {
                      "selected": true,
                      "name": "Thanksgiving",
                      "date": "Fourth Thursday in November"
                    }
                  }
                ],
                "employees": [
                  {
                    "uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: post-companies-company_uuid-holiday_pay_policy-Example
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            federal_holidays:
              christmas_day:
                selected: true
              independence_day:
                selected: true
              memorial_day:
                selected: true
              mlk_day:
                selected: true
              thanksgiving:
                selected: true
              veterans_day:
                selected: true
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "1b37938b017c7fd7116bada007072290",
                "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea",
                "federal_holidays": [
                  {
                    "new_years_day": {
                      "selected": false,
                      "name": "New Year's Day",
                      "date": "January 1"
                    },
                    "mlk_day": {
                      "selected": true,
                      "name": "Martin Luther King, Jr. Day",
                      "date": "Third Monday in January"
                    },
                    "presidents_day": {
                      "selected": false,
                      "name": "Presidents' Day",
                      "date": "Third Monday in February"
                    },
                    "memorial_day": {
                      "selected": true,
                      "name": "Memorial Day",
                      "date": "Last Monday in May"
                    },
                    "juneteenth": {
                      "selected": false,
                      "name": "Juneteenth",
                      "date": "June 19"
                    },
                    "independence_day": {
                      "selected": true,
                      "name": "Independence Day",
                      "date": "July 4"
                    },
                    "labor_day": {
                      "selected": false,
                      "name": "Labor Day",
                      "date": "First Monday in September"
                    },
                    "columbus_day": {
                      "selected": false,
                      "name": "Columbus Day (Indigenous Peoples' Day)",
                      "date": "Second Monday in October"
                    },
                    "veterans_day": {
                      "selected": true,
                      "name": "Veterans Day",
                      "date": "November 11"
                    },
                    "thanksgiving": {
                      "selected": true,
                      "name": "Thanksgiving",
                      "date": "Fourth Thursday in November"
                    }
                  }
                ],
                "employees": [
                  {
                    "uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: post-companies-company_uuid-holiday_pay_policy-Basic
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: post-companies-company_uuid-holiday_pay_policy-Resource
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: post-companies-company_uuid-holiday_pay_policy-Nested
    steps:
      - stepId: test
        operationId: post-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload: {}
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-Example
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            federal_holidays:
              christmas_day:
                selected: true
              independence_day:
                selected: true
              memorial_day:
                selected: true
              mlk_day:
                selected: true
              thanksgiving:
                selected: true
              veterans_day:
                selected: true
            version: 1b37938b017c7fd7116bada007072290
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "1b37938b017c7fd7116bada007072290",
                "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea",
                "federal_holidays": [
                  {
                    "new_years_day": {
                      "selected": false,
                      "name": "New Year's Day",
                      "date": "January 1"
                    },
                    "mlk_day": {
                      "selected": true,
                      "name": "Martin Luther King, Jr. Day",
                      "date": "Third Monday in January"
                    },
                    "presidents_day": {
                      "selected": false,
                      "name": "Presidents' Day",
                      "date": "Third Monday in February"
                    },
                    "memorial_day": {
                      "selected": true,
                      "name": "Memorial Day",
                      "date": "Last Monday in May"
                    },
                    "juneteenth": {
                      "selected": false,
                      "name": "Juneteenth",
                      "date": "June 19"
                    },
                    "independence_day": {
                      "selected": true,
                      "name": "Independence Day",
                      "date": "July 4"
                    },
                    "labor_day": {
                      "selected": false,
                      "name": "Labor Day",
                      "date": "First Monday in September"
                    },
                    "columbus_day": {
                      "selected": false,
                      "name": "Columbus Day (Indigenous Peoples' Day)",
                      "date": "Second Monday in October"
                    },
                    "veterans_day": {
                      "selected": true,
                      "name": "Veterans Day",
                      "date": "November 11"
                    },
                    "thanksgiving": {
                      "selected": true,
                      "name": "Thanksgiving",
                      "date": "Fourth Thursday in November"
                    }
                  }
                ],
                "employees": [
                  {
                    "uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-Basic
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-Resource
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-Nested
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: delete-companies-company_uuid-holiday_pay_policy-Basic
    steps:
      - stepId: test
        operationId: delete-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: delete-companies-company_uuid-holiday_pay_policy-Resource
    steps:
      - stepId: test
        operationId: delete-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: delete-companies-company_uuid-holiday_pay_policy-Nested
    steps:
      - stepId: test
        operationId: delete-companies-company_uuid-holiday_pay_policy
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-add-Example
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy-add
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employees:
              - uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
              - uuid: fe977550-6621-4cfc-b4af-60b6af58c8ef
            version: 1b37938b017c7fd7116bada007072290
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "1b37938b017c7fd7116bada007072290",
                "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea",
                "federal_holidays": [
                  {
                    "new_years_day": {
                      "selected": false,
                      "name": "New Year's Day",
                      "date": "January 1"
                    },
                    "mlk_day": {
                      "selected": true,
                      "name": "Martin Luther King, Jr. Day",
                      "date": "Third Monday in January"
                    },
                    "presidents_day": {
                      "selected": false,
                      "name": "Presidents' Day",
                      "date": "Third Monday in February"
                    },
                    "memorial_day": {
                      "selected": true,
                      "name": "Memorial Day",
                      "date": "Last Monday in May"
                    },
                    "juneteenth": {
                      "selected": false,
                      "name": "Juneteenth",
                      "date": "June 19"
                    },
                    "independence_day": {
                      "selected": true,
                      "name": "Independence Day",
                      "date": "July 4"
                    },
                    "labor_day": {
                      "selected": false,
                      "name": "Labor Day",
                      "date": "First Monday in September"
                    },
                    "columbus_day": {
                      "selected": false,
                      "name": "Columbus Day (Indigenous Peoples' Day)",
                      "date": "Second Monday in October"
                    },
                    "veterans_day": {
                      "selected": true,
                      "name": "Veterans Day",
                      "date": "November 11"
                    },
                    "thanksgiving": {
                      "selected": true,
                      "name": "Thanksgiving",
                      "date": "Fourth Thursday in November"
                    }
                  }
                ],
                "employees": [
                  {
                    "uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-add-Basic
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy-add
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-add-Resource
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy-add
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-add-Nested
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy-add
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-remove-Example
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy-remove
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            employees:
              - uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
              - uuid: fe977550-6621-4cfc-b4af-60b6af58c8ef
            version: 1b37938b017c7fd7116bada007072290
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "version": "1b37938b017c7fd7116bada007072290",
                "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea",
                "federal_holidays": [
                  {
                    "new_years_day": {
                      "selected": false,
                      "name": "New Year's Day",
                      "date": "January 1"
                    },
                    "mlk_day": {
                      "selected": true,
                      "name": "Martin Luther King, Jr. Day",
                      "date": "Third Monday in January"
                    },
                    "presidents_day": {
                      "selected": false,
                      "name": "Presidents' Day",
                      "date": "Third Monday in February"
                    },
                    "memorial_day": {
                      "selected": true,
                      "name": "Memorial Day",
                      "date": "Last Monday in May"
                    },
                    "juneteenth": {
                      "selected": false,
                      "name": "Juneteenth",
                      "date": "June 19"
                    },
                    "independence_day": {
                      "selected": true,
                      "name": "Independence Day",
                      "date": "July 4"
                    },
                    "labor_day": {
                      "selected": false,
                      "name": "Labor Day",
                      "date": "First Monday in September"
                    },
                    "columbus_day": {
                      "selected": false,
                      "name": "Columbus Day (Indigenous Peoples' Day)",
                      "date": "Second Monday in October"
                    },
                    "veterans_day": {
                      "selected": true,
                      "name": "Veterans Day",
                      "date": "November 11"
                    },
                    "thanksgiving": {
                      "selected": true,
                      "name": "Thanksgiving",
                      "date": "Fourth Thursday in November"
                    }
                  }
                ],
                "employees": [
                  {
                    "uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-remove-Basic
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy-remove
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-remove-Resource
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy-remove
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: put-companies-company_uuid-holiday_pay_policy-remove-Nested
    steps:
      - stepId: test
        operationId: put-companies-company_uuid-holiday_pay_policy-remove
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            version: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: holidayPayPolicies
  - workflowId: get-notifications-notification_uuid-Example
    steps:
      - stepId: test
        operationId: get-notifications-notification_uuid
        parameters:
          - name: notification_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "7b1d0df1-6403-4a06-8768-c1dd7d24d27a",
                "company_uuid": "88f7cca1-dcad-4d20-84db-7fb80303d69f",
                "title": "Action required: Additional information needed to process payroll",
                "message": "If we do not receive this information as soon as possible, your payroll may not be processed on time.",
                "category": "information_request",
                "actionable": true,
                "published_at": "2022-01-01T00:00:00.000Z",
                "due_at": "2022-02-01T00:00:00.000Z",
                "resources": [
                  {
                    "entity_type": "Employee",
                    "entity_uuid": "21b6f9ce-0ac4-4745-8d8a-127f8c0f00f2"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: Notifications
  - workflowId: get-notifications-notification_uuid-Basic
    steps:
      - stepId: test
        operationId: get-notifications-notification_uuid
        parameters:
          - name: notification_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Notifications
  - workflowId: get-notifications-notification_uuid-Resource
    steps:
      - stepId: test
        operationId: get-notifications-notification_uuid
        parameters:
          - name: notification_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Notifications
  - workflowId: get-notifications-notification_uuid-Nested
    steps:
      - stepId: test
        operationId: get-notifications-notification_uuid
        parameters:
          - name: notification_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: Notifications
  - workflowId: get-events-Example
    steps:
      - stepId: test
        operationId: get-events
        parameters:
          - name: sort_order
            in: query
            value: asc
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "f7397a24-57ad-4fae-b011-d258e8232900",
                  "event_type": "employee.bank_account.created",
                  "resource_type": "Company",
                  "resource_uuid": "92a20431-9489-4bde-ad27-6feb20b969d5",
                  "entity_type": "BankAccount",
                  "entity_uuid": "92a20431-9489-4bde-ad27-6feb20b969d5",
                  "timestamp": 1686784995
                }
              ]
            type: simple
    x-speakeasy-test-group: Events
  - workflowId: get-recovery-cases-Example
    steps:
      - stepId: test
        operationId: get-recovery-cases
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "e83d273e-4ae9-4b61-9c71-4030c2f73093",
                  "company_uuid": "c5e3e3e9-732f-4762-849e-20b5cec9036f",
                  "status": "open",
                  "latest_error_code": "R01",
                  "original_debit_date": "2023-10-11T00:00:00Z",
                  "check_date": "2023-10-13T00:00:00Z",
                  "payroll_uuid": "210f2034-fb4a-4059-b109-6c3b5efe499d",
                  "contractor_payment_uuids": [
                    "\u003cvalue\u003e",
                    "\u003cvalue\u003e"
                  ],
                  "amount_outstanding": "10499.43",
                  "event_total_amount": "5912.07"
                }
              ]
            type: simple
    x-speakeasy-test-group: recoveryCases
  - workflowId: redebit-recovery-case-Basic
    steps:
      - stepId: test
        operationId: redebit-recovery-case
        parameters:
          - name: recovery_case_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
    x-speakeasy-test-group: recoveryCases
  - workflowId: redebit-recovery-case-Resource
    steps:
      - stepId: test
        operationId: redebit-recovery-case
        parameters:
          - name: recovery_case_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
    x-speakeasy-test-group: recoveryCases
  - workflowId: redebit-recovery-case-Nested
    steps:
      - stepId: test
        operationId: redebit-recovery-case
        parameters:
          - name: recovery_case_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 202
    x-speakeasy-test-group: recoveryCases
  - workflowId: get-ach-transactions-Example
    steps:
      - stepId: test
        operationId: get-ach-transactions
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "123e4567-e89b-12d3-a456-426655440000",
                  "company_uuid": "456e7890-e12b-34c5-d678-901234567890",
                  "payment_event_type": "Payroll",
                  "payment_event_uuid": "789e0123-e45f-67ab-c890-123456789012",
                  "recipient_type": "Employee",
                  "recipient_uuid": "012e3456-f78d-90ab-12cd-345678901234",
                  "error_code": "\u003cvalue\u003e",
                  "transaction_type": "Credit employee pay",
                  "payment_status": "submitted",
                  "payment_direction": "credit",
                  "payment_event_check_date": "2023-10-02T00:00:00Z",
                  "payment_date": "2023-10-17T00:00:00Z",
                  "amount": "123.00",
                  "description": "PAY 380654"
                }
              ]
            type: simple
    x-speakeasy-test-group: achTransactions
  - workflowId: get-wire_in_requests-wire_in_request_uuid-example
    steps:
      - stepId: test
        operationId: get-wire_in_requests-wire_in_request_uuid
        parameters:
          - name: wire_in_request_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                "status": "awaiting_funds",
                "origination_bank": "JP Morgan Chase",
                "origination_bank_address": "1 Chase Plaza, New York, NY 10081",
                "recipient_name": "Gusto, Inc",
                "recipient_address": "525 20th Street, San Francisco, CA 94107",
                "recipient_account_number": "21911761",
                "recipient_routing_number": "123454321",
                "additional_notes": "Additional Notes",
                "bank_name": "JP Morgan Chase",
                "date_sent": "2024-06-10T00:00:00Z",
                "unique_tracking_code": "1trvxwxp57zf",
                "payment_type": "Payroll",
                "payment_uuid": "payroll",
                "amount_sent": "1014500.00",
                "requested_amount": "1014500.00",
                "wire_in_deadline": "2024-06-21T18:00:00Z"
              }
            type: simple
    x-speakeasy-test-group: wireInRequests
  - workflowId: put-wire_in_requests-wire_in_request_uuid-Example
    steps:
      - stepId: test
        operationId: put-wire_in_requests-wire_in_request_uuid
        parameters:
          - name: wire_in_request_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            additional_notes: Wire for 2024-06-15 payroll.
            amount_sent: "314500"
            bank_name: Chase
            date_sent: "2024-06-10T00:00:00Z"
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: wireInRequests
  - workflowId: put-wire_in_requests-wire_in_request_uuid-example
    steps:
      - stepId: test
        operationId: put-wire_in_requests-wire_in_request_uuid
        parameters:
          - name: wire_in_request_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            amount_sent: <value>
            bank_name: <value>
            date_sent: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                "status": "awaiting_funds",
                "origination_bank": "JP Morgan Chase",
                "origination_bank_address": "1 Chase Plaza, New York, NY 10081",
                "recipient_name": "Gusto, Inc",
                "recipient_address": "525 20th Street, San Francisco, CA 94107",
                "recipient_account_number": "21911761",
                "recipient_routing_number": "123454321",
                "additional_notes": "Additional Notes",
                "bank_name": "JP Morgan Chase",
                "date_sent": "2024-06-10T00:00:00Z",
                "unique_tracking_code": "1trvxwxp57zf",
                "payment_type": "Payroll",
                "payment_uuid": "payroll",
                "amount_sent": "1014500.00",
                "requested_amount": "1014500.00",
                "wire_in_deadline": "2024-06-21T18:00:00Z"
              }
            type: simple
    x-speakeasy-test-group: wireInRequests
  - workflowId: put-wire_in_requests-wire_in_request_uuid-Basic
    steps:
      - stepId: test
        operationId: put-wire_in_requests-wire_in_request_uuid
        parameters:
          - name: wire_in_request_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            amount_sent: <value>
            bank_name: <value>
            date_sent: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: wireInRequests
  - workflowId: put-wire_in_requests-wire_in_request_uuid-Resource
    steps:
      - stepId: test
        operationId: put-wire_in_requests-wire_in_request_uuid
        parameters:
          - name: wire_in_request_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            amount_sent: <value>
            bank_name: <value>
            date_sent: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: wireInRequests
  - workflowId: put-wire_in_requests-wire_in_request_uuid-Nested
    steps:
      - stepId: test
        operationId: put-wire_in_requests-wire_in_request_uuid
        parameters:
          - name: wire_in_request_uuid
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            amount_sent: <value>
            bank_name: <value>
            date_sent: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: wireInRequests
  - workflowId: get-companies-company_uuid-wire_in_request_uuid-Example
    steps:
      - stepId: test
        operationId: get-companies-company_uuid-wire_in_request_uuid
        parameters:
          - name: company_uuid
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              [
                {
                  "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                  "status": "approved",
                  "origination_bank": "JP Morgan Chase",
                  "origination_bank_address": "1 Chase Plaza, New York, NY 10081",
                  "recipient_name": "Gusto, Inc",
                  "recipient_address": "525 20th Street, San Francisco, CA 94107",
                  "recipient_account_number": "21911761",
                  "recipient_routing_number": "5773243",
                  "additional_notes": "Additional Notes",
                  "bank_name": "Chase",
                  "date_sent": "2024-06-10T00:00:00Z",
                  "unique_tracking_code": "1trvxwxp57zf",
                  "payment_type": "Payroll,",
                  "payment_uuid": "payroll",
                  "amount_sent": "1054693.52",
                  "requested_amount": "1054693.52",
                  "wire_in_deadline": "2024-06-21T18:00:00Z"
                }
              ]
            type: simple
    x-speakeasy-test-group: wireInRequests
