lockVersion: 2.0.0
id: f0264e24-cbe2-4074-b157-7a6ba8979508
management:
  docChecksum: 85047f82d4022f91538c1827b830f0b1
  docVersion: "2024-04-01"
  speakeasyVersion: 1.523.2
  generationVersion: 2.560.1
  releaseVersion: 0.5.5
  configChecksum: 0ef4910f3343204da0a3500188984b90
  repoURL: https://github.com/Gusto/gusto-typescript-client.git
  repoSubDirectory: gusto_embedded
  installationURL: https://gitpkg.now.sh/Gusto/gusto-typescript-client/gusto_embedded
  published: true
features:
  typescript:
    additionalDependencies: 0.1.0
    additionalProperties: 0.1.1
    constsAndDefaults: 0.1.11
    core: 3.21.4
    defaultEnabledRetries: 0.1.0
    deprecations: 2.81.1
    devContainers: 2.90.0
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.2
    errorUnions: 0.1.1
    globalSecurity: 2.82.13
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.4
    groups: 2.81.2
    inputOutputModels: 2.82.0
    methodSecurity: 2.82.6
    nameOverrides: 2.81.2
    nullables: 0.1.1
    reactQueryHooks: 0.2.3
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.2.0
    serverIDs: 2.81.2
    unions: 2.85.8
    uploadStreams: 0.1.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .npmignore
  - FUNCTIONS.md
  - REACT_QUERY.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/components/accounttype.md
  - docs/models/components/accruingtimeoffhour.md
  - docs/models/components/accruingtimeoffhourobject.md
  - docs/models/components/achtransaction.md
  - docs/models/components/achtransactionrecipienttype.md
  - docs/models/components/activecompanies.md
  - docs/models/components/address.md
  - docs/models/components/admin.md
  - docs/models/components/agencies.md
  - docs/models/components/applicablebenefits.md
  - docs/models/components/applicableearnings.md
  - docs/models/components/applicableif.md
  - docs/models/components/applicabletaxes.md
  - docs/models/components/authentication.md
  - docs/models/components/authorizationstatus.md
  - docs/models/components/benefits.md
  - docs/models/components/benefitsummary.md
  - docs/models/components/benefitsummaryemployees.md
  - docs/models/components/benefitsummarypayperiod.md
  - docs/models/components/benefittyperequirements.md
  - docs/models/components/benefittyperequirementscatchupdefaultvalue.md
  - docs/models/components/benefittyperequirementscompanycontributionannualmaximumdefaultvalue.md
  - docs/models/components/benefittyperequirementscontribution.md
  - docs/models/components/benefittyperequirementscoverageamountdefaultvalue.md
  - docs/models/components/benefittyperequirementscoveragesalarymultiplierdefaultvalue.md
  - docs/models/components/benefittyperequirementsdeductaspercentagedefaultvalue.md
  - docs/models/components/benefittyperequirementsdefaultvalue.md
  - docs/models/components/benefittyperequirementslimitoptiondefaultvalue.md
  - docs/models/components/catchup.md
  - docs/models/components/category.md
  - docs/models/components/childsupportdata.md
  - docs/models/components/columbusday.md
  - docs/models/components/company.md
  - docs/models/components/companyaddress.md
  - docs/models/components/companyattachment.md
  - docs/models/components/companybankaccount.md
  - docs/models/components/companybenefit.md
  - docs/models/components/companybenefitwithemployeebenefits.md
  - docs/models/components/companybenefitwithemployeebenefitscontribution.md
  - docs/models/components/companybenefitwithemployeebenefitsvalue.md
  - docs/models/components/companybenefitwithemployeebenefitsvalue2.md
  - docs/models/components/companybenefitwithemployeebenefitsvaluetiers.md
  - docs/models/components/companycontributionannualmaximum.md
  - docs/models/components/companycustomfield.md
  - docs/models/components/companycustomfieldlist.md
  - docs/models/components/companyhomeaddress.md
  - docs/models/components/companyonboardingstatus.md
  - docs/models/components/companypaidtimeoff.md
  - docs/models/components/companystatus.md
  - docs/models/components/companysuspension.md
  - docs/models/components/compensation.md
  - docs/models/components/compensations.md
  - docs/models/components/contractor.md
  - docs/models/components/contractoraddress.md
  - docs/models/components/contractorbankaccount.md
  - docs/models/components/contractorbankaccountaccounttype.md
  - docs/models/components/contractoronboardingstatus.md
  - docs/models/components/contractoronboardingstatus1.md
  - docs/models/components/contractoronboardingstatusonboardingstatus.md
  - docs/models/components/contractoronboardingstatusonboardingstep.md
  - docs/models/components/contractorpayment.md
  - docs/models/components/contractorpaymentforgroup.md
  - docs/models/components/contractorpaymentforgrouppaymentmethod.md
  - docs/models/components/contractorpaymentforgroupstatus.md
  - docs/models/components/contractorpaymentforgroupwagetype.md
  - docs/models/components/contractorpaymentgroup.md
  - docs/models/components/contractorpaymentgroupminimal.md
  - docs/models/components/contractorpaymentgroupminimalstatus.md
  - docs/models/components/contractorpaymentgroupminimaltotals.md
  - docs/models/components/contractorpaymentgroupstatus.md
  - docs/models/components/contractorpaymentgrouptotals.md
  - docs/models/components/contractorpaymentmethod.md
  - docs/models/components/contractorpaymentmethod1.md
  - docs/models/components/contractorpaymentmethodsplitby.md
  - docs/models/components/contractorpaymentmethodtype.md
  - docs/models/components/contractorpaymentpaymentmethod.md
  - docs/models/components/contractorpaymentreceipt.md
  - docs/models/components/contractorpaymentreceiptlicensee.md
  - docs/models/components/contractorpaymentreceipttotals.md
  - docs/models/components/contractorpayments.md
  - docs/models/components/contractorpaymentstatus.md
  - docs/models/components/contractorpaymentsummary.md
  - docs/models/components/contractorpaymentsummarybydates.md
  - docs/models/components/contractorpaymentsummarybydatescontractorpayments.md
  - docs/models/components/contractorpaymentsummarybydatestotal.md
  - docs/models/components/contractorpaymentsummarycontractorpayments.md
  - docs/models/components/contractorpaymentwagetype.md
  - docs/models/components/contractors.md
  - docs/models/components/contractortype.md
  - docs/models/components/contribution.md
  - docs/models/components/coverageamount.md
  - docs/models/components/coveragesalarymultiplier.md
  - docs/models/components/createreport.md
  - docs/models/components/currentemploymentstatus.md
  - docs/models/components/customfieldtype.md
  - docs/models/components/deductaspercentage.md
  - docs/models/components/deductionreducestaxableincome.md
  - docs/models/components/deductions.md
  - docs/models/components/defaultvalue.md
  - docs/models/components/department.md
  - docs/models/components/departmentemployees.md
  - docs/models/components/departments.md
  - docs/models/components/document.md
  - docs/models/components/documentpdf.md
  - docs/models/components/documentsigned.md
  - docs/models/components/documentsignedrecipienttype.md
  - docs/models/components/documenttype.md
  - docs/models/components/earnings.md
  - docs/models/components/earningtype.md
  - docs/models/components/earningtypelist.md
  - docs/models/components/employee.md
  - docs/models/components/employeeaddress.md
  - docs/models/components/employeebankaccount.md
  - docs/models/components/employeebankaccountaccounttype.md
  - docs/models/components/employeebenefit.md
  - docs/models/components/employeebenefitforcompanybenefit.md
  - docs/models/components/employeebenefitforcompanybenefitcontribution.md
  - docs/models/components/employeebenefitforcompanybenefitdeductionreducestaxableincome.md
  - docs/models/components/employeebenefitforcompanybenefitvalue.md
  - docs/models/components/employeebenefits.md
  - docs/models/components/employeebenefitvalue.md
  - docs/models/components/employeechecknumbermapping.md
  - docs/models/components/employeecompensations.md
  - docs/models/components/employeecustomfield.md
  - docs/models/components/employeededuction.md
  - docs/models/components/employeefederaltax.md
  - docs/models/components/employeeonboardingdocument.md
  - docs/models/components/employeeonboardingstatus.md
  - docs/models/components/employeeonboardingstatusonboardingstep.md
  - docs/models/components/employeepaymentmethod.md
  - docs/models/components/employeepaymentmethodtype.md
  - docs/models/components/employeepaystub.md
  - docs/models/components/employees.md
  - docs/models/components/employeestatetax.md
  - docs/models/components/employeestatetaxanswer.md
  - docs/models/components/employeestatetaxes.md
  - docs/models/components/employeestatetaxinputquestionformat.md
  - docs/models/components/employeestatetaxinputquestionformatvalue.md
  - docs/models/components/employeestatetaxquestion.md
  - docs/models/components/employeeworkaddress.md
  - docs/models/components/employmenthistorylist.md
  - docs/models/components/employmenthistorylistemploymentstatus.md
  - docs/models/components/employmentstatus.md
  - docs/models/components/entityerrorobject.md
  - docs/models/components/entitytype.md
  - docs/models/components/event.md
  - docs/models/components/externalpayroll.md
  - docs/models/components/externalpayrollbasic.md
  - docs/models/components/externalpayrollbasicstatus.md
  - docs/models/components/externalpayrollbenefits.md
  - docs/models/components/externalpayrollitems.md
  - docs/models/components/externalpayrollmetadata.md
  - docs/models/components/externalpayrolltaxes.md
  - docs/models/components/externalpayrolltaxsuggestions.md
  - docs/models/components/fastpaymentlimitrequiredbody.md
  - docs/models/components/federalholidays.md
  - docs/models/components/federaltaxdetails.md
  - docs/models/components/fields.md
  - docs/models/components/fipscodes.md
  - docs/models/components/fixed.md
  - docs/models/components/fixedcompensations.md
  - docs/models/components/flow.md
  - docs/models/components/flsastatustype.md
  - docs/models/components/form.md
  - docs/models/components/form1099.md
  - docs/models/components/formpdf.md
  - docs/models/components/fundingtype.md
  - docs/models/components/garnishment.md
  - docs/models/components/garnishmentchildsupport.md
  - docs/models/components/garnishmenttype.md
  - docs/models/components/generateddocument.md
  - docs/models/components/generateddocumentstatus.md
  - docs/models/components/grossuppay.md
  - docs/models/components/historicalemployeebody.md
  - docs/models/components/historicalemployeebodyhomeaddress.md
  - docs/models/components/historicalemployeebodyjob.md
  - docs/models/components/historicalemployeebodytermination.md
  - docs/models/components/holidaypaypolicy.md
  - docs/models/components/holidaypaypolicyemployees.md
  - docs/models/components/homeaddress.md
  - docs/models/components/hourly.md
  - docs/models/components/hourlycompensations.md
  - docs/models/components/httpmetadata.md
  - docs/models/components/i9authorization.md
  - docs/models/components/i9authorizationdocument.md
  - docs/models/components/i9authorizationdocumentoption.md
  - docs/models/components/i9authorizationdocumenttype.md
  - docs/models/components/id.md
  - docs/models/components/identityverificationstatus.md
  - docs/models/components/independenceday.md
  - docs/models/components/industry.md
  - docs/models/components/invoicedata.md
  - docs/models/components/job.md
  - docs/models/components/juneteenth.md
  - docs/models/components/key.md
  - docs/models/components/laborday.md
  - docs/models/components/licensee.md
  - docs/models/components/limitoption.md
  - docs/models/components/location.md
  - docs/models/components/memorialday.md
  - docs/models/components/metadata.md
  - docs/models/components/metadatawithmultipleentities.md
  - docs/models/components/metadatawithoneentity.md
  - docs/models/components/minimumwage.md
  - docs/models/components/minimumwages.md
  - docs/models/components/mlkday.md
  - docs/models/components/name.md
  - docs/models/components/newyearsday.md
  - docs/models/components/notification.md
  - docs/models/components/offcyclereasontype.md
  - docs/models/components/onboardingdocumentsconfig.md
  - docs/models/components/onboardingstatus.md
  - docs/models/components/onboardingstep.md
  - docs/models/components/options.md
  - docs/models/components/pages.md
  - docs/models/components/paidtimeoff.md
  - docs/models/components/paymentconfigs.md
  - docs/models/components/paymentdirection.md
  - docs/models/components/paymenteventtype.md
  - docs/models/components/paymentmethod.md
  - docs/models/components/paymentmethodbankaccount.md
  - docs/models/components/paymentperiod.md
  - docs/models/components/paymentspeedparam.md
  - docs/models/components/paymentspeedrequiredbody.md
  - docs/models/components/paymentstatus.md
  - docs/models/components/paymentunit.md
  - docs/models/components/paymentuuid.md
  - docs/models/components/payperiod.md
  - docs/models/components/payperiodpayroll.md
  - docs/models/components/payroll.md
  - docs/models/components/payrollbenefits.md
  - docs/models/components/payrollblocker.md
  - docs/models/components/payrollcheck.md
  - docs/models/components/payrollcompanytaxestype.md
  - docs/models/components/payrollcreditblockerstype.md
  - docs/models/components/payrollcreditblockerstypemetadata.md
  - docs/models/components/payrollcreditblockerstypestatus.md
  - docs/models/components/payrollcreditblockerstypeunblockoptions.md
  - docs/models/components/payrollemployeecompensationstype.md
  - docs/models/components/payrollemployeecompensationstypepaidtimeoff.md
  - docs/models/components/payrollemployeecompensationstypepaymentmethod.md
  - docs/models/components/payrollfixedcompensationtypestype.md
  - docs/models/components/payrollminimal.md
  - docs/models/components/payrollpaymentspeedchangedtype.md
  - docs/models/components/payrollpayperiodtype.md
  - docs/models/components/payrollpayrollstatusmetatype.md
  - docs/models/components/payrollprepared.md
  - docs/models/components/payrollprocessingrequest.md
  - docs/models/components/payrollprocessingrequeststatus.md
  - docs/models/components/payrollreceipt.md
  - docs/models/components/payrollreceipttaxes.md
  - docs/models/components/payrollreversal.md
  - docs/models/components/payrollsubmissionblockerstype.md
  - docs/models/components/payrollsubmissionblockerstypemetadata.md
  - docs/models/components/payrollsubmissionblockerstypestatus.md
  - docs/models/components/payrolltotalstype.md
  - docs/models/components/payrolltype.md
  - docs/models/components/payrollwithholdingpayperiodtype.md
  - docs/models/components/payscheduleassignment.md
  - docs/models/components/payscheduleassignmentbody.md
  - docs/models/components/payscheduleassignmentbodytype.md
  - docs/models/components/payscheduleassignmentdepartment.md
  - docs/models/components/payscheduleassignmentemployee.md
  - docs/models/components/payscheduleassignmentemployeechange.md
  - docs/models/components/payscheduleassignmentpayperiod.md
  - docs/models/components/payscheduleassignmentpreview.md
  - docs/models/components/payscheduleassignmentpreviewtype.md
  - docs/models/components/payscheduleassignmenttransitionpayperiod.md
  - docs/models/components/payschedulecreateupdate.md
  - docs/models/components/payschedulefrequency.md
  - docs/models/components/payschedulefrequencycreateupdate.md
  - docs/models/components/payschedulelist.md
  - docs/models/components/payscheduleobject.md
  - docs/models/components/payscheduletype.md
  - docs/models/components/plaidstatus.md
  - docs/models/components/policytype.md
  - docs/models/components/possibleliabilities.md
  - docs/models/components/postemployeeytdbenefitamountsfromdifferentcompany.md
  - docs/models/components/presidentsday.md
  - docs/models/components/primarypayrolladmin.md
  - docs/models/components/primarysignatory.md
  - docs/models/components/ratetype.md
  - docs/models/components/recipienttype.md
  - docs/models/components/reconciletaxmethod.md
  - docs/models/components/recoverycase.md
  - docs/models/components/recoverycasestatus.md
  - docs/models/components/rehire.md
  - docs/models/components/rehirebody.md
  - docs/models/components/rehireemploymentstatus.md
  - docs/models/components/report.md
  - docs/models/components/reporttemplate.md
  - docs/models/components/requiredattributes.md
  - docs/models/components/requirements.md
  - docs/models/components/resources.md
  - docs/models/components/resourcetype.md
  - docs/models/components/section.md
  - docs/models/components/security.md
  - docs/models/components/signatory.md
  - docs/models/components/sortorder.md
  - docs/models/components/splitby.md
  - docs/models/components/status.md
  - docs/models/components/subscriptiontypes.md
  - docs/models/components/supportedbenefit.md
  - docs/models/components/taxes.md
  - docs/models/components/taxliabilitiesselections.md
  - docs/models/components/taxrefunds.md
  - docs/models/components/taxrequirement.md
  - docs/models/components/taxrequirementmetadata.md
  - docs/models/components/taxrequirementmetadataoptions.md
  - docs/models/components/taxrequirementmetadatatype.md
  - docs/models/components/taxrequirementmetadatavalidationtype.md
  - docs/models/components/taxrequirementmetadatavalue.md
  - docs/models/components/taxrequirementset.md
  - docs/models/components/taxrequirementsstate.md
  - docs/models/components/taxrequirementvalue.md
  - docs/models/components/taxsuggestions.md
  - docs/models/components/termination.md
  - docs/models/components/thanksgiving.md
  - docs/models/components/tier.md
  - docs/models/components/tiers.md
  - docs/models/components/timeoffactivity.md
  - docs/models/components/timeoffpolicy.md
  - docs/models/components/timeoffpolicyemployees.md
  - docs/models/components/timeofftype.md
  - docs/models/components/total.md
  - docs/models/components/totals.md
  - docs/models/components/two.md
  - docs/models/components/type.md
  - docs/models/components/unblockoptions.md
  - docs/models/components/unprocessedterminationpayperiod.md
  - docs/models/components/validation.md
  - docs/models/components/value.md
  - docs/models/components/value2.md
  - docs/models/components/valuetiers.md
  - docs/models/components/verificationstatus.md
  - docs/models/components/verificationtype.md
  - docs/models/components/versionheader.md
  - docs/models/components/veteransday.md
  - docs/models/components/w4datatype.md
  - docs/models/components/wagetype.md
  - docs/models/components/webhooksubscription.md
  - docs/models/components/webhooksubscriptionstatus.md
  - docs/models/components/wireinrequest.md
  - docs/models/components/wireinrequeststatus.md
  - docs/models/components/workaddress.md
  - docs/models/components/ytdbenefitamountsfromdifferentcompany.md
  - docs/models/errors/base.md
  - docs/models/errors/deletev1companybenefitscompanybenefitiderrors.md
  - docs/models/errors/deletev1companybenefitscompanybenefitidresponsebody.md
  - docs/models/errors/errors.md
  - docs/models/errors/metadata.md
  - docs/models/errors/payrollblockerserror.md
  - docs/models/errors/postcompaniespayrollskipcompanyuuidresponsebody.md
  - docs/models/errors/postpayrollsgrossuppayrolluuidresponsebody.md
  - docs/models/errors/putv1companiescompanyidpayrollspayrollidcalculateresponsebody.md
  - docs/models/errors/putv1companiescompanyidpayrollspayrollidsubmitresponsebody.md
  - docs/models/errors/unprocessableentityerrorobject.md
  - docs/models/errors/unprocessableentityerrorobject1.md
  - docs/models/operations/accounttype.md
  - docs/models/operations/accrualmethod.md
  - docs/models/operations/answers.md
  - docs/models/operations/authorizationstatus.md
  - docs/models/operations/benefits.md
  - docs/models/operations/category.md
  - docs/models/operations/christmasday.md
  - docs/models/operations/columbusday.md
  - docs/models/operations/columns.md
  - docs/models/operations/company.md
  - docs/models/operations/contractorpayments.md
  - docs/models/operations/contractors.md
  - docs/models/operations/contribution.md
  - docs/models/operations/deductionreducestaxableincome.md
  - docs/models/operations/deletecompaniescompanyuuidholidaypaypolicyrequest.md
  - docs/models/operations/deletecompaniescompanyuuidholidaypaypolicyresponse.md
  - docs/models/operations/deletedepartmentrequest.md
  - docs/models/operations/deletedepartmentresponse.md
  - docs/models/operations/deletev1companiescompanyidcontractorpaymentcontractorpaymentrequest.md
  - docs/models/operations/deletev1companiescompanyidcontractorpaymentcontractorpaymentresponse.md
  - docs/models/operations/deletev1companiescompanyidearningtypesearningtypeuuidrequest.md
  - docs/models/operations/deletev1companiescompanyidearningtypesearningtypeuuidresponse.md
  - docs/models/operations/deletev1companiescompanyidpayrollsrequest.md
  - docs/models/operations/deletev1companiescompanyidpayrollsresponse.md
  - docs/models/operations/deletev1companiescompanyuuidsignatoriessignatoryuuidrequest.md
  - docs/models/operations/deletev1companiescompanyuuidsignatoriessignatoryuuidresponse.md
  - docs/models/operations/deletev1companybenefitscompanybenefitidrequest.md
  - docs/models/operations/deletev1companybenefitscompanybenefitidresponse.md
  - docs/models/operations/deletev1compensationscompensationidrequest.md
  - docs/models/operations/deletev1compensationscompensationidresponse.md
  - docs/models/operations/deletev1contractorpaymentgroupscontractorpaymentgroupidrequest.md
  - docs/models/operations/deletev1contractorpaymentgroupscontractorpaymentgroupidresponse.md
  - docs/models/operations/deletev1contractorscontractoruuidrequest.md
  - docs/models/operations/deletev1contractorscontractoruuidresponse.md
  - docs/models/operations/deletev1employeebenefitsemployeebenefitidrequest.md
  - docs/models/operations/deletev1employeebenefitsemployeebenefitidresponse.md
  - docs/models/operations/deletev1employeerequest.md
  - docs/models/operations/deletev1employeeresponse.md
  - docs/models/operations/deletev1employeesemployeeidbankaccountsbankaccountidrequest.md
  - docs/models/operations/deletev1employeesemployeeidbankaccountsbankaccountidresponse.md
  - docs/models/operations/deletev1employeesemployeeidi9authorizationdocumentsdocumentidrequest.md
  - docs/models/operations/deletev1employeesemployeeidi9authorizationdocumentsdocumentidresponse.md
  - docs/models/operations/deletev1employeesemployeeidrehirerequest.md
  - docs/models/operations/deletev1employeesemployeeidrehireresponse.md
  - docs/models/operations/deletev1employeesemployeeidterminationsrequest.md
  - docs/models/operations/deletev1employeesemployeeidterminationsresponse.md
  - docs/models/operations/deletev1externalpayrollrequest.md
  - docs/models/operations/deletev1externalpayrollresponse.md
  - docs/models/operations/deletev1homeaddresseshomeaddressuuidrequest.md
  - docs/models/operations/deletev1homeaddresseshomeaddressuuidresponse.md
  - docs/models/operations/deletev1jobsjobidrequest.md
  - docs/models/operations/deletev1jobsjobidresponse.md
  - docs/models/operations/deletev1webhooksubscriptionuuidrequest.md
  - docs/models/operations/deletev1webhooksubscriptionuuidresponse.md
  - docs/models/operations/deletev1webhooksubscriptionuuidsecurity.md
  - docs/models/operations/deletev1workaddressesworkaddressuuidrequest.md
  - docs/models/operations/deletev1workaddressesworkaddressuuidresponse.md
  - docs/models/operations/document.md
  - docs/models/operations/documents.md
  - docs/models/operations/documenttype.md
  - docs/models/operations/earnings.md
  - docs/models/operations/earningtype.md
  - docs/models/operations/employeecompensations.md
  - docs/models/operations/employees.md
  - docs/models/operations/employeestatetaxes.md
  - docs/models/operations/employmentstatus.md
  - docs/models/operations/employmenttype.md
  - docs/models/operations/entitytype.md
  - docs/models/operations/externalpayrollitems.md
  - docs/models/operations/federalholidays.md
  - docs/models/operations/fields.md
  - docs/models/operations/filetype.md
  - docs/models/operations/filingform.md
  - docs/models/operations/fixedcompensations.md
  - docs/models/operations/frequency.md
  - docs/models/operations/garnishmenttype.md
  - docs/models/operations/getachtransactionsrequest.md
  - docs/models/operations/getachtransactionsresponse.md
  - docs/models/operations/getcompaniescompanyuuidholidaypaypolicyrequest.md
  - docs/models/operations/getcompaniescompanyuuidholidaypaypolicyresponse.md
  - docs/models/operations/getcompaniescompanyuuidreporttemplatesreporttyperequest.md
  - docs/models/operations/getcompaniescompanyuuidreporttemplatesreporttyperesponse.md
  - docs/models/operations/getcompaniescompanyuuidsuspensionsrequest.md
  - docs/models/operations/getcompaniescompanyuuidsuspensionsresponse.md
  - docs/models/operations/getcompaniescompanyuuidtimeoffpoliciesrequest.md
  - docs/models/operations/getcompaniescompanyuuidtimeoffpoliciesresponse.md
  - docs/models/operations/getcompaniescompanyuuidwireinrequestuuidrequest.md
  - docs/models/operations/getcompaniescompanyuuidwireinrequestuuidresponse.md
  - docs/models/operations/getcompaniesdepartmentsrequest.md
  - docs/models/operations/getcompaniesdepartmentsresponse.md
  - docs/models/operations/getdepartmentrequest.md
  - docs/models/operations/getdepartmentresponse.md
  - docs/models/operations/getemployeeytdbenefitamountsfromdifferentcompanyrequest.md
  - docs/models/operations/getemployeeytdbenefitamountsfromdifferentcompanyresponse.md
  - docs/models/operations/geteventsrequest.md
  - docs/models/operations/geteventsresponse.md
  - docs/models/operations/geteventssecurity.md
  - docs/models/operations/getinvoicesinvoiceperiodrequest.md
  - docs/models/operations/getinvoicesinvoiceperiodresponse.md
  - docs/models/operations/getinvoicesinvoiceperiodsecurity.md
  - docs/models/operations/getnotificationsnotificationuuidrequest.md
  - docs/models/operations/getnotificationsnotificationuuidresponse.md
  - docs/models/operations/getrecoverycasesrequest.md
  - docs/models/operations/getrecoverycasesresponse.md
  - docs/models/operations/getreportsreportuuidrequest.md
  - docs/models/operations/getreportsreportuuidresponse.md
  - docs/models/operations/gettimeoffpoliciestimeoffpolicyuuidrequest.md
  - docs/models/operations/gettimeoffpoliciestimeoffpolicyuuidresponse.md
  - docs/models/operations/getv1benefitsbenefitidrequest.md
  - docs/models/operations/getv1benefitsbenefitidresponse.md
  - docs/models/operations/getv1benefitsbenefitsidrequirementsrequest.md
  - docs/models/operations/getv1benefitsbenefitsidrequirementsresponse.md
  - docs/models/operations/getv1benefitscompanybenefitidsummaryrequest.md
  - docs/models/operations/getv1benefitscompanybenefitidsummaryresponse.md
  - docs/models/operations/getv1benefitsrequest.md
  - docs/models/operations/getv1benefitsresponse.md
  - docs/models/operations/getv1companiesattachmentrequest.md
  - docs/models/operations/getv1companiesattachmentresponse.md
  - docs/models/operations/getv1companiesattachmentsrequest.md
  - docs/models/operations/getv1companiesattachmentsresponse.md
  - docs/models/operations/getv1companiesattachmenturlrequest.md
  - docs/models/operations/getv1companiesattachmenturlresponse.md
  - docs/models/operations/getv1companiesattachmenturlresponsebody.md
  - docs/models/operations/getv1companiescompanyidadminsrequest.md
  - docs/models/operations/getv1companiescompanyidadminsresponse.md
  - docs/models/operations/getv1companiescompanyidbankaccountsrequest.md
  - docs/models/operations/getv1companiescompanyidbankaccountsresponse.md
  - docs/models/operations/getv1companiescompanyidcompanybenefitsrequest.md
  - docs/models/operations/getv1companiescompanyidcompanybenefitsresponse.md
  - docs/models/operations/getv1companiescompanyidcontractorpaymentcontractorpaymentrequest.md
  - docs/models/operations/getv1companiescompanyidcontractorpaymentcontractorpaymentresponse.md
  - docs/models/operations/getv1companiescompanyidcontractorpaymentgroupsrequest.md
  - docs/models/operations/getv1companiescompanyidcontractorpaymentgroupsresponse.md
  - docs/models/operations/getv1companiescompanyidcontractorpaymentsrequest.md
  - docs/models/operations/getv1companiescompanyidcontractorpaymentsresponse.md
  - docs/models/operations/getv1companiescompanyidcontractorpaymentsresponsebody.md
  - docs/models/operations/getv1companiescompanyidcustomfieldsrequest.md
  - docs/models/operations/getv1companiescompanyidcustomfieldsresponse.md
  - docs/models/operations/getv1companiescompanyidearningtypesrequest.md
  - docs/models/operations/getv1companiescompanyidearningtypesresponse.md
  - docs/models/operations/getv1companiescompanyidemployeesrequest.md
  - docs/models/operations/getv1companiescompanyidemployeesresponse.md
  - docs/models/operations/getv1companiescompanyidfederaltaxdetailsrequest.md
  - docs/models/operations/getv1companiescompanyidfederaltaxdetailsresponse.md
  - docs/models/operations/getv1companiescompanyidlocationsrequest.md
  - docs/models/operations/getv1companiescompanyidlocationsresponse.md
  - docs/models/operations/getv1companiescompanyidpayperiodsrequest.md
  - docs/models/operations/getv1companiescompanyidpayperiodsresponse.md
  - docs/models/operations/getv1companiescompanyidpayrollreversalsrequest.md
  - docs/models/operations/getv1companiescompanyidpayrollreversalsresponse.md
  - docs/models/operations/getv1companiescompanyidpayrollspayrollidqueryparaminclude.md
  - docs/models/operations/getv1companiescompanyidpayrollspayrollidrequest.md
  - docs/models/operations/getv1companiescompanyidpayrollspayrollidresponse.md
  - docs/models/operations/getv1companiescompanyidpayrollsqueryparaminclude.md
  - docs/models/operations/getv1companiescompanyidpayrollsrequest.md
  - docs/models/operations/getv1companiescompanyidpayrollsresponse.md
  - docs/models/operations/getv1companiescompanyidpayschedulesassignmentsrequest.md
  - docs/models/operations/getv1companiescompanyidpayschedulesassignmentsresponse.md
  - docs/models/operations/getv1companiescompanyidpayschedulespayscheduleidrequest.md
  - docs/models/operations/getv1companiescompanyidpayschedulespayscheduleidresponse.md
  - docs/models/operations/getv1companiescompanyidpayschedulespreviewrequest.md
  - docs/models/operations/getv1companiescompanyidpayschedulespreviewresponse.md
  - docs/models/operations/getv1companiescompanyidpayschedulespreviewresponsebody.md
  - docs/models/operations/getv1companiescompanyidpayschedulesrequest.md
  - docs/models/operations/getv1companiescompanyidpayschedulesresponse.md
  - docs/models/operations/getv1companiescompanyidunprocessedterminationpayperiodsrequest.md
  - docs/models/operations/getv1companiescompanyidunprocessedterminationpayperiodsresponse.md
  - docs/models/operations/getv1companiescompanyuuidcontractorsrequest.md
  - docs/models/operations/getv1companiescompanyuuidcontractorsresponse.md
  - docs/models/operations/getv1companiescompanyuuidsignatoriesrequest.md
  - docs/models/operations/getv1companiescompanyuuidsignatoriesresponse.md
  - docs/models/operations/getv1companiescompanyuuidtaxrequirementsrequest.md
  - docs/models/operations/getv1companiescompanyuuidtaxrequirementsresponse.md
  - docs/models/operations/getv1companiescompanyuuidtaxrequirementsstaterequest.md
  - docs/models/operations/getv1companiescompanyuuidtaxrequirementsstateresponse.md
  - docs/models/operations/getv1companiespayrollblockerscompanyuuidrequest.md
  - docs/models/operations/getv1companiespayrollblockerscompanyuuidresponse.md
  - docs/models/operations/getv1companiesrequest.md
  - docs/models/operations/getv1companiesresponse.md
  - docs/models/operations/getv1companybenefitscompanybenefitidemployeebenefitsrequest.md
  - docs/models/operations/getv1companybenefitscompanybenefitidemployeebenefitsresponse.md
  - docs/models/operations/getv1companybenefitscompanybenefitidrequest.md
  - docs/models/operations/getv1companybenefitscompanybenefitidresponse.md
  - docs/models/operations/getv1companyexternalpayrollsrequest.md
  - docs/models/operations/getv1companyexternalpayrollsresponse.md
  - docs/models/operations/getv1companyfinishonboardingrequest.md
  - docs/models/operations/getv1companyfinishonboardingresponse.md
  - docs/models/operations/getv1companyformpdfrequest.md
  - docs/models/operations/getv1companyformpdfresponse.md
  - docs/models/operations/getv1companyformrequest.md
  - docs/models/operations/getv1companyformresponse.md
  - docs/models/operations/getv1companyformsrequest.md
  - docs/models/operations/getv1companyformsresponse.md
  - docs/models/operations/getv1companyindustryrequest.md
  - docs/models/operations/getv1companyindustryresponse.md
  - docs/models/operations/getv1companyonboardingstatusrequest.md
  - docs/models/operations/getv1companyonboardingstatusresponse.md
  - docs/models/operations/getv1companypaymentconfigsrequest.md
  - docs/models/operations/getv1companypaymentconfigsresponse.md
  - docs/models/operations/getv1compensationscompensationidrequest.md
  - docs/models/operations/getv1compensationscompensationidresponse.md
  - docs/models/operations/getv1contractordocumentpdfrequest.md
  - docs/models/operations/getv1contractordocumentpdfresponse.md
  - docs/models/operations/getv1contractordocumentrequest.md
  - docs/models/operations/getv1contractordocumentresponse.md
  - docs/models/operations/getv1contractordocumentsrequest.md
  - docs/models/operations/getv1contractordocumentsresponse.md
  - docs/models/operations/getv1contractorformpdfrequest.md
  - docs/models/operations/getv1contractorformpdfresponse.md
  - docs/models/operations/getv1contractorformrequest.md
  - docs/models/operations/getv1contractorformresponse.md
  - docs/models/operations/getv1contractorformsrequest.md
  - docs/models/operations/getv1contractorformsresponse.md
  - docs/models/operations/getv1contractorpaymentgroupscontractorpaymentgroupidrequest.md
  - docs/models/operations/getv1contractorpaymentgroupscontractorpaymentgroupidresponse.md
  - docs/models/operations/getv1contractorpaymentscontractorpaymentuuidfundrequest.md
  - docs/models/operations/getv1contractorpaymentscontractorpaymentuuidfundresponse.md
  - docs/models/operations/getv1contractorpaymentscontractorpaymentuuidreceiptrequest.md
  - docs/models/operations/getv1contractorpaymentscontractorpaymentuuidreceiptresponse.md
  - docs/models/operations/getv1contractorscontractoruuidaddressrequest.md
  - docs/models/operations/getv1contractorscontractoruuidaddressresponse.md
  - docs/models/operations/getv1contractorscontractoruuidbankaccountsrequest.md
  - docs/models/operations/getv1contractorscontractoruuidbankaccountsresponse.md
  - docs/models/operations/getv1contractorscontractoruuidonboardingstatusrequest.md
  - docs/models/operations/getv1contractorscontractoruuidonboardingstatusresponse.md
  - docs/models/operations/getv1contractorscontractoruuidpaymentmethodrequest.md
  - docs/models/operations/getv1contractorscontractoruuidpaymentmethodresponse.md
  - docs/models/operations/getv1contractorscontractoruuidrequest.md
  - docs/models/operations/getv1contractorscontractoruuidresponse.md
  - docs/models/operations/getv1employeebenefitsemployeebenefitidrequest.md
  - docs/models/operations/getv1employeebenefitsemployeebenefitidresponse.md
  - docs/models/operations/getv1employeeformpdfrequest.md
  - docs/models/operations/getv1employeeformpdfresponse.md
  - docs/models/operations/getv1employeeformrequest.md
  - docs/models/operations/getv1employeeformresponse.md
  - docs/models/operations/getv1employeeformsrequest.md
  - docs/models/operations/getv1employeeformsresponse.md
  - docs/models/operations/getv1employeesemployeeidbankaccountsrequest.md
  - docs/models/operations/getv1employeesemployeeidbankaccountsresponse.md
  - docs/models/operations/getv1employeesemployeeidcustomfieldsrequest.md
  - docs/models/operations/getv1employeesemployeeidcustomfieldsresponse.md
  - docs/models/operations/getv1employeesemployeeidcustomfieldsresponsebody.md
  - docs/models/operations/getv1employeesemployeeidemployeebenefitsrequest.md
  - docs/models/operations/getv1employeesemployeeidemployeebenefitsresponse.md
  - docs/models/operations/getv1employeesemployeeidemploymenthistoryrequest.md
  - docs/models/operations/getv1employeesemployeeidemploymenthistoryresponse.md
  - docs/models/operations/getv1employeesemployeeidfederaltaxesrequest.md
  - docs/models/operations/getv1employeesemployeeidfederaltaxesresponse.md
  - docs/models/operations/getv1employeesemployeeidgarnishmentsrequest.md
  - docs/models/operations/getv1employeesemployeeidgarnishmentsresponse.md
  - docs/models/operations/getv1employeesemployeeidhomeaddressesrequest.md
  - docs/models/operations/getv1employeesemployeeidhomeaddressesresponse.md
  - docs/models/operations/getv1employeesemployeeidi9authorizationdocumentoptionsrequest.md
  - docs/models/operations/getv1employeesemployeeidi9authorizationdocumentoptionsresponse.md
  - docs/models/operations/getv1employeesemployeeidi9authorizationdocumentsrequest.md
  - docs/models/operations/getv1employeesemployeeidi9authorizationdocumentsresponse.md
  - docs/models/operations/getv1employeesemployeeidi9authorizationrequest.md
  - docs/models/operations/getv1employeesemployeeidi9authorizationresponse.md
  - docs/models/operations/getv1employeesemployeeidjobsqueryparaminclude.md
  - docs/models/operations/getv1employeesemployeeidjobsrequest.md
  - docs/models/operations/getv1employeesemployeeidjobsresponse.md
  - docs/models/operations/getv1employeesemployeeidonboardingstatusrequest.md
  - docs/models/operations/getv1employeesemployeeidonboardingstatusresponse.md
  - docs/models/operations/getv1employeesemployeeidpaymentmethodrequest.md
  - docs/models/operations/getv1employeesemployeeidpaymentmethodresponse.md
  - docs/models/operations/getv1employeesemployeeidrehirerequest.md
  - docs/models/operations/getv1employeesemployeeidrehireresponse.md
  - docs/models/operations/getv1employeesemployeeidstatetaxesrequest.md
  - docs/models/operations/getv1employeesemployeeidstatetaxesresponse.md
  - docs/models/operations/getv1employeesemployeeidterminationsrequest.md
  - docs/models/operations/getv1employeesemployeeidterminationsresponse.md
  - docs/models/operations/getv1employeesemployeeidworkaddressesrequest.md
  - docs/models/operations/getv1employeesemployeeidworkaddressesresponse.md
  - docs/models/operations/getv1employeesemployeeuuidpaystubsrequest.md
  - docs/models/operations/getv1employeesemployeeuuidpaystubsresponse.md
  - docs/models/operations/getv1employeesrequest.md
  - docs/models/operations/getv1employeesresponse.md
  - docs/models/operations/getv1externalpayrollcalculatetaxesrequest.md
  - docs/models/operations/getv1externalpayrollcalculatetaxesresponse.md
  - docs/models/operations/getv1externalpayrollrequest.md
  - docs/models/operations/getv1externalpayrollresponse.md
  - docs/models/operations/getv1garnishmentschildsupportrequest.md
  - docs/models/operations/getv1garnishmentschildsupportresponse.md
  - docs/models/operations/getv1garnishmentsgarnishmentidrequest.md
  - docs/models/operations/getv1garnishmentsgarnishmentidresponse.md
  - docs/models/operations/getv1generateddocumentsdocumenttyperequestuuidrequest.md
  - docs/models/operations/getv1generateddocumentsdocumenttyperequestuuidresponse.md
  - docs/models/operations/getv1homeaddresseshomeaddressuuidrequest.md
  - docs/models/operations/getv1homeaddresseshomeaddressuuidresponse.md
  - docs/models/operations/getv1jobsjobidcompensationsqueryparaminclude.md
  - docs/models/operations/getv1jobsjobidcompensationsrequest.md
  - docs/models/operations/getv1jobsjobidcompensationsresponse.md
  - docs/models/operations/getv1jobsjobidqueryparaminclude.md
  - docs/models/operations/getv1jobsjobidrequest.md
  - docs/models/operations/getv1jobsjobidresponse.md
  - docs/models/operations/getv1locationslocationidrequest.md
  - docs/models/operations/getv1locationslocationidresponse.md
  - docs/models/operations/getv1locationslocationuuidminimumwagesrequest.md
  - docs/models/operations/getv1locationslocationuuidminimumwagesresponse.md
  - docs/models/operations/getv1paymentreceiptspayrollspayrolluuidrequest.md
  - docs/models/operations/getv1paymentreceiptspayrollspayrolluuidresponse.md
  - docs/models/operations/getv1payrollspayrolluuidemployeesemployeeuuidpaystubrequest.md
  - docs/models/operations/getv1payrollspayrolluuidemployeesemployeeuuidpaystubresponse.md
  - docs/models/operations/getv1taxliabilitiesrequest.md
  - docs/models/operations/getv1taxliabilitiesresponse.md
  - docs/models/operations/getv1tokeninforequest.md
  - docs/models/operations/getv1tokeninforesponse.md
  - docs/models/operations/getv1tokeninforesponsebody.md
  - docs/models/operations/getv1tokeninfotype.md
  - docs/models/operations/getv1webhooksubscriptionsrequest.md
  - docs/models/operations/getv1webhooksubscriptionsresponse.md
  - docs/models/operations/getv1webhooksubscriptionssecurity.md
  - docs/models/operations/getv1webhooksubscriptionuuidrequest.md
  - docs/models/operations/getv1webhooksubscriptionuuidresponse.md
  - docs/models/operations/getv1webhooksubscriptionuuidsecurity.md
  - docs/models/operations/getv1webhooksubscriptionverificationtokenuuidrequest.md
  - docs/models/operations/getv1webhooksubscriptionverificationtokenuuidresponse.md
  - docs/models/operations/getv1webhooksubscriptionverificationtokenuuidsecurity.md
  - docs/models/operations/getv1workaddressesworkaddressuuidrequest.md
  - docs/models/operations/getv1workaddressesworkaddressuuidresponse.md
  - docs/models/operations/getversionemployeestimeoffactivitiesrequest.md
  - docs/models/operations/getversionemployeestimeoffactivitiesresponse.md
  - docs/models/operations/getwireinrequestswireinrequestuuidrequest.md
  - docs/models/operations/getwireinrequestswireinrequestuuidresponse.md
  - docs/models/operations/groupings.md
  - docs/models/operations/homeaddress.md
  - docs/models/operations/hourlycompensations.md
  - docs/models/operations/include.md
  - docs/models/operations/independenceday.md
  - docs/models/operations/job.md
  - docs/models/operations/juneteenth.md
  - docs/models/operations/laborday.md
  - docs/models/operations/leavingfor.md
  - docs/models/operations/liabilityselections.md
  - docs/models/operations/limitoption.md
  - docs/models/operations/memorialday.md
  - docs/models/operations/migrationstatus.md
  - docs/models/operations/minimumwages.md
  - docs/models/operations/mlkday.md
  - docs/models/operations/newyearsday.md
  - docs/models/operations/offcyclereason.md
  - docs/models/operations/onboardingstatus.md
  - docs/models/operations/ownertype.md
  - docs/models/operations/paidtimeoff.md
  - docs/models/operations/paymentmethod.md
  - docs/models/operations/paymentunit.md
  - docs/models/operations/payperiods.md
  - docs/models/operations/payrolltype.md
  - docs/models/operations/payrolltypes.md
  - docs/models/operations/postcompaniescompanyuuidholidaypaypolicyrequest.md
  - docs/models/operations/postcompaniescompanyuuidholidaypaypolicyrequestbody.md
  - docs/models/operations/postcompaniescompanyuuidholidaypaypolicyresponse.md
  - docs/models/operations/postcompaniescompanyuuidreportsemploymentstatus.md
  - docs/models/operations/postcompaniescompanyuuidreportspaymentmethod.md
  - docs/models/operations/postcompaniescompanyuuidreportsrequest.md
  - docs/models/operations/postcompaniescompanyuuidreportsrequestbody.md
  - docs/models/operations/postcompaniescompanyuuidreportsresponse.md
  - docs/models/operations/postcompaniescompanyuuidsuspensionsrequest.md
  - docs/models/operations/postcompaniescompanyuuidsuspensionsrequestbody.md
  - docs/models/operations/postcompaniescompanyuuidsuspensionsresponse.md
  - docs/models/operations/postcompaniescompanyuuidtimeoffpoliciesaccrualmethod.md
  - docs/models/operations/postcompaniescompanyuuidtimeoffpoliciesrequest.md
  - docs/models/operations/postcompaniescompanyuuidtimeoffpoliciesrequestbody.md
  - docs/models/operations/postcompaniescompanyuuidtimeoffpoliciesresponse.md
  - docs/models/operations/postcompaniespayrollskipcompanyuuidrequest.md
  - docs/models/operations/postcompaniespayrollskipcompanyuuidrequestbody.md
  - docs/models/operations/postcompaniespayrollskipcompanyuuidresponse.md
  - docs/models/operations/postdepartmentsrequest.md
  - docs/models/operations/postdepartmentsrequestbody.md
  - docs/models/operations/postdepartmentsresponse.md
  - docs/models/operations/postemployeeytdbenefitamountsfromdifferentcompanyrequest.md
  - docs/models/operations/postemployeeytdbenefitamountsfromdifferentcompanyresponse.md
  - docs/models/operations/postpartnermanagedcompaniescompanyuuidaccepttermsofservicerequest.md
  - docs/models/operations/postpartnermanagedcompaniescompanyuuidaccepttermsofservicerequestbody.md
  - docs/models/operations/postpartnermanagedcompaniescompanyuuidaccepttermsofserviceresponse.md
  - docs/models/operations/postpartnermanagedcompaniescompanyuuidaccepttermsofserviceresponsebody.md
  - docs/models/operations/postpartnermanagedcompaniescompanyuuidretrievetermsofservicerequest.md
  - docs/models/operations/postpartnermanagedcompaniescompanyuuidretrievetermsofservicerequestbody.md
  - docs/models/operations/postpartnermanagedcompaniescompanyuuidretrievetermsofserviceresponse.md
  - docs/models/operations/postpartnermanagedcompaniescompanyuuidretrievetermsofserviceresponsebody.md
  - docs/models/operations/postpayrollsgrossuppayrolluuidrequest.md
  - docs/models/operations/postpayrollsgrossuppayrolluuidrequestbody.md
  - docs/models/operations/postpayrollsgrossuppayrolluuidresponse.md
  - docs/models/operations/postv1companiesattachmentrequest.md
  - docs/models/operations/postv1companiesattachmentrequestbody.md
  - docs/models/operations/postv1companiesattachmentresponse.md
  - docs/models/operations/postv1companiescompanyidadminsrequest.md
  - docs/models/operations/postv1companiescompanyidadminsrequestbody.md
  - docs/models/operations/postv1companiescompanyidadminsresponse.md
  - docs/models/operations/postv1companiescompanyidbankaccountsrequest.md
  - docs/models/operations/postv1companiescompanyidbankaccountsrequestbody.md
  - docs/models/operations/postv1companiescompanyidbankaccountsresponse.md
  - docs/models/operations/postv1companiescompanyidcompanybenefitsrequest.md
  - docs/models/operations/postv1companiescompanyidcompanybenefitsrequestbody.md
  - docs/models/operations/postv1companiescompanyidcompanybenefitsresponse.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentgroupspaymentmethod.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentgroupspreviewcontractorpayments.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentgroupspreviewpaymentmethod.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentgroupspreviewrequest.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentgroupspreviewrequestbody.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentgroupspreviewresponse.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentgroupsrequest.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentgroupsrequestbody.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentgroupsresponse.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentspaymentmethod.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentsrequest.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentsrequestbody.md
  - docs/models/operations/postv1companiescompanyidcontractorpaymentsresponse.md
  - docs/models/operations/postv1companiescompanyidearningtypesrequest.md
  - docs/models/operations/postv1companiescompanyidearningtypesrequestbody.md
  - docs/models/operations/postv1companiescompanyidearningtypesresponse.md
  - docs/models/operations/postv1companiescompanyidlocationsrequest.md
  - docs/models/operations/postv1companiescompanyidlocationsrequestbody.md
  - docs/models/operations/postv1companiescompanyidlocationsresponse.md
  - docs/models/operations/postv1companiescompanyidpayrollsrequest.md
  - docs/models/operations/postv1companiescompanyidpayrollsrequestbody.md
  - docs/models/operations/postv1companiescompanyidpayrollsresponse.md
  - docs/models/operations/postv1companiescompanyidpayschedulesassignmentpreviewrequest.md
  - docs/models/operations/postv1companiescompanyidpayschedulesassignmentpreviewresponse.md
  - docs/models/operations/postv1companiescompanyidpayschedulesassignrequest.md
  - docs/models/operations/postv1companiescompanyidpayschedulesassignresponse.md
  - docs/models/operations/postv1companiescompanyidpayschedulesrequest.md
  - docs/models/operations/postv1companiescompanyidpayschedulesrequestbody.md
  - docs/models/operations/postv1companiescompanyidpayschedulesresponse.md
  - docs/models/operations/postv1companiescompanyuuidcontractorsrequest.md
  - docs/models/operations/postv1companiescompanyuuidcontractorsrequestbody.md
  - docs/models/operations/postv1companiescompanyuuidcontractorsresponse.md
  - docs/models/operations/postv1companiescompanyuuidcontractorstype.md
  - docs/models/operations/postv1companiescompanyuuidsignatoriesinviterequest.md
  - docs/models/operations/postv1companiescompanyuuidsignatoriesinviterequestbody.md
  - docs/models/operations/postv1companiescompanyuuidsignatoriesinviteresponse.md
  - docs/models/operations/postv1companyflowsrequest.md
  - docs/models/operations/postv1companyflowsrequestbody.md
  - docs/models/operations/postv1companyflowsresponse.md
  - docs/models/operations/postv1companysignatoriesrequest.md
  - docs/models/operations/postv1companysignatoriesrequestbody.md
  - docs/models/operations/postv1companysignatoriesresponse.md
  - docs/models/operations/postv1compensationscompensationidrequest.md
  - docs/models/operations/postv1compensationscompensationidrequestbody.md
  - docs/models/operations/postv1compensationscompensationidresponse.md
  - docs/models/operations/postv1contractorscontractoruuidbankaccountsaccounttype.md
  - docs/models/operations/postv1contractorscontractoruuidbankaccountsrequest.md
  - docs/models/operations/postv1contractorscontractoruuidbankaccountsrequestbody.md
  - docs/models/operations/postv1contractorscontractoruuidbankaccountsresponse.md
  - docs/models/operations/postv1employeesemployeeidbankaccountsaccounttype.md
  - docs/models/operations/postv1employeesemployeeidbankaccountsrequest.md
  - docs/models/operations/postv1employeesemployeeidbankaccountsrequestbody.md
  - docs/models/operations/postv1employeesemployeeidbankaccountsresponse.md
  - docs/models/operations/postv1employeesemployeeidemployeebenefitsrequest.md
  - docs/models/operations/postv1employeesemployeeidemployeebenefitsrequestbody.md
  - docs/models/operations/postv1employeesemployeeidemployeebenefitsresponse.md
  - docs/models/operations/postv1employeesemployeeidemployeebenefitstype.md
  - docs/models/operations/postv1employeesemployeeidemployeebenefitsvalue.md
  - docs/models/operations/postv1employeesemployeeidgarnishmentsrequest.md
  - docs/models/operations/postv1employeesemployeeidgarnishmentsrequestbody.md
  - docs/models/operations/postv1employeesemployeeidgarnishmentsresponse.md
  - docs/models/operations/postv1employeesemployeeidhomeaddressesrequest.md
  - docs/models/operations/postv1employeesemployeeidhomeaddressesrequestbody.md
  - docs/models/operations/postv1employeesemployeeidhomeaddressesresponse.md
  - docs/models/operations/postv1employeesemployeeidrehirerequest.md
  - docs/models/operations/postv1employeesemployeeidrehireresponse.md
  - docs/models/operations/postv1employeesemployeeidterminationsrequest.md
  - docs/models/operations/postv1employeesemployeeidterminationsrequestbody.md
  - docs/models/operations/postv1employeesemployeeidterminationsresponse.md
  - docs/models/operations/postv1employeesemployeeidworkaddressesrequest.md
  - docs/models/operations/postv1employeesemployeeidworkaddressesrequestbody.md
  - docs/models/operations/postv1employeesemployeeidworkaddressesresponse.md
  - docs/models/operations/postv1employeesrequest.md
  - docs/models/operations/postv1employeesrequestbody.md
  - docs/models/operations/postv1employeesresponse.md
  - docs/models/operations/postv1externalpayrollrequest.md
  - docs/models/operations/postv1externalpayrollrequestbody.md
  - docs/models/operations/postv1externalpayrollresponse.md
  - docs/models/operations/postv1historicalemployeesrequest.md
  - docs/models/operations/postv1historicalemployeesresponse.md
  - docs/models/operations/postv1jobsjobidrequest.md
  - docs/models/operations/postv1jobsjobidrequestbody.md
  - docs/models/operations/postv1jobsjobidresponse.md
  - docs/models/operations/postv1partnermanagedcompaniesrequest.md
  - docs/models/operations/postv1partnermanagedcompaniesrequestbody.md
  - docs/models/operations/postv1partnermanagedcompaniesresponse.md
  - docs/models/operations/postv1partnermanagedcompaniesresponsebody.md
  - docs/models/operations/postv1partnermanagedcompaniessecurity.md
  - docs/models/operations/postv1payrollspayrollidcalculateaccruingtimeoffhoursrequest.md
  - docs/models/operations/postv1payrollspayrollidcalculateaccruingtimeoffhoursrequestbody.md
  - docs/models/operations/postv1payrollspayrollidcalculateaccruingtimeoffhoursresponse.md
  - docs/models/operations/postv1payrollspayrolluuidgenerateddocumentsprintablepayrollchecksrequest.md
  - docs/models/operations/postv1payrollspayrolluuidgenerateddocumentsprintablepayrollchecksrequestbody.md
  - docs/models/operations/postv1payrollspayrolluuidgenerateddocumentsprintablepayrollchecksresponse.md
  - docs/models/operations/postv1plaidprocessortokenrequest.md
  - docs/models/operations/postv1plaidprocessortokenrequestbody.md
  - docs/models/operations/postv1plaidprocessortokenresponse.md
  - docs/models/operations/postv1plaidprocessortokenresponsebody.md
  - docs/models/operations/postv1sandboxgenerate1099request.md
  - docs/models/operations/postv1sandboxgenerate1099requestbody.md
  - docs/models/operations/postv1sandboxgenerate1099response.md
  - docs/models/operations/postv1sandboxgeneratew2form.md
  - docs/models/operations/postv1sandboxgeneratew2request.md
  - docs/models/operations/postv1sandboxgeneratew2requestbody.md
  - docs/models/operations/postv1sandboxgeneratew2response.md
  - docs/models/operations/postv1webhooksubscriptionrequest.md
  - docs/models/operations/postv1webhooksubscriptionrequestbody.md
  - docs/models/operations/postv1webhooksubscriptionresponse.md
  - docs/models/operations/postv1webhooksubscriptionsecurity.md
  - docs/models/operations/presidentsday.md
  - docs/models/operations/printingformat.md
  - docs/models/operations/processingstatuses.md
  - docs/models/operations/putaddpeopletodepartmentrequest.md
  - docs/models/operations/putaddpeopletodepartmentrequestbody.md
  - docs/models/operations/putaddpeopletodepartmentresponse.md
  - docs/models/operations/putapiv1companiescompanyidpayrollspayrollidcancelrequest.md
  - docs/models/operations/putapiv1companiescompanyidpayrollspayrollidcancelresponse.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyaddemployees.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyaddrequest.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyaddrequestbody.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyaddresponse.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicychristmasday.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicycolumbusday.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyfederalholidays.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyindependenceday.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyjuneteenth.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicylaborday.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicymemorialday.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicymlkday.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicynewyearsday.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicypresidentsday.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyremoveemployees.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyremoverequest.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyremoverequestbody.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyremoveresponse.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyrequest.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyrequestbody.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyresponse.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicythanksgiving.md
  - docs/models/operations/putcompaniescompanyuuidholidaypaypolicyveteransday.md
  - docs/models/operations/putdepartmentsrequest.md
  - docs/models/operations/putdepartmentsrequestbody.md
  - docs/models/operations/putdepartmentsresponse.md
  - docs/models/operations/putremovepeoplefromdepartmentcontractors.md
  - docs/models/operations/putremovepeoplefromdepartmentemployees.md
  - docs/models/operations/putremovepeoplefromdepartmentrequest.md
  - docs/models/operations/putremovepeoplefromdepartmentrequestbody.md
  - docs/models/operations/putremovepeoplefromdepartmentresponse.md
  - docs/models/operations/puttimeoffpoliciestimeoffpolicyuuidrequest.md
  - docs/models/operations/puttimeoffpoliciestimeoffpolicyuuidrequestbody.md
  - docs/models/operations/puttimeoffpoliciestimeoffpolicyuuidresponse.md
  - docs/models/operations/putv1companiescompanyidbankaccountsverifyrequest.md
  - docs/models/operations/putv1companiescompanyidbankaccountsverifyrequestbody.md
  - docs/models/operations/putv1companiescompanyidbankaccountsverifyresponse.md
  - docs/models/operations/putv1companiescompanyidearningtypesearningtypeuuidrequest.md
  - docs/models/operations/putv1companiescompanyidearningtypesearningtypeuuidrequestbody.md
  - docs/models/operations/putv1companiescompanyidearningtypesearningtypeuuidresponse.md
  - docs/models/operations/putv1companiescompanyidfederaltaxdetailsrequest.md
  - docs/models/operations/putv1companiescompanyidfederaltaxdetailsrequestbody.md
  - docs/models/operations/putv1companiescompanyidfederaltaxdetailsresponse.md
  - docs/models/operations/putv1companiescompanyidpayrollspayrollidcalculaterequest.md
  - docs/models/operations/putv1companiescompanyidpayrollspayrollidcalculateresponse.md
  - docs/models/operations/putv1companiescompanyidpayrollspayrollidpreparerequest.md
  - docs/models/operations/putv1companiescompanyidpayrollspayrollidprepareresponse.md
  - docs/models/operations/putv1companiescompanyidpayrollspayrollidsubmitrequest.md
  - docs/models/operations/putv1companiescompanyidpayrollspayrollidsubmitrequestbody.md
  - docs/models/operations/putv1companiescompanyidpayrollspayrollidsubmitresponse.md
  - docs/models/operations/putv1companiescompanyidpayrollsrequest.md
  - docs/models/operations/putv1companiescompanyidpayrollsrequestbody.md
  - docs/models/operations/putv1companiescompanyidpayrollsresponse.md
  - docs/models/operations/putv1companiescompanyidpayrollswithholdingpayperiod.md
  - docs/models/operations/putv1companiescompanyidpayschedulespayscheduleidfrequency.md
  - docs/models/operations/putv1companiescompanyidpayschedulespayscheduleidrequest.md
  - docs/models/operations/putv1companiescompanyidpayschedulespayscheduleidrequestbody.md
  - docs/models/operations/putv1companiescompanyidpayschedulespayscheduleidresponse.md
  - docs/models/operations/putv1companiescompanyuuidsignatoriessignatoryuuidhomeaddress.md
  - docs/models/operations/putv1companiescompanyuuidsignatoriessignatoryuuidrequest.md
  - docs/models/operations/putv1companiescompanyuuidsignatoriessignatoryuuidrequestbody.md
  - docs/models/operations/putv1companiescompanyuuidsignatoriessignatoryuuidresponse.md
  - docs/models/operations/putv1companiescompanyuuidtaxrequirementsstaterequest.md
  - docs/models/operations/putv1companiescompanyuuidtaxrequirementsstaterequestbody.md
  - docs/models/operations/putv1companiescompanyuuidtaxrequirementsstateresponse.md
  - docs/models/operations/putv1companiesrequest.md
  - docs/models/operations/putv1companiesrequestbody.md
  - docs/models/operations/putv1companiesresponse.md
  - docs/models/operations/putv1companybenefitscompanybenefitidemployeebenefitsrequest.md
  - docs/models/operations/putv1companybenefitscompanybenefitidemployeebenefitsrequestbody.md
  - docs/models/operations/putv1companybenefitscompanybenefitidemployeebenefitsresponse.md
  - docs/models/operations/putv1companybenefitscompanybenefitidrequest.md
  - docs/models/operations/putv1companybenefitscompanybenefitidrequestbody.md
  - docs/models/operations/putv1companybenefitscompanybenefitidresponse.md
  - docs/models/operations/putv1companyformsignrequest.md
  - docs/models/operations/putv1companyformsignrequestbody.md
  - docs/models/operations/putv1companyformsignresponse.md
  - docs/models/operations/putv1companyindustryrequest.md
  - docs/models/operations/putv1companyindustryrequestbody.md
  - docs/models/operations/putv1companyindustryresponse.md
  - docs/models/operations/putv1companypaymentconfigsrequest.md
  - docs/models/operations/putv1companypaymentconfigsrequestbody.md
  - docs/models/operations/putv1companypaymentconfigsresponse.md
  - docs/models/operations/putv1compensationscompensationidminimumwages.md
  - docs/models/operations/putv1compensationscompensationidpaymentunit.md
  - docs/models/operations/putv1compensationscompensationidrequest.md
  - docs/models/operations/putv1compensationscompensationidrequestbody.md
  - docs/models/operations/putv1compensationscompensationidresponse.md
  - docs/models/operations/putv1contractordocumentsignrequest.md
  - docs/models/operations/putv1contractordocumentsignrequestbody.md
  - docs/models/operations/putv1contractordocumentsignresponse.md
  - docs/models/operations/putv1contractorpaymentgroupscontractorpaymentgroupidfundrequest.md
  - docs/models/operations/putv1contractorpaymentgroupscontractorpaymentgroupidfundresponse.md
  - docs/models/operations/putv1contractorscontractoridpaymentmethodrequest.md
  - docs/models/operations/putv1contractorscontractoridpaymentmethodrequestbody.md
  - docs/models/operations/putv1contractorscontractoridpaymentmethodresponse.md
  - docs/models/operations/putv1contractorscontractoridpaymentmethodtype.md
  - docs/models/operations/putv1contractorscontractoruuidaddressrequest.md
  - docs/models/operations/putv1contractorscontractoruuidaddressrequestbody.md
  - docs/models/operations/putv1contractorscontractoruuidaddressresponse.md
  - docs/models/operations/putv1contractorscontractoruuidonboardingstatusrequest.md
  - docs/models/operations/putv1contractorscontractoruuidonboardingstatusrequestbody.md
  - docs/models/operations/putv1contractorscontractoruuidonboardingstatusresponse.md
  - docs/models/operations/putv1contractorscontractoruuidrequest.md
  - docs/models/operations/putv1contractorscontractoruuidrequestbody.md
  - docs/models/operations/putv1contractorscontractoruuidresponse.md
  - docs/models/operations/putv1contractorscontractoruuidtype.md
  - docs/models/operations/putv1contractorscontractoruuidwagetype.md
  - docs/models/operations/putv1employeebenefitsemployeebenefitidcontribution.md
  - docs/models/operations/putv1employeebenefitsemployeebenefitiddeductionreducestaxableincome.md
  - docs/models/operations/putv1employeebenefitsemployeebenefitidlimitoption.md
  - docs/models/operations/putv1employeebenefitsemployeebenefitidrequest.md
  - docs/models/operations/putv1employeebenefitsemployeebenefitidrequestbody.md
  - docs/models/operations/putv1employeebenefitsemployeebenefitidresponse.md
  - docs/models/operations/putv1employeebenefitsemployeebenefitidtype.md
  - docs/models/operations/putv1employeebenefitsemployeebenefitidvalue.md
  - docs/models/operations/putv1employeeformsignrequest.md
  - docs/models/operations/putv1employeeformsignrequestbody.md
  - docs/models/operations/putv1employeeformsignresponse.md
  - docs/models/operations/putv1employeesemployeeidbankaccountsaccounttype.md
  - docs/models/operations/putv1employeesemployeeidbankaccountsrequest.md
  - docs/models/operations/putv1employeesemployeeidbankaccountsrequestbody.md
  - docs/models/operations/putv1employeesemployeeidbankaccountsresponse.md
  - docs/models/operations/putv1employeesemployeeidfederaltaxesrequest.md
  - docs/models/operations/putv1employeesemployeeidfederaltaxesrequestbody.md
  - docs/models/operations/putv1employeesemployeeidfederaltaxesresponse.md
  - docs/models/operations/putv1employeesemployeeidi9authorizationdocumentsrequest.md
  - docs/models/operations/putv1employeesemployeeidi9authorizationdocumentsrequestbody.md
  - docs/models/operations/putv1employeesemployeeidi9authorizationdocumentsresponse.md
  - docs/models/operations/putv1employeesemployeeidi9authorizationemployersignrequest.md
  - docs/models/operations/putv1employeesemployeeidi9authorizationemployersignrequestbody.md
  - docs/models/operations/putv1employeesemployeeidi9authorizationemployersignresponse.md
  - docs/models/operations/putv1employeesemployeeidi9authorizationrequest.md
  - docs/models/operations/putv1employeesemployeeidi9authorizationrequestbody.md
  - docs/models/operations/putv1employeesemployeeidi9authorizationresponse.md
  - docs/models/operations/putv1employeesemployeeidonboardingdocumentsconfigrequest.md
  - docs/models/operations/putv1employeesemployeeidonboardingdocumentsconfigrequestbody.md
  - docs/models/operations/putv1employeesemployeeidonboardingdocumentsconfigresponse.md
  - docs/models/operations/putv1employeesemployeeidonboardingstatusrequest.md
  - docs/models/operations/putv1employeesemployeeidonboardingstatusrequestbody.md
  - docs/models/operations/putv1employeesemployeeidonboardingstatusresponse.md
  - docs/models/operations/putv1employeesemployeeidpaymentmethodrequest.md
  - docs/models/operations/putv1employeesemployeeidpaymentmethodrequestbody.md
  - docs/models/operations/putv1employeesemployeeidpaymentmethodresponse.md
  - docs/models/operations/putv1employeesemployeeidrehirerequest.md
  - docs/models/operations/putv1employeesemployeeidrehirerequestbody.md
  - docs/models/operations/putv1employeesemployeeidrehireresponse.md
  - docs/models/operations/putv1employeesemployeeidstatetaxesrequest.md
  - docs/models/operations/putv1employeesemployeeidstatetaxesrequestbody.md
  - docs/models/operations/putv1employeesemployeeidstatetaxesresponse.md
  - docs/models/operations/putv1employeesrequest.md
  - docs/models/operations/putv1employeesrequestbody.md
  - docs/models/operations/putv1employeesresponse.md
  - docs/models/operations/putv1externalpayrollrequest.md
  - docs/models/operations/putv1externalpayrollrequestbody.md
  - docs/models/operations/putv1externalpayrollresponse.md
  - docs/models/operations/putv1garnishmentsgarnishmentidrequest.md
  - docs/models/operations/putv1garnishmentsgarnishmentidrequestbody.md
  - docs/models/operations/putv1garnishmentsgarnishmentidresponse.md
  - docs/models/operations/putv1historicalemployeeshomeaddress.md
  - docs/models/operations/putv1historicalemployeesrequest.md
  - docs/models/operations/putv1historicalemployeesrequestbody.md
  - docs/models/operations/putv1historicalemployeesresponse.md
  - docs/models/operations/putv1homeaddresseshomeaddressuuidrequest.md
  - docs/models/operations/putv1homeaddresseshomeaddressuuidrequestbody.md
  - docs/models/operations/putv1homeaddresseshomeaddressuuidresponse.md
  - docs/models/operations/putv1jobsjobidrequest.md
  - docs/models/operations/putv1jobsjobidrequestbody.md
  - docs/models/operations/putv1jobsjobidresponse.md
  - docs/models/operations/putv1locationslocationidrequest.md
  - docs/models/operations/putv1locationslocationidrequestbody.md
  - docs/models/operations/putv1locationslocationidresponse.md
  - docs/models/operations/putv1partnermanagedcompaniescompanyuuidmigraterequest.md
  - docs/models/operations/putv1partnermanagedcompaniescompanyuuidmigraterequestbody.md
  - docs/models/operations/putv1partnermanagedcompaniescompanyuuidmigrateresponse.md
  - docs/models/operations/putv1partnermanagedcompaniescompanyuuidmigrateresponsebody.md
  - docs/models/operations/putv1taxliabilitiesfinishrequest.md
  - docs/models/operations/putv1taxliabilitiesfinishresponse.md
  - docs/models/operations/putv1taxliabilitiesrequest.md
  - docs/models/operations/putv1taxliabilitiesrequestbody.md
  - docs/models/operations/putv1taxliabilitiesresponse.md
  - docs/models/operations/putv1terminationsemployeeidrequest.md
  - docs/models/operations/putv1terminationsemployeeidrequestbody.md
  - docs/models/operations/putv1terminationsemployeeidresponse.md
  - docs/models/operations/putv1timeoffpoliciestimeoffpolicyuuiddeactivaterequest.md
  - docs/models/operations/putv1timeoffpoliciestimeoffpolicyuuiddeactivateresponse.md
  - docs/models/operations/putv1timeoffpoliciestimeoffpolicyuuidremoveemployeesemployees.md
  - docs/models/operations/putv1timeoffpoliciestimeoffpolicyuuidremoveemployeesrequest.md
  - docs/models/operations/putv1timeoffpoliciestimeoffpolicyuuidremoveemployeesrequestbody.md
  - docs/models/operations/putv1timeoffpoliciestimeoffpolicyuuidremoveemployeesresponse.md
  - docs/models/operations/putv1verifywebhooksubscriptionuuidrequest.md
  - docs/models/operations/putv1verifywebhooksubscriptionuuidrequestbody.md
  - docs/models/operations/putv1verifywebhooksubscriptionuuidresponse.md
  - docs/models/operations/putv1verifywebhooksubscriptionuuidsecurity.md
  - docs/models/operations/putv1webhooksubscriptionuuidrequest.md
  - docs/models/operations/putv1webhooksubscriptionuuidrequestbody.md
  - docs/models/operations/putv1webhooksubscriptionuuidresponse.md
  - docs/models/operations/putv1webhooksubscriptionuuidsecurity.md
  - docs/models/operations/putv1webhooksubscriptionuuidsubscriptiontypes.md
  - docs/models/operations/putv1workaddressesworkaddressuuidrequest.md
  - docs/models/operations/putv1workaddressesworkaddressuuidrequestbody.md
  - docs/models/operations/putv1workaddressesworkaddressuuidresponse.md
  - docs/models/operations/putversiontimeoffpoliciestimeoffpolicyuuidaddemployeesemployees.md
  - docs/models/operations/putversiontimeoffpoliciestimeoffpolicyuuidaddemployeesrequest.md
  - docs/models/operations/putversiontimeoffpoliciestimeoffpolicyuuidaddemployeesrequestbody.md
  - docs/models/operations/putversiontimeoffpoliciestimeoffpolicyuuidaddemployeesresponse.md
  - docs/models/operations/putversiontimeoffpoliciestimeoffpolicyuuidbalanceemployees.md
  - docs/models/operations/putversiontimeoffpoliciestimeoffpolicyuuidbalancerequest.md
  - docs/models/operations/putversiontimeoffpoliciestimeoffpolicyuuidbalancerequestbody.md
  - docs/models/operations/putversiontimeoffpoliciestimeoffpolicyuuidbalanceresponse.md
  - docs/models/operations/putwireinrequestswireinrequestuuidrequest.md
  - docs/models/operations/putwireinrequestswireinrequestuuidrequestbody.md
  - docs/models/operations/putwireinrequestswireinrequestuuidresponse.md
  - docs/models/operations/queryparamfrequency.md
  - docs/models/operations/queryparaminclude.md
  - docs/models/operations/questions.md
  - docs/models/operations/reason.md
  - docs/models/operations/reconciletaxmethod.md
  - docs/models/operations/redebitrecoverycaserequest.md
  - docs/models/operations/redebitrecoverycaseresponse.md
  - docs/models/operations/refreshaccesstokenrequest.md
  - docs/models/operations/refreshaccesstokenrequestbody.md
  - docs/models/operations/refreshaccesstokenresponse.md
  - docs/models/operations/requirements.md
  - docs/models/operations/requirementsets.md
  - docs/models/operations/resource.md
  - docs/models/operations/resourceowner.md
  - docs/models/operations/responsebody.md
  - docs/models/operations/splitby.md
  - docs/models/operations/splits.md
  - docs/models/operations/states.md
  - docs/models/operations/submissionblockers.md
  - docs/models/operations/subscriptiontypes.md
  - docs/models/operations/taxes.md
  - docs/models/operations/taxpayertype.md
  - docs/models/operations/termination.md
  - docs/models/operations/thanksgiving.md
  - docs/models/operations/two.md
  - docs/models/operations/type.md
  - docs/models/operations/user.md
  - docs/models/operations/value.md
  - docs/models/operations/value2.md
  - docs/models/operations/veteransday.md
  - docs/models/operations/wagetype.md
  - docs/models/operations/withholdingpayperiod.md
  - docs/models/operations/workaddress.md
  - docs/sdks/achtransactions/README.md
  - docs/sdks/bankaccounts/README.md
  - docs/sdks/companies/README.md
  - docs/sdks/companyattachment/README.md
  - docs/sdks/companyattachments/README.md
  - docs/sdks/companybenefits/README.md
  - docs/sdks/companyforms/README.md
  - docs/sdks/contractordocuments/README.md
  - docs/sdks/contractorforms/README.md
  - docs/sdks/contractorpaymentgroups/README.md
  - docs/sdks/contractorpaymentmethod/README.md
  - docs/sdks/contractorpaymentmethods/README.md
  - docs/sdks/contractorpayments/README.md
  - docs/sdks/contractors/README.md
  - docs/sdks/departments/README.md
  - docs/sdks/earningtypes/README.md
  - docs/sdks/employeeaddresses/README.md
  - docs/sdks/employeebenefits/README.md
  - docs/sdks/employeeemployments/README.md
  - docs/sdks/employeeforms/README.md
  - docs/sdks/employeepaymentmethod/README.md
  - docs/sdks/employeepaymentmethods/README.md
  - docs/sdks/employees/README.md
  - docs/sdks/employeetaxsetup/README.md
  - docs/sdks/events/README.md
  - docs/sdks/externalpayrolls/README.md
  - docs/sdks/federaltaxdetails/README.md
  - docs/sdks/flows/README.md
  - docs/sdks/garnishments/README.md
  - docs/sdks/generateddocuments/README.md
  - docs/sdks/gustoembedded/README.md
  - docs/sdks/historicalemployees/README.md
  - docs/sdks/holidaypaypolicies/README.md
  - docs/sdks/i9verification/README.md
  - docs/sdks/industryselection/README.md
  - docs/sdks/introspection/README.md
  - docs/sdks/invoices/README.md
  - docs/sdks/jobsandcompensations/README.md
  - docs/sdks/locations/README.md
  - docs/sdks/notifications/README.md
  - docs/sdks/paymentconfigs/README.md
  - docs/sdks/payrolls/README.md
  - docs/sdks/payschedules/README.md
  - docs/sdks/recoverycases/README.md
  - docs/sdks/reports/README.md
  - docs/sdks/signatories/README.md
  - docs/sdks/taxrequirements/README.md
  - docs/sdks/timeoffpolicies/README.md
  - docs/sdks/webhooks/README.md
  - docs/sdks/wireinrequests/README.md
  - docs/types/rfcdate.md
  - eslint.config.mjs
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/achTransactionsGetAll.ts
  - src/funcs/bankAccountsCreate.ts
  - src/funcs/bankAccountsCreateFromPlaidToken.ts
  - src/funcs/bankAccountsGet.ts
  - src/funcs/bankAccountsVerify.ts
  - src/funcs/companiesAcceptTermsOfService.ts
  - src/funcs/companiesCreateAdmin.ts
  - src/funcs/companiesCreatePartnerManaged.ts
  - src/funcs/companiesFinishOnboarding.ts
  - src/funcs/companiesGet.ts
  - src/funcs/companiesGetCompaniesCompanyUuidSuspensions.ts
  - src/funcs/companiesGetCustomFields.ts
  - src/funcs/companiesGetOnboardingStatus.ts
  - src/funcs/companiesListAdmins.ts
  - src/funcs/companiesMigrate.ts
  - src/funcs/companiesPostCompaniesCompanyUuidSuspensions.ts
  - src/funcs/companiesRetrieveTermsOfService.ts
  - src/funcs/companiesUpdate.ts
  - src/funcs/companyAttachmentGetDownloadUrl.ts
  - src/funcs/companyAttachmentsCreate.ts
  - src/funcs/companyAttachmentsGetDetails.ts
  - src/funcs/companyAttachmentsGetList.ts
  - src/funcs/companyBenefitsCreate.ts
  - src/funcs/companyBenefitsDelete.ts
  - src/funcs/companyBenefitsGet.ts
  - src/funcs/companyBenefitsGetAll.ts
  - src/funcs/companyBenefitsGetEmployeeBenefits.ts
  - src/funcs/companyBenefitsGetRequirements.ts
  - src/funcs/companyBenefitsGetSummary.ts
  - src/funcs/companyBenefitsGetSupported.ts
  - src/funcs/companyBenefitsList.ts
  - src/funcs/companyBenefitsUpdate.ts
  - src/funcs/companyBenefitsUpdateEmployeeBenefits.ts
  - src/funcs/companyFormsGet.ts
  - src/funcs/companyFormsGetAll.ts
  - src/funcs/companyFormsGetPdf.ts
  - src/funcs/companyFormsSign.ts
  - src/funcs/contractorDocumentsGet.ts
  - src/funcs/contractorDocumentsGetAll.ts
  - src/funcs/contractorDocumentsGetPdf.ts
  - src/funcs/contractorDocumentsSign.ts
  - src/funcs/contractorFormsGenerate1099.ts
  - src/funcs/contractorFormsGet.ts
  - src/funcs/contractorFormsGetPdf.ts
  - src/funcs/contractorFormsList.ts
  - src/funcs/contractorPaymentGroupsCreate.ts
  - src/funcs/contractorPaymentGroupsDelete.ts
  - src/funcs/contractorPaymentGroupsFund.ts
  - src/funcs/contractorPaymentGroupsGet.ts
  - src/funcs/contractorPaymentGroupsGetList.ts
  - src/funcs/contractorPaymentGroupsPreview.ts
  - src/funcs/contractorPaymentMethodGet.ts
  - src/funcs/contractorPaymentMethodGetBankAccounts.ts
  - src/funcs/contractorPaymentMethodUpdate.ts
  - src/funcs/contractorPaymentMethodsCreateBankAccount.ts
  - src/funcs/contractorPaymentsCreate.ts
  - src/funcs/contractorPaymentsDelete.ts
  - src/funcs/contractorPaymentsFund.ts
  - src/funcs/contractorPaymentsGet.ts
  - src/funcs/contractorPaymentsGetReceipt.ts
  - src/funcs/contractorPaymentsList.ts
  - src/funcs/contractorsCreate.ts
  - src/funcs/contractorsDelete.ts
  - src/funcs/contractorsGet.ts
  - src/funcs/contractorsGetAddress.ts
  - src/funcs/contractorsGetOnboardingStatus.ts
  - src/funcs/contractorsList.ts
  - src/funcs/contractorsUpdate.ts
  - src/funcs/contractorsUpdateAddress.ts
  - src/funcs/contractorsUpdateOnboardingStatus.ts
  - src/funcs/departmentsAddPeople.ts
  - src/funcs/departmentsCreate.ts
  - src/funcs/departmentsDelete.ts
  - src/funcs/departmentsGet.ts
  - src/funcs/departmentsGetAll.ts
  - src/funcs/departmentsRemovePeople.ts
  - src/funcs/departmentsUpdate.ts
  - src/funcs/earningTypesCreate.ts
  - src/funcs/earningTypesDelete.ts
  - src/funcs/earningTypesList.ts
  - src/funcs/earningTypesUpdate.ts
  - src/funcs/employeeAddressesCreate.ts
  - src/funcs/employeeAddressesCreateWorkAddress.ts
  - src/funcs/employeeAddressesDelete.ts
  - src/funcs/employeeAddressesDeleteWorkAddress.ts
  - src/funcs/employeeAddressesGet.ts
  - src/funcs/employeeAddressesGetWorkAddresses.ts
  - src/funcs/employeeAddressesRetrieveHomeAddress.ts
  - src/funcs/employeeAddressesRetrieveWorkAddress.ts
  - src/funcs/employeeAddressesUpdate.ts
  - src/funcs/employeeAddressesUpdateWorkAddress.ts
  - src/funcs/employeeBenefitsCreate.ts
  - src/funcs/employeeBenefitsCreateYtdBenefitAmountsFromDifferentCompany.ts
  - src/funcs/employeeBenefitsDelete.ts
  - src/funcs/employeeBenefitsGet.ts
  - src/funcs/employeeBenefitsGetYtdBenefitAmountsFromDifferentCompany.ts
  - src/funcs/employeeBenefitsRetrieve.ts
  - src/funcs/employeeBenefitsUpdate.ts
  - src/funcs/employeeEmploymentsCreateRehire.ts
  - src/funcs/employeeEmploymentsCreateTermination.ts
  - src/funcs/employeeEmploymentsDeleteRehire.ts
  - src/funcs/employeeEmploymentsDeleteTermination.ts
  - src/funcs/employeeEmploymentsGetHistory.ts
  - src/funcs/employeeEmploymentsGetRehire.ts
  - src/funcs/employeeEmploymentsGetTerminations.ts
  - src/funcs/employeeEmploymentsRehire.ts
  - src/funcs/employeeEmploymentsUpdateTermination.ts
  - src/funcs/employeeFormsGenerateW2.ts
  - src/funcs/employeeFormsGet.ts
  - src/funcs/employeeFormsGetPdf.ts
  - src/funcs/employeeFormsList.ts
  - src/funcs/employeeFormsSign.ts
  - src/funcs/employeePaymentMethodCreate.ts
  - src/funcs/employeePaymentMethodDeleteBankAccount.ts
  - src/funcs/employeePaymentMethodGet.ts
  - src/funcs/employeePaymentMethodUpdate.ts
  - src/funcs/employeePaymentMethodUpdateBankAccount.ts
  - src/funcs/employeePaymentMethodsGetBankAccounts.ts
  - src/funcs/employeeTaxSetupGetFederalTaxes.ts
  - src/funcs/employeeTaxSetupGetStateTaxes.ts
  - src/funcs/employeeTaxSetupUpdateFederalTaxes.ts
  - src/funcs/employeeTaxSetupUpdateStateTaxes.ts
  - src/funcs/employeesCreate.ts
  - src/funcs/employeesCreateHistorical.ts
  - src/funcs/employeesDelete.ts
  - src/funcs/employeesGet.ts
  - src/funcs/employeesGetCustomFields.ts
  - src/funcs/employeesGetOnboardingStatus.ts
  - src/funcs/employeesGetTimeOffActivities.ts
  - src/funcs/employeesList.ts
  - src/funcs/employeesUpdate.ts
  - src/funcs/employeesUpdateOnboardingDocumentsConfig.ts
  - src/funcs/employeesUpdateOnboardingStatus.ts
  - src/funcs/eventsGet.ts
  - src/funcs/externalPayrollsCalculateTaxes.ts
  - src/funcs/externalPayrollsCreate.ts
  - src/funcs/externalPayrollsDelete.ts
  - src/funcs/externalPayrollsFinalizeTaxLiabilities.ts
  - src/funcs/externalPayrollsGet.ts
  - src/funcs/externalPayrollsListTaxLiabilities.ts
  - src/funcs/externalPayrollsRetrieve.ts
  - src/funcs/externalPayrollsUpdate.ts
  - src/funcs/externalPayrollsUpdateTaxLiabilities.ts
  - src/funcs/federalTaxDetailsGet.ts
  - src/funcs/federalTaxDetailsUpdate.ts
  - src/funcs/flowsCreate.ts
  - src/funcs/garnishmentsCreate.ts
  - src/funcs/garnishmentsGet.ts
  - src/funcs/garnishmentsGetChildSupportData.ts
  - src/funcs/garnishmentsList.ts
  - src/funcs/garnishmentsUpdate.ts
  - src/funcs/generatedDocumentsGet.ts
  - src/funcs/historicalEmployeesUpdate.ts
  - src/funcs/holidayPayPoliciesAddEmployees.ts
  - src/funcs/holidayPayPoliciesCreate.ts
  - src/funcs/holidayPayPoliciesDelete.ts
  - src/funcs/holidayPayPoliciesGet.ts
  - src/funcs/holidayPayPoliciesRemoveEmployees.ts
  - src/funcs/holidayPayPoliciesUpdate.ts
  - src/funcs/i9VerificationCreateDocuments.ts
  - src/funcs/i9VerificationDeleteDocument.ts
  - src/funcs/i9VerificationEmployerSign.ts
  - src/funcs/i9VerificationGetAuthorization.ts
  - src/funcs/i9VerificationGetDocumentOptions.ts
  - src/funcs/i9VerificationGetDocuments.ts
  - src/funcs/i9VerificationUpdate.ts
  - src/funcs/industrySelectionGet.ts
  - src/funcs/industrySelectionUpdate.ts
  - src/funcs/introspectionGetInfo.ts
  - src/funcs/introspectionRefreshToken.ts
  - src/funcs/invoicesGet.ts
  - src/funcs/jobsAndCompensationsCreateCompensation.ts
  - src/funcs/jobsAndCompensationsCreateJob.ts
  - src/funcs/jobsAndCompensationsDelete.ts
  - src/funcs/jobsAndCompensationsDeleteCompensation.ts
  - src/funcs/jobsAndCompensationsGetCompensation.ts
  - src/funcs/jobsAndCompensationsGetCompensations.ts
  - src/funcs/jobsAndCompensationsGetJob.ts
  - src/funcs/jobsAndCompensationsGetJobs.ts
  - src/funcs/jobsAndCompensationsUpdate.ts
  - src/funcs/jobsAndCompensationsUpdateCompensation.ts
  - src/funcs/locationsCreate.ts
  - src/funcs/locationsGet.ts
  - src/funcs/locationsGetMinimumWages.ts
  - src/funcs/locationsRetrieve.ts
  - src/funcs/locationsUpdate.ts
  - src/funcs/notificationsGetDetails.ts
  - src/funcs/paySchedulesAssign.ts
  - src/funcs/paySchedulesCreate.ts
  - src/funcs/paySchedulesGet.ts
  - src/funcs/paySchedulesGetAll.ts
  - src/funcs/paySchedulesGetAssignments.ts
  - src/funcs/paySchedulesGetPayPeriods.ts
  - src/funcs/paySchedulesGetPreview.ts
  - src/funcs/paySchedulesGetUnprocessedTerminationPeriods.ts
  - src/funcs/paySchedulesPreviewAssignment.ts
  - src/funcs/paySchedulesUpdate.ts
  - src/funcs/paymentConfigsGet.ts
  - src/funcs/paymentConfigsUpdate.ts
  - src/funcs/payrollsCalculate.ts
  - src/funcs/payrollsCalculateGrossUp.ts
  - src/funcs/payrollsCancel.ts
  - src/funcs/payrollsCreateOffCycle.ts
  - src/funcs/payrollsDelete.ts
  - src/funcs/payrollsGeneratePrintableChecks.ts
  - src/funcs/payrollsGet.ts
  - src/funcs/payrollsGetApprovedReversals.ts
  - src/funcs/payrollsGetBlockers.ts
  - src/funcs/payrollsGetPayStub.ts
  - src/funcs/payrollsGetPayStubs.ts
  - src/funcs/payrollsGetReceipt.ts
  - src/funcs/payrollsList.ts
  - src/funcs/payrollsPrepare.ts
  - src/funcs/payrollsSkip.ts
  - src/funcs/payrollsSubmit.ts
  - src/funcs/payrollsUpdate.ts
  - src/funcs/recoveryCasesGet.ts
  - src/funcs/recoveryCasesRedebit.ts
  - src/funcs/reportsCreateCustom.ts
  - src/funcs/reportsGet.ts
  - src/funcs/reportsGetTemplate.ts
  - src/funcs/signatoriesCreate.ts
  - src/funcs/signatoriesDelete.ts
  - src/funcs/signatoriesInvite.ts
  - src/funcs/signatoriesList.ts
  - src/funcs/signatoriesUpdate.ts
  - src/funcs/taxRequirementsGet.ts
  - src/funcs/taxRequirementsGetAll.ts
  - src/funcs/taxRequirementsUpdateState.ts
  - src/funcs/timeOffPoliciesAddEmployees.ts
  - src/funcs/timeOffPoliciesCalculateAccruingTimeOffHours.ts
  - src/funcs/timeOffPoliciesCreate.ts
  - src/funcs/timeOffPoliciesDeactivate.ts
  - src/funcs/timeOffPoliciesGet.ts
  - src/funcs/timeOffPoliciesGetAll.ts
  - src/funcs/timeOffPoliciesRemoveEmployees.ts
  - src/funcs/timeOffPoliciesUpdate.ts
  - src/funcs/timeOffPoliciesUpdateBalance.ts
  - src/funcs/webhooksCreateSubscription.ts
  - src/funcs/webhooksDeleteSubscription.ts
  - src/funcs/webhooksGetSubscription.ts
  - src/funcs/webhooksListSubscriptions.ts
  - src/funcs/webhooksRequestVerificationToken.ts
  - src/funcs/webhooksUpdateSubscription.ts
  - src/funcs/webhooksVerify.ts
  - src/funcs/wireInRequestsGet.ts
  - src/funcs/wireInRequestsList.ts
  - src/funcs/wireInRequestsSubmit.ts
  - src/hooks/hooks.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/env.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/models/components/accruingtimeoffhour.ts
  - src/models/components/accruingtimeoffhourobject.ts
  - src/models/components/achtransaction.ts
  - src/models/components/admin.ts
  - src/models/components/authentication.ts
  - src/models/components/benefitsummary.ts
  - src/models/components/benefittyperequirements.ts
  - src/models/components/childsupportdata.ts
  - src/models/components/company.ts
  - src/models/components/companyaddress.ts
  - src/models/components/companyattachment.ts
  - src/models/components/companybankaccount.ts
  - src/models/components/companybenefit.ts
  - src/models/components/companybenefitwithemployeebenefits.ts
  - src/models/components/companycustomfield.ts
  - src/models/components/companycustomfieldlist.ts
  - src/models/components/companyonboardingstatus.ts
  - src/models/components/companysuspension.ts
  - src/models/components/compensation.ts
  - src/models/components/contractor.ts
  - src/models/components/contractoraddress.ts
  - src/models/components/contractorbankaccount.ts
  - src/models/components/contractoronboardingstatus.ts
  - src/models/components/contractorpayment.ts
  - src/models/components/contractorpaymentforgroup.ts
  - src/models/components/contractorpaymentgroup.ts
  - src/models/components/contractorpaymentgroupminimal.ts
  - src/models/components/contractorpaymentmethod.ts
  - src/models/components/contractorpaymentreceipt.ts
  - src/models/components/contractorpaymentsummary.ts
  - src/models/components/contractorpaymentsummarybydates.ts
  - src/models/components/createreport.ts
  - src/models/components/customfieldtype.ts
  - src/models/components/department.ts
  - src/models/components/document.ts
  - src/models/components/documentpdf.ts
  - src/models/components/documentsigned.ts
  - src/models/components/documenttype.ts
  - src/models/components/earningtype.ts
  - src/models/components/earningtypelist.ts
  - src/models/components/employee.ts
  - src/models/components/employeeaddress.ts
  - src/models/components/employeebankaccount.ts
  - src/models/components/employeebenefit.ts
  - src/models/components/employeebenefitforcompanybenefit.ts
  - src/models/components/employeecustomfield.ts
  - src/models/components/employeefederaltax.ts
  - src/models/components/employeeonboardingdocument.ts
  - src/models/components/employeeonboardingstatus.ts
  - src/models/components/employeepaymentmethod.ts
  - src/models/components/employeepaystub.ts
  - src/models/components/employeestatetax.ts
  - src/models/components/employeestatetaxanswer.ts
  - src/models/components/employeestatetaxinputquestionformat.ts
  - src/models/components/employeestatetaxquestion.ts
  - src/models/components/employeeworkaddress.ts
  - src/models/components/employmenthistorylist.ts
  - src/models/components/entityerrorobject.ts
  - src/models/components/event.ts
  - src/models/components/externalpayroll.ts
  - src/models/components/externalpayrollbasic.ts
  - src/models/components/externalpayrolltaxsuggestions.ts
  - src/models/components/fastpaymentlimitrequiredbody.ts
  - src/models/components/federaltaxdetails.ts
  - src/models/components/flow.ts
  - src/models/components/flsastatustype.ts
  - src/models/components/form.ts
  - src/models/components/form1099.ts
  - src/models/components/formpdf.ts
  - src/models/components/garnishment.ts
  - src/models/components/garnishmentchildsupport.ts
  - src/models/components/generateddocument.ts
  - src/models/components/grossuppay.ts
  - src/models/components/historicalemployeebody.ts
  - src/models/components/holidaypaypolicy.ts
  - src/models/components/httpmetadata.ts
  - src/models/components/i9authorization.ts
  - src/models/components/i9authorizationdocument.ts
  - src/models/components/i9authorizationdocumentoption.ts
  - src/models/components/industry.ts
  - src/models/components/invoicedata.ts
  - src/models/components/job.ts
  - src/models/components/location.ts
  - src/models/components/metadatawithmultipleentities.ts
  - src/models/components/metadatawithoneentity.ts
  - src/models/components/minimumwage.ts
  - src/models/components/notification.ts
  - src/models/components/offcyclereasontype.ts
  - src/models/components/paidtimeoff.ts
  - src/models/components/paymentconfigs.ts
  - src/models/components/paymentmethodbankaccount.ts
  - src/models/components/paymentspeedparam.ts
  - src/models/components/paymentspeedrequiredbody.ts
  - src/models/components/payperiod.ts
  - src/models/components/payroll.ts
  - src/models/components/payrollblocker.ts
  - src/models/components/payrollcheck.ts
  - src/models/components/payrollcompanytaxestype.ts
  - src/models/components/payrollcreditblockerstype.ts
  - src/models/components/payrollemployeecompensationstype.ts
  - src/models/components/payrollfixedcompensationtypestype.ts
  - src/models/components/payrollminimal.ts
  - src/models/components/payrollpaymentspeedchangedtype.ts
  - src/models/components/payrollpayperiodtype.ts
  - src/models/components/payrollpayrollstatusmetatype.ts
  - src/models/components/payrollprepared.ts
  - src/models/components/payrollprocessingrequest.ts
  - src/models/components/payrollreceipt.ts
  - src/models/components/payrollreversal.ts
  - src/models/components/payrollsubmissionblockerstype.ts
  - src/models/components/payrolltotalstype.ts
  - src/models/components/payrollwithholdingpayperiodtype.ts
  - src/models/components/payscheduleassignment.ts
  - src/models/components/payscheduleassignmentbody.ts
  - src/models/components/payscheduleassignmentdepartment.ts
  - src/models/components/payscheduleassignmentemployee.ts
  - src/models/components/payscheduleassignmentemployeechange.ts
  - src/models/components/payscheduleassignmentpayperiod.ts
  - src/models/components/payscheduleassignmentpreview.ts
  - src/models/components/payscheduleassignmenttransitionpayperiod.ts
  - src/models/components/payschedulecreateupdate.ts
  - src/models/components/payschedulefrequency.ts
  - src/models/components/payschedulefrequencycreateupdate.ts
  - src/models/components/payschedulelist.ts
  - src/models/components/payscheduleobject.ts
  - src/models/components/postemployeeytdbenefitamountsfromdifferentcompany.ts
  - src/models/components/recoverycase.ts
  - src/models/components/rehire.ts
  - src/models/components/rehirebody.ts
  - src/models/components/report.ts
  - src/models/components/reporttemplate.ts
  - src/models/components/security.ts
  - src/models/components/signatory.ts
  - src/models/components/sortorder.ts
  - src/models/components/supportedbenefit.ts
  - src/models/components/taxliabilitiesselections.ts
  - src/models/components/taxrequirement.ts
  - src/models/components/taxrequirementmetadata.ts
  - src/models/components/taxrequirementset.ts
  - src/models/components/taxrequirementsstate.ts
  - src/models/components/termination.ts
  - src/models/components/timeoffactivity.ts
  - src/models/components/timeoffpolicy.ts
  - src/models/components/unprocessedterminationpayperiod.ts
  - src/models/components/versionheader.ts
  - src/models/components/webhooksubscription.ts
  - src/models/components/wireinrequest.ts
  - src/models/components/ytdbenefitamountsfromdifferentcompany.ts
  - src/models/errors/apierror.ts
  - src/models/errors/deletev1companybenefitscompanybenefitid.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/payrollblockerserror.ts
  - src/models/errors/postcompaniespayrollskipcompanyuuid.ts
  - src/models/errors/postpayrollsgrossuppayrolluuid.ts
  - src/models/errors/putv1companiescompanyidpayrollspayrollidcalculate.ts
  - src/models/errors/putv1companiescompanyidpayrollspayrollidsubmit.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/errors/unprocessableentityerrorobject.ts
  - src/models/errors/unprocessableentityerrorobject1.ts
  - src/models/operations/deletecompaniescompanyuuidholidaypaypolicy.ts
  - src/models/operations/deletedepartment.ts
  - src/models/operations/deletev1companiescompanyidcontractorpaymentcontractorpayment.ts
  - src/models/operations/deletev1companiescompanyidearningtypesearningtypeuuid.ts
  - src/models/operations/deletev1companiescompanyidpayrolls.ts
  - src/models/operations/deletev1companiescompanyuuidsignatoriessignatoryuuid.ts
  - src/models/operations/deletev1companybenefitscompanybenefitid.ts
  - src/models/operations/deletev1compensationscompensationid.ts
  - src/models/operations/deletev1contractorpaymentgroupscontractorpaymentgroupid.ts
  - src/models/operations/deletev1contractorscontractoruuid.ts
  - src/models/operations/deletev1employee.ts
  - src/models/operations/deletev1employeebenefitsemployeebenefitid.ts
  - src/models/operations/deletev1employeesemployeeidbankaccountsbankaccountid.ts
  - src/models/operations/deletev1employeesemployeeidi9authorizationdocumentsdocumentid.ts
  - src/models/operations/deletev1employeesemployeeidrehire.ts
  - src/models/operations/deletev1employeesemployeeidterminations.ts
  - src/models/operations/deletev1externalpayroll.ts
  - src/models/operations/deletev1homeaddresseshomeaddressuuid.ts
  - src/models/operations/deletev1jobsjobid.ts
  - src/models/operations/deletev1webhooksubscriptionuuid.ts
  - src/models/operations/deletev1workaddressesworkaddressuuid.ts
  - src/models/operations/getachtransactions.ts
  - src/models/operations/getcompaniescompanyuuidholidaypaypolicy.ts
  - src/models/operations/getcompaniescompanyuuidreporttemplatesreporttype.ts
  - src/models/operations/getcompaniescompanyuuidsuspensions.ts
  - src/models/operations/getcompaniescompanyuuidtimeoffpolicies.ts
  - src/models/operations/getcompaniescompanyuuidwireinrequestuuid.ts
  - src/models/operations/getcompaniesdepartments.ts
  - src/models/operations/getdepartment.ts
  - src/models/operations/getemployeeytdbenefitamountsfromdifferentcompany.ts
  - src/models/operations/getevents.ts
  - src/models/operations/getinvoicesinvoiceperiod.ts
  - src/models/operations/getnotificationsnotificationuuid.ts
  - src/models/operations/getrecoverycases.ts
  - src/models/operations/getreportsreportuuid.ts
  - src/models/operations/gettimeoffpoliciestimeoffpolicyuuid.ts
  - src/models/operations/getv1benefits.ts
  - src/models/operations/getv1benefitsbenefitid.ts
  - src/models/operations/getv1benefitsbenefitsidrequirements.ts
  - src/models/operations/getv1benefitscompanybenefitidsummary.ts
  - src/models/operations/getv1companies.ts
  - src/models/operations/getv1companiesattachment.ts
  - src/models/operations/getv1companiesattachments.ts
  - src/models/operations/getv1companiesattachmenturl.ts
  - src/models/operations/getv1companiescompanyidadmins.ts
  - src/models/operations/getv1companiescompanyidbankaccounts.ts
  - src/models/operations/getv1companiescompanyidcompanybenefits.ts
  - src/models/operations/getv1companiescompanyidcontractorpaymentcontractorpayment.ts
  - src/models/operations/getv1companiescompanyidcontractorpaymentgroups.ts
  - src/models/operations/getv1companiescompanyidcontractorpayments.ts
  - src/models/operations/getv1companiescompanyidcustomfields.ts
  - src/models/operations/getv1companiescompanyidearningtypes.ts
  - src/models/operations/getv1companiescompanyidemployees.ts
  - src/models/operations/getv1companiescompanyidfederaltaxdetails.ts
  - src/models/operations/getv1companiescompanyidlocations.ts
  - src/models/operations/getv1companiescompanyidpayperiods.ts
  - src/models/operations/getv1companiescompanyidpayrollreversals.ts
  - src/models/operations/getv1companiescompanyidpayrolls.ts
  - src/models/operations/getv1companiescompanyidpayrollspayrollid.ts
  - src/models/operations/getv1companiescompanyidpayschedules.ts
  - src/models/operations/getv1companiescompanyidpayschedulesassignments.ts
  - src/models/operations/getv1companiescompanyidpayschedulespayscheduleid.ts
  - src/models/operations/getv1companiescompanyidpayschedulespreview.ts
  - src/models/operations/getv1companiescompanyidunprocessedterminationpayperiods.ts
  - src/models/operations/getv1companiescompanyuuidcontractors.ts
  - src/models/operations/getv1companiescompanyuuidsignatories.ts
  - src/models/operations/getv1companiescompanyuuidtaxrequirements.ts
  - src/models/operations/getv1companiescompanyuuidtaxrequirementsstate.ts
  - src/models/operations/getv1companiespayrollblockerscompanyuuid.ts
  - src/models/operations/getv1companybenefitscompanybenefitid.ts
  - src/models/operations/getv1companybenefitscompanybenefitidemployeebenefits.ts
  - src/models/operations/getv1companyexternalpayrolls.ts
  - src/models/operations/getv1companyfinishonboarding.ts
  - src/models/operations/getv1companyform.ts
  - src/models/operations/getv1companyformpdf.ts
  - src/models/operations/getv1companyforms.ts
  - src/models/operations/getv1companyindustry.ts
  - src/models/operations/getv1companyonboardingstatus.ts
  - src/models/operations/getv1companypaymentconfigs.ts
  - src/models/operations/getv1compensationscompensationid.ts
  - src/models/operations/getv1contractordocument.ts
  - src/models/operations/getv1contractordocumentpdf.ts
  - src/models/operations/getv1contractordocuments.ts
  - src/models/operations/getv1contractorform.ts
  - src/models/operations/getv1contractorformpdf.ts
  - src/models/operations/getv1contractorforms.ts
  - src/models/operations/getv1contractorpaymentgroupscontractorpaymentgroupid.ts
  - src/models/operations/getv1contractorpaymentscontractorpaymentuuidfund.ts
  - src/models/operations/getv1contractorpaymentscontractorpaymentuuidreceipt.ts
  - src/models/operations/getv1contractorscontractoruuid.ts
  - src/models/operations/getv1contractorscontractoruuidaddress.ts
  - src/models/operations/getv1contractorscontractoruuidbankaccounts.ts
  - src/models/operations/getv1contractorscontractoruuidonboardingstatus.ts
  - src/models/operations/getv1contractorscontractoruuidpaymentmethod.ts
  - src/models/operations/getv1employeebenefitsemployeebenefitid.ts
  - src/models/operations/getv1employeeform.ts
  - src/models/operations/getv1employeeformpdf.ts
  - src/models/operations/getv1employeeforms.ts
  - src/models/operations/getv1employees.ts
  - src/models/operations/getv1employeesemployeeidbankaccounts.ts
  - src/models/operations/getv1employeesemployeeidcustomfields.ts
  - src/models/operations/getv1employeesemployeeidemployeebenefits.ts
  - src/models/operations/getv1employeesemployeeidemploymenthistory.ts
  - src/models/operations/getv1employeesemployeeidfederaltaxes.ts
  - src/models/operations/getv1employeesemployeeidgarnishments.ts
  - src/models/operations/getv1employeesemployeeidhomeaddresses.ts
  - src/models/operations/getv1employeesemployeeidi9authorization.ts
  - src/models/operations/getv1employeesemployeeidi9authorizationdocumentoptions.ts
  - src/models/operations/getv1employeesemployeeidi9authorizationdocuments.ts
  - src/models/operations/getv1employeesemployeeidjobs.ts
  - src/models/operations/getv1employeesemployeeidonboardingstatus.ts
  - src/models/operations/getv1employeesemployeeidpaymentmethod.ts
  - src/models/operations/getv1employeesemployeeidrehire.ts
  - src/models/operations/getv1employeesemployeeidstatetaxes.ts
  - src/models/operations/getv1employeesemployeeidterminations.ts
  - src/models/operations/getv1employeesemployeeidworkaddresses.ts
  - src/models/operations/getv1employeesemployeeuuidpaystubs.ts
  - src/models/operations/getv1externalpayroll.ts
  - src/models/operations/getv1externalpayrollcalculatetaxes.ts
  - src/models/operations/getv1garnishmentschildsupport.ts
  - src/models/operations/getv1garnishmentsgarnishmentid.ts
  - src/models/operations/getv1generateddocumentsdocumenttyperequestuuid.ts
  - src/models/operations/getv1homeaddresseshomeaddressuuid.ts
  - src/models/operations/getv1jobsjobid.ts
  - src/models/operations/getv1jobsjobidcompensations.ts
  - src/models/operations/getv1locationslocationid.ts
  - src/models/operations/getv1locationslocationuuidminimumwages.ts
  - src/models/operations/getv1paymentreceiptspayrollspayrolluuid.ts
  - src/models/operations/getv1payrollspayrolluuidemployeesemployeeuuidpaystub.ts
  - src/models/operations/getv1taxliabilities.ts
  - src/models/operations/getv1tokeninfo.ts
  - src/models/operations/getv1webhooksubscriptions.ts
  - src/models/operations/getv1webhooksubscriptionuuid.ts
  - src/models/operations/getv1webhooksubscriptionverificationtokenuuid.ts
  - src/models/operations/getv1workaddressesworkaddressuuid.ts
  - src/models/operations/getversionemployeestimeoffactivities.ts
  - src/models/operations/getwireinrequestswireinrequestuuid.ts
  - src/models/operations/postcompaniescompanyuuidholidaypaypolicy.ts
  - src/models/operations/postcompaniescompanyuuidreports.ts
  - src/models/operations/postcompaniescompanyuuidsuspensions.ts
  - src/models/operations/postcompaniescompanyuuidtimeoffpolicies.ts
  - src/models/operations/postcompaniespayrollskipcompanyuuid.ts
  - src/models/operations/postdepartments.ts
  - src/models/operations/postemployeeytdbenefitamountsfromdifferentcompany.ts
  - src/models/operations/postpartnermanagedcompaniescompanyuuidaccepttermsofservice.ts
  - src/models/operations/postpartnermanagedcompaniescompanyuuidretrievetermsofservice.ts
  - src/models/operations/postpayrollsgrossuppayrolluuid.ts
  - src/models/operations/postv1companiesattachment.ts
  - src/models/operations/postv1companiescompanyidadmins.ts
  - src/models/operations/postv1companiescompanyidbankaccounts.ts
  - src/models/operations/postv1companiescompanyidcompanybenefits.ts
  - src/models/operations/postv1companiescompanyidcontractorpaymentgroups.ts
  - src/models/operations/postv1companiescompanyidcontractorpaymentgroupspreview.ts
  - src/models/operations/postv1companiescompanyidcontractorpayments.ts
  - src/models/operations/postv1companiescompanyidearningtypes.ts
  - src/models/operations/postv1companiescompanyidlocations.ts
  - src/models/operations/postv1companiescompanyidpayrolls.ts
  - src/models/operations/postv1companiescompanyidpayschedules.ts
  - src/models/operations/postv1companiescompanyidpayschedulesassign.ts
  - src/models/operations/postv1companiescompanyidpayschedulesassignmentpreview.ts
  - src/models/operations/postv1companiescompanyuuidcontractors.ts
  - src/models/operations/postv1companiescompanyuuidsignatoriesinvite.ts
  - src/models/operations/postv1companyflows.ts
  - src/models/operations/postv1companysignatories.ts
  - src/models/operations/postv1compensationscompensationid.ts
  - src/models/operations/postv1contractorscontractoruuidbankaccounts.ts
  - src/models/operations/postv1employees.ts
  - src/models/operations/postv1employeesemployeeidbankaccounts.ts
  - src/models/operations/postv1employeesemployeeidemployeebenefits.ts
  - src/models/operations/postv1employeesemployeeidgarnishments.ts
  - src/models/operations/postv1employeesemployeeidhomeaddresses.ts
  - src/models/operations/postv1employeesemployeeidrehire.ts
  - src/models/operations/postv1employeesemployeeidterminations.ts
  - src/models/operations/postv1employeesemployeeidworkaddresses.ts
  - src/models/operations/postv1externalpayroll.ts
  - src/models/operations/postv1historicalemployees.ts
  - src/models/operations/postv1jobsjobid.ts
  - src/models/operations/postv1partnermanagedcompanies.ts
  - src/models/operations/postv1payrollspayrollidcalculateaccruingtimeoffhours.ts
  - src/models/operations/postv1payrollspayrolluuidgenerateddocumentsprintablepayrollchecks.ts
  - src/models/operations/postv1plaidprocessortoken.ts
  - src/models/operations/postv1sandboxgenerate1099.ts
  - src/models/operations/postv1sandboxgeneratew2.ts
  - src/models/operations/postv1webhooksubscription.ts
  - src/models/operations/putaddpeopletodepartment.ts
  - src/models/operations/putapiv1companiescompanyidpayrollspayrollidcancel.ts
  - src/models/operations/putcompaniescompanyuuidholidaypaypolicy.ts
  - src/models/operations/putcompaniescompanyuuidholidaypaypolicyadd.ts
  - src/models/operations/putcompaniescompanyuuidholidaypaypolicyremove.ts
  - src/models/operations/putdepartments.ts
  - src/models/operations/putremovepeoplefromdepartment.ts
  - src/models/operations/puttimeoffpoliciestimeoffpolicyuuid.ts
  - src/models/operations/putv1companies.ts
  - src/models/operations/putv1companiescompanyidbankaccountsverify.ts
  - src/models/operations/putv1companiescompanyidearningtypesearningtypeuuid.ts
  - src/models/operations/putv1companiescompanyidfederaltaxdetails.ts
  - src/models/operations/putv1companiescompanyidpayrolls.ts
  - src/models/operations/putv1companiescompanyidpayrollspayrollidcalculate.ts
  - src/models/operations/putv1companiescompanyidpayrollspayrollidprepare.ts
  - src/models/operations/putv1companiescompanyidpayrollspayrollidsubmit.ts
  - src/models/operations/putv1companiescompanyidpayschedulespayscheduleid.ts
  - src/models/operations/putv1companiescompanyuuidsignatoriessignatoryuuid.ts
  - src/models/operations/putv1companiescompanyuuidtaxrequirementsstate.ts
  - src/models/operations/putv1companybenefitscompanybenefitid.ts
  - src/models/operations/putv1companybenefitscompanybenefitidemployeebenefits.ts
  - src/models/operations/putv1companyformsign.ts
  - src/models/operations/putv1companyindustry.ts
  - src/models/operations/putv1companypaymentconfigs.ts
  - src/models/operations/putv1compensationscompensationid.ts
  - src/models/operations/putv1contractordocumentsign.ts
  - src/models/operations/putv1contractorpaymentgroupscontractorpaymentgroupidfund.ts
  - src/models/operations/putv1contractorscontractoridpaymentmethod.ts
  - src/models/operations/putv1contractorscontractoruuid.ts
  - src/models/operations/putv1contractorscontractoruuidaddress.ts
  - src/models/operations/putv1contractorscontractoruuidonboardingstatus.ts
  - src/models/operations/putv1employeebenefitsemployeebenefitid.ts
  - src/models/operations/putv1employeeformsign.ts
  - src/models/operations/putv1employees.ts
  - src/models/operations/putv1employeesemployeeidbankaccounts.ts
  - src/models/operations/putv1employeesemployeeidfederaltaxes.ts
  - src/models/operations/putv1employeesemployeeidi9authorization.ts
  - src/models/operations/putv1employeesemployeeidi9authorizationdocuments.ts
  - src/models/operations/putv1employeesemployeeidi9authorizationemployersign.ts
  - src/models/operations/putv1employeesemployeeidonboardingdocumentsconfig.ts
  - src/models/operations/putv1employeesemployeeidonboardingstatus.ts
  - src/models/operations/putv1employeesemployeeidpaymentmethod.ts
  - src/models/operations/putv1employeesemployeeidrehire.ts
  - src/models/operations/putv1employeesemployeeidstatetaxes.ts
  - src/models/operations/putv1externalpayroll.ts
  - src/models/operations/putv1garnishmentsgarnishmentid.ts
  - src/models/operations/putv1historicalemployees.ts
  - src/models/operations/putv1homeaddresseshomeaddressuuid.ts
  - src/models/operations/putv1jobsjobid.ts
  - src/models/operations/putv1locationslocationid.ts
  - src/models/operations/putv1partnermanagedcompaniescompanyuuidmigrate.ts
  - src/models/operations/putv1taxliabilities.ts
  - src/models/operations/putv1taxliabilitiesfinish.ts
  - src/models/operations/putv1terminationsemployeeid.ts
  - src/models/operations/putv1timeoffpoliciestimeoffpolicyuuiddeactivate.ts
  - src/models/operations/putv1timeoffpoliciestimeoffpolicyuuidremoveemployees.ts
  - src/models/operations/putv1verifywebhooksubscriptionuuid.ts
  - src/models/operations/putv1webhooksubscriptionuuid.ts
  - src/models/operations/putv1workaddressesworkaddressuuid.ts
  - src/models/operations/putversiontimeoffpoliciestimeoffpolicyuuidaddemployees.ts
  - src/models/operations/putversiontimeoffpoliciestimeoffpolicyuuidbalance.ts
  - src/models/operations/putwireinrequestswireinrequestuuid.ts
  - src/models/operations/redebitrecoverycase.ts
  - src/models/operations/refreshaccesstoken.ts
  - src/react-query/_context.tsx
  - src/react-query/_types.ts
  - src/react-query/achTransactionsGetAll.ts
  - src/react-query/bankAccountsCreate.ts
  - src/react-query/bankAccountsCreateFromPlaidToken.ts
  - src/react-query/bankAccountsGet.ts
  - src/react-query/bankAccountsVerify.ts
  - src/react-query/companiesAcceptTermsOfService.ts
  - src/react-query/companiesCreateAdmin.ts
  - src/react-query/companiesCreatePartnerManaged.ts
  - src/react-query/companiesFinishOnboarding.ts
  - src/react-query/companiesGet.ts
  - src/react-query/companiesGetCompaniesCompanyUuidSuspensions.ts
  - src/react-query/companiesGetCustomFields.ts
  - src/react-query/companiesGetOnboardingStatus.ts
  - src/react-query/companiesListAdmins.ts
  - src/react-query/companiesMigrate.ts
  - src/react-query/companiesPostCompaniesCompanyUuidSuspensions.ts
  - src/react-query/companiesRetrieveTermsOfService.ts
  - src/react-query/companiesUpdate.ts
  - src/react-query/companyAttachmentGetDownloadUrl.ts
  - src/react-query/companyAttachmentsCreate.ts
  - src/react-query/companyAttachmentsGetDetails.ts
  - src/react-query/companyAttachmentsGetList.ts
  - src/react-query/companyBenefitsCreate.ts
  - src/react-query/companyBenefitsDelete.ts
  - src/react-query/companyBenefitsGet.ts
  - src/react-query/companyBenefitsGetAll.ts
  - src/react-query/companyBenefitsGetEmployeeBenefits.ts
  - src/react-query/companyBenefitsGetRequirements.ts
  - src/react-query/companyBenefitsGetSummary.ts
  - src/react-query/companyBenefitsGetSupported.ts
  - src/react-query/companyBenefitsList.ts
  - src/react-query/companyBenefitsUpdate.ts
  - src/react-query/companyBenefitsUpdateEmployeeBenefits.ts
  - src/react-query/companyFormsGet.ts
  - src/react-query/companyFormsGetAll.ts
  - src/react-query/companyFormsGetPdf.ts
  - src/react-query/companyFormsSign.ts
  - src/react-query/contractorDocumentsGet.ts
  - src/react-query/contractorDocumentsGetAll.ts
  - src/react-query/contractorDocumentsGetPdf.ts
  - src/react-query/contractorDocumentsSign.ts
  - src/react-query/contractorFormsGenerate1099.ts
  - src/react-query/contractorFormsGet.ts
  - src/react-query/contractorFormsGetPdf.ts
  - src/react-query/contractorFormsList.ts
  - src/react-query/contractorPaymentGroupsCreate.ts
  - src/react-query/contractorPaymentGroupsDelete.ts
  - src/react-query/contractorPaymentGroupsFund.ts
  - src/react-query/contractorPaymentGroupsGet.ts
  - src/react-query/contractorPaymentGroupsGetList.ts
  - src/react-query/contractorPaymentGroupsPreview.ts
  - src/react-query/contractorPaymentMethodGet.ts
  - src/react-query/contractorPaymentMethodGetBankAccounts.ts
  - src/react-query/contractorPaymentMethodUpdate.ts
  - src/react-query/contractorPaymentMethodsCreateBankAccount.ts
  - src/react-query/contractorPaymentsCreate.ts
  - src/react-query/contractorPaymentsDelete.ts
  - src/react-query/contractorPaymentsFund.ts
  - src/react-query/contractorPaymentsGet.ts
  - src/react-query/contractorPaymentsGetReceipt.ts
  - src/react-query/contractorPaymentsList.ts
  - src/react-query/contractorsCreate.ts
  - src/react-query/contractorsDelete.ts
  - src/react-query/contractorsGet.ts
  - src/react-query/contractorsGetAddress.ts
  - src/react-query/contractorsGetOnboardingStatus.ts
  - src/react-query/contractorsList.ts
  - src/react-query/contractorsUpdate.ts
  - src/react-query/contractorsUpdateAddress.ts
  - src/react-query/contractorsUpdateOnboardingStatus.ts
  - src/react-query/departmentsAddPeople.ts
  - src/react-query/departmentsCreate.ts
  - src/react-query/departmentsDelete.ts
  - src/react-query/departmentsGet.ts
  - src/react-query/departmentsGetAll.ts
  - src/react-query/departmentsRemovePeople.ts
  - src/react-query/departmentsUpdate.ts
  - src/react-query/earningTypesCreate.ts
  - src/react-query/earningTypesDelete.ts
  - src/react-query/earningTypesList.ts
  - src/react-query/earningTypesUpdate.ts
  - src/react-query/employeeAddressesCreate.ts
  - src/react-query/employeeAddressesCreateWorkAddress.ts
  - src/react-query/employeeAddressesDelete.ts
  - src/react-query/employeeAddressesDeleteWorkAddress.ts
  - src/react-query/employeeAddressesGet.ts
  - src/react-query/employeeAddressesGetWorkAddresses.ts
  - src/react-query/employeeAddressesRetrieveHomeAddress.ts
  - src/react-query/employeeAddressesRetrieveWorkAddress.ts
  - src/react-query/employeeAddressesUpdate.ts
  - src/react-query/employeeAddressesUpdateWorkAddress.ts
  - src/react-query/employeeBenefitsCreate.ts
  - src/react-query/employeeBenefitsCreateYtdBenefitAmountsFromDifferentCompany.ts
  - src/react-query/employeeBenefitsDelete.ts
  - src/react-query/employeeBenefitsGet.ts
  - src/react-query/employeeBenefitsGetYtdBenefitAmountsFromDifferentCompany.ts
  - src/react-query/employeeBenefitsRetrieve.ts
  - src/react-query/employeeBenefitsUpdate.ts
  - src/react-query/employeeEmploymentsCreateRehire.ts
  - src/react-query/employeeEmploymentsCreateTermination.ts
  - src/react-query/employeeEmploymentsDeleteRehire.ts
  - src/react-query/employeeEmploymentsDeleteTermination.ts
  - src/react-query/employeeEmploymentsGetHistory.ts
  - src/react-query/employeeEmploymentsGetRehire.ts
  - src/react-query/employeeEmploymentsGetTerminations.ts
  - src/react-query/employeeEmploymentsRehire.ts
  - src/react-query/employeeEmploymentsUpdateTermination.ts
  - src/react-query/employeeFormsGenerateW2.ts
  - src/react-query/employeeFormsGet.ts
  - src/react-query/employeeFormsGetPdf.ts
  - src/react-query/employeeFormsList.ts
  - src/react-query/employeeFormsSign.ts
  - src/react-query/employeePaymentMethodCreate.ts
  - src/react-query/employeePaymentMethodDeleteBankAccount.ts
  - src/react-query/employeePaymentMethodGet.ts
  - src/react-query/employeePaymentMethodUpdate.ts
  - src/react-query/employeePaymentMethodUpdateBankAccount.ts
  - src/react-query/employeePaymentMethodsGetBankAccounts.ts
  - src/react-query/employeeTaxSetupGetFederalTaxes.ts
  - src/react-query/employeeTaxSetupGetStateTaxes.ts
  - src/react-query/employeeTaxSetupUpdateFederalTaxes.ts
  - src/react-query/employeeTaxSetupUpdateStateTaxes.ts
  - src/react-query/employeesCreate.ts
  - src/react-query/employeesCreateHistorical.ts
  - src/react-query/employeesDelete.ts
  - src/react-query/employeesGet.ts
  - src/react-query/employeesGetCustomFields.ts
  - src/react-query/employeesGetOnboardingStatus.ts
  - src/react-query/employeesGetTimeOffActivities.ts
  - src/react-query/employeesList.ts
  - src/react-query/employeesUpdate.ts
  - src/react-query/employeesUpdateOnboardingDocumentsConfig.ts
  - src/react-query/employeesUpdateOnboardingStatus.ts
  - src/react-query/eventsGet.ts
  - src/react-query/externalPayrollsCalculateTaxes.ts
  - src/react-query/externalPayrollsCreate.ts
  - src/react-query/externalPayrollsDelete.ts
  - src/react-query/externalPayrollsFinalizeTaxLiabilities.ts
  - src/react-query/externalPayrollsGet.ts
  - src/react-query/externalPayrollsListTaxLiabilities.ts
  - src/react-query/externalPayrollsRetrieve.ts
  - src/react-query/externalPayrollsUpdate.ts
  - src/react-query/externalPayrollsUpdateTaxLiabilities.ts
  - src/react-query/federalTaxDetailsGet.ts
  - src/react-query/federalTaxDetailsUpdate.ts
  - src/react-query/flowsCreate.ts
  - src/react-query/garnishmentsCreate.ts
  - src/react-query/garnishmentsGet.ts
  - src/react-query/garnishmentsGetChildSupportData.ts
  - src/react-query/garnishmentsList.ts
  - src/react-query/garnishmentsUpdate.ts
  - src/react-query/generatedDocumentsGet.ts
  - src/react-query/historicalEmployeesUpdate.ts
  - src/react-query/holidayPayPoliciesAddEmployees.ts
  - src/react-query/holidayPayPoliciesCreate.ts
  - src/react-query/holidayPayPoliciesDelete.ts
  - src/react-query/holidayPayPoliciesGet.ts
  - src/react-query/holidayPayPoliciesRemoveEmployees.ts
  - src/react-query/holidayPayPoliciesUpdate.ts
  - src/react-query/i9VerificationCreateDocuments.ts
  - src/react-query/i9VerificationDeleteDocument.ts
  - src/react-query/i9VerificationEmployerSign.ts
  - src/react-query/i9VerificationGetAuthorization.ts
  - src/react-query/i9VerificationGetDocumentOptions.ts
  - src/react-query/i9VerificationGetDocuments.ts
  - src/react-query/i9VerificationUpdate.ts
  - src/react-query/index.ts
  - src/react-query/industrySelectionGet.ts
  - src/react-query/industrySelectionUpdate.ts
  - src/react-query/introspectionGetInfo.ts
  - src/react-query/introspectionRefreshToken.ts
  - src/react-query/invoicesGet.ts
  - src/react-query/jobsAndCompensationsCreateCompensation.ts
  - src/react-query/jobsAndCompensationsCreateJob.ts
  - src/react-query/jobsAndCompensationsDelete.ts
  - src/react-query/jobsAndCompensationsDeleteCompensation.ts
  - src/react-query/jobsAndCompensationsGetCompensation.ts
  - src/react-query/jobsAndCompensationsGetCompensations.ts
  - src/react-query/jobsAndCompensationsGetJob.ts
  - src/react-query/jobsAndCompensationsGetJobs.ts
  - src/react-query/jobsAndCompensationsUpdate.ts
  - src/react-query/jobsAndCompensationsUpdateCompensation.ts
  - src/react-query/locationsCreate.ts
  - src/react-query/locationsGet.ts
  - src/react-query/locationsGetMinimumWages.ts
  - src/react-query/locationsRetrieve.ts
  - src/react-query/locationsUpdate.ts
  - src/react-query/notificationsGetDetails.ts
  - src/react-query/paySchedulesAssign.ts
  - src/react-query/paySchedulesCreate.ts
  - src/react-query/paySchedulesGet.ts
  - src/react-query/paySchedulesGetAll.ts
  - src/react-query/paySchedulesGetAssignments.ts
  - src/react-query/paySchedulesGetPayPeriods.ts
  - src/react-query/paySchedulesGetPreview.ts
  - src/react-query/paySchedulesGetUnprocessedTerminationPeriods.ts
  - src/react-query/paySchedulesPreviewAssignment.ts
  - src/react-query/paySchedulesUpdate.ts
  - src/react-query/paymentConfigsGet.ts
  - src/react-query/paymentConfigsUpdate.ts
  - src/react-query/payrollsCalculate.ts
  - src/react-query/payrollsCalculateGrossUp.ts
  - src/react-query/payrollsCancel.ts
  - src/react-query/payrollsCreateOffCycle.ts
  - src/react-query/payrollsDelete.ts
  - src/react-query/payrollsGeneratePrintableChecks.ts
  - src/react-query/payrollsGet.ts
  - src/react-query/payrollsGetApprovedReversals.ts
  - src/react-query/payrollsGetBlockers.ts
  - src/react-query/payrollsGetPayStub.ts
  - src/react-query/payrollsGetPayStubs.ts
  - src/react-query/payrollsGetReceipt.ts
  - src/react-query/payrollsList.ts
  - src/react-query/payrollsPrepare.ts
  - src/react-query/payrollsSkip.ts
  - src/react-query/payrollsSubmit.ts
  - src/react-query/payrollsUpdate.ts
  - src/react-query/recoveryCasesGet.ts
  - src/react-query/recoveryCasesRedebit.ts
  - src/react-query/reportsCreateCustom.ts
  - src/react-query/reportsGet.ts
  - src/react-query/reportsGetTemplate.ts
  - src/react-query/signatoriesCreate.ts
  - src/react-query/signatoriesDelete.ts
  - src/react-query/signatoriesInvite.ts
  - src/react-query/signatoriesList.ts
  - src/react-query/signatoriesUpdate.ts
  - src/react-query/taxRequirementsGet.ts
  - src/react-query/taxRequirementsGetAll.ts
  - src/react-query/taxRequirementsUpdateState.ts
  - src/react-query/timeOffPoliciesAddEmployees.ts
  - src/react-query/timeOffPoliciesCalculateAccruingTimeOffHours.ts
  - src/react-query/timeOffPoliciesCreate.ts
  - src/react-query/timeOffPoliciesDeactivate.ts
  - src/react-query/timeOffPoliciesGet.ts
  - src/react-query/timeOffPoliciesGetAll.ts
  - src/react-query/timeOffPoliciesRemoveEmployees.ts
  - src/react-query/timeOffPoliciesUpdate.ts
  - src/react-query/timeOffPoliciesUpdateBalance.ts
  - src/react-query/webhooksCreateSubscription.ts
  - src/react-query/webhooksDeleteSubscription.ts
  - src/react-query/webhooksGetSubscription.ts
  - src/react-query/webhooksListSubscriptions.ts
  - src/react-query/webhooksRequestVerificationToken.ts
  - src/react-query/webhooksUpdateSubscription.ts
  - src/react-query/webhooksVerify.ts
  - src/react-query/wireInRequestsGet.ts
  - src/react-query/wireInRequestsList.ts
  - src/react-query/wireInRequestsSubmit.ts
  - src/sdk/achtransactions.ts
  - src/sdk/bankaccounts.ts
  - src/sdk/companies.ts
  - src/sdk/companyattachment.ts
  - src/sdk/companyattachments.ts
  - src/sdk/companybenefits.ts
  - src/sdk/companyforms.ts
  - src/sdk/contractordocuments.ts
  - src/sdk/contractorforms.ts
  - src/sdk/contractorpaymentgroups.ts
  - src/sdk/contractorpaymentmethod.ts
  - src/sdk/contractorpaymentmethods.ts
  - src/sdk/contractorpayments.ts
  - src/sdk/contractors.ts
  - src/sdk/departments.ts
  - src/sdk/earningtypes.ts
  - src/sdk/employeeaddresses.ts
  - src/sdk/employeebenefits.ts
  - src/sdk/employeeemployments.ts
  - src/sdk/employeeforms.ts
  - src/sdk/employeepaymentmethod.ts
  - src/sdk/employeepaymentmethods.ts
  - src/sdk/employees.ts
  - src/sdk/employeetaxsetup.ts
  - src/sdk/events.ts
  - src/sdk/externalpayrolls.ts
  - src/sdk/federaltaxdetails.ts
  - src/sdk/flows.ts
  - src/sdk/garnishments.ts
  - src/sdk/generateddocuments.ts
  - src/sdk/historicalemployees.ts
  - src/sdk/holidaypaypolicies.ts
  - src/sdk/i9verification.ts
  - src/sdk/industryselection.ts
  - src/sdk/introspection.ts
  - src/sdk/invoices.ts
  - src/sdk/jobsandcompensations.ts
  - src/sdk/locations.ts
  - src/sdk/notifications.ts
  - src/sdk/paymentconfigs.ts
  - src/sdk/payrolls.ts
  - src/sdk/payschedules.ts
  - src/sdk/recoverycases.ts
  - src/sdk/reports.ts
  - src/sdk/sdk.ts
  - src/sdk/signatories.ts
  - src/sdk/taxrequirements.ts
  - src/sdk/timeoffpolicies.ts
  - src/sdk/webhooks.ts
  - src/sdk/wireinrequests.ts
  - src/types/async.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  get-v1-token-info:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"scope": "companies:read companies:write employees:read", "resource": {"type": "Company", "uuid": "5eca5127-6048-43ad-91ee-b56a0c34bc85"}, "resource_owner": {"type": "CompanyAdmin", "uuid": "367871c2-3f70-4874-adc9-f1736647e8e1"}}
  refresh-access-token:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"client_id": "<id>", "client_secret": "<value>", "refresh_token": "<value>", "grant_type": "<value>"}
      responses:
        "200":
          application/json: {"access_token": "737HdeXfIqgx-NfaUFRuhV7JDe6ns6ptanJSMuQzjlc", "token_type": "bearer", "expires_in": 7200, "refresh_token": "iEjL96L9Pndwmi-xVX3Q-xbrvvhnjHYGX87sopgGJ8E", "created_at": "1732033824", "scope": "ach_transactions:read benefits:read companies:read"}
  post-v1-partner-managed-companies:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Frank", "last_name": "Ocean", "email": "frank@example.com", "phone": "2345558899"}, "company": {"name": "Frank's Ocean, LLC", "trade_name": "Frank’s Ocean", "ein": "123456789", "contractor_only": false}}
      responses:
        "200":
          application/json: {"access_token": "de6780bc506a0446309bd9362820ba8aed28aa506c71eedbe1c5c4f9dd350e54", "refresh_token": "8257e65c97202ed1726cf9571600918f3bffb2544b26e00a61df9897668c33a1", "company_uuid": "d525dd21-ba6e-482c-be15-c2c7237f1364", "expires_in": 7200}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Gail", "last_name": "Stracke", "email": "Emanuel.McClure@gmail.com"}, "company": {"name": "<value>"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Gretchen", "last_name": "Vandervort", "email": "Giuseppe_Turcotte@yahoo.com"}, "company": {"name": "<value>"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"user": {"first_name": "Dominic", "last_name": "Bins", "email": "Maxime41@hotmail.com"}, "company": {"name": "<value>"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"ein": "00-0000001", "entity_type": "C-Corporation", "contractor_only": false, "tier": "core", "is_suspended": false, "company_status": "Approved", "uuid": "c7a07c73-a703-4462-9343-1b181182b6e0", "name": "Shoppe Studios LLC", "slug": "record-shoppe", "trade_name": "Record Shoppe", "is_partner_managed": false, "pay_schedule_type": "by_department", "join_date": "2023-03-01", "funding_type": "ach", "locations": [{"street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true}, {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": true}], "compensations": {"hourly": [{"name": "Overtime", "multiple": 1.5}, {"name": "Double overtime", "multiple": 2}, {"name": "Regular", "multiple": 1}, {"name": "Outstanding vacation", "multiple": 1}, {"name": "Holiday", "multiple": 1}, {"name": "Emergency sick - self care", "multiple": 1}, {"name": "Emergency sick - caring for others", "multiple": 1}, {"name": "FMLA Public Health Emergency Leave", "multiple": 1}, {"name": "Regular Hours", "multiple": 1}], "fixed": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Severance"}, {"name": "Minimum Wage Adjustment"}, {"name": "Reimbursement"}], "paid_time_off": [{"name": "Vacation Hours"}, {"name": "Sick Hours"}, {"name": "Holiday Hours"}]}, "primary_signatory": {"uuid": "8a2ed9c2-9d1e-443a-8e56-a490d8bf73bb", "first_name": "Alda", "middle_initial": "", "last_name": "Carter", "phone": "1-565-710-7558", "email": "louie.hessel7757869450111547@zemlak.biz", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}, "primary_payroll_admin": {"first_name": "Ian", "last_name": "Labadie", "phone": "1-565-710-7559", "email": "louie.hessel7757869450111547@zemlak.biz"}}
  put-v1-companies:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": false}
      responses:
        "200":
          application/json: {"ein": "00-0000001", "entity_type": "C-Corporation", "contractor_only": false, "tier": "core", "is_suspended": false, "company_status": "Approved", "uuid": "c7a07c73-a703-4462-9343-1b181182b6e0", "name": "Shoppe Studios LLC", "slug": "record-shoppe", "trade_name": "Record Shoppe", "is_partner_managed": false, "pay_schedule_type": "by_department", "join_date": "2023-03-01", "funding_type": "ach", "locations": [{"street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true}, {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": true}], "compensations": {"hourly": [{"name": "Overtime", "multiple": 1.5}, {"name": "Double overtime", "multiple": 2}, {"name": "Regular", "multiple": 1}, {"name": "Outstanding vacation", "multiple": 1}, {"name": "Holiday", "multiple": 1}, {"name": "Emergency sick - self care", "multiple": 1}, {"name": "Emergency sick - caring for others", "multiple": 1}, {"name": "FMLA Public Health Emergency Leave", "multiple": 1}, {"name": "Regular Hours", "multiple": 1}], "fixed": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Severance"}, {"name": "Minimum Wage Adjustment"}, {"name": "Reimbursement"}], "paid_time_off": [{"name": "Vacation Hours"}, {"name": "Sick Hours"}, {"name": "Holiday Hours"}]}, "primary_signatory": {"uuid": "8a2ed9c2-9d1e-443a-8e56-a490d8bf73bb", "first_name": "Alda", "middle_initial": "", "last_name": "Carter", "phone": "1-565-710-7558", "email": "louie.hessel7757869450111547@zemlak.biz", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}, "primary_payroll_admin": {"first_name": "Ian", "last_name": "Labadie", "phone": "1-565-710-7559", "email": "louie.hessel7757869450111547@zemlak.biz"}}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_only": true}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-v1-partner-managed-companies-company-uuid-migrate:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Benjamin_Kihn44@yahoo.com", "ip_address": "198.52.136.51", "external_user_id": "<id>"}
      responses:
        "200":
          application/json: {"company_uuid": "39abf9b9-650b-4e67-89a0-389dc6ee8a71", "migration_status": "success"}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Erna62@gmail.com", "ip_address": "02de:9982:167f:34c3:bfe5:a8ab:0cf3:5c87", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Lyric_Beer@yahoo.com", "ip_address": "217.131.195.126", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Johann_Thompson@hotmail.com", "ip_address": "82.48.167.70", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-partner-managed-companies-company_uuid-accept_terms_of_service:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "jsmith99@gmail.com", "ip_address": "192.168.1.2", "external_user_id": "2005648946132"}
      responses:
        "200":
          application/json: {"latest_terms_accepted": true}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Justine73@gmail.com", "ip_address": "168.91.169.217", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "William_Goldner@hotmail.com", "ip_address": "bf16:0638:d9db:4e8a:c5ee:c9cd:bb4f:1d5d", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Jerad_Dicki@yahoo.com", "ip_address": "61.236.253.221", "external_user_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-partner-managed-companies-company_uuid-retrieve_terms_of_service:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "jsmith99@gmail.com"}
      responses:
        "200":
          application/json: {"latest_terms_accepted": true}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Erika_Schuster@yahoo.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Sarina_Hand68@yahoo.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Katheryn_Ernser@hotmail.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-companies-company_id-admins:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "John", "last_name": "Smith", "email": "jsmith99@gmail.com"}
      responses:
        "200":
          application/json: {"uuid": "5de11791-98fd-4587-9ed0-d5d804b8e647", "email": "jsmith99@gmail.com", "first_name": "John", "last_name": "Smith"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Guillermo", "last_name": "Koch", "email": "Justine_Gusikowski92@yahoo.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Jaquelin", "last_name": "Leannon", "email": "Neil_Parisian@hotmail.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Jessika", "last_name": "Hudson", "email": "Cornell_Monahan86@hotmail.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-admins:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "987058cc-23ee-46e9-81ef-5cee086cceca", "email": "Katherine@acmecorp.com", "first_name": "Katherine", "last_name": "Johnson"}, {"uuid": "5de11791-98fd-4587-9ed0-d5d804b8e647", "email": "Anita@acmecorp.com", "first_name": "Anita", "last_name": "Borg"}]
  get-v1-company-onboarding-status:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        query:
          additional_steps: "external_payroll"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2", "onboarding_completed": false, "onboarding_steps": [{"title": "Add Your Company's Addresses", "id": "add_addresses", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Enter Your Federal Tax Information", "id": "federal_tax_setup", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Select Industry", "id": "select_industry", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Add Your Bank Account", "id": "add_bank_info", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Add Your Employees", "id": "add_employees", "required": true, "completed": true, "skippable": true, "requirements": ["add_addresses"]}, {"title": "Enter Your State Tax Information", "id": "state_setup", "required": true, "completed": false, "skippable": false, "requirements": ["add_addresses", "add_employees"]}, {"title": "Select a Pay Schedule", "id": "payroll_schedule", "required": true, "completed": false, "skippable": false, "requirements": []}, {"title": "Sign Documents", "id": "sign_all_forms", "required": true, "completed": false, "skippable": false, "requirements": ["add_employees", "federal_tax_setup", "state_setup", "add_bank_info", "payroll_schedule"]}, {"title": "Verify Your Bank Account", "id": "verify_bank_info", "required": true, "completed": false, "skippable": false, "requirements": ["add_bank_info"]}]}
  get-v1-company-finish-onboarding:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2", "onboarding_completed": true, "onboarding_steps": [{"title": "Add Your Company's Addresses", "id": "add_addresses", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Enter Your Federal Tax Information", "id": "federal_tax_setup", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Select Industry", "id": "select_industry", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Add Your Bank Account", "id": "add_bank_info", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Add Your Employees", "id": "add_employees", "required": true, "completed": true, "skippable": true, "requirements": ["add_addresses"]}, {"title": "Enter Your State Tax Information", "id": "state_setup", "required": true, "completed": true, "skippable": false, "requirements": ["add_addresses", "add_employees"]}, {"title": "Select a Pay Schedule", "id": "payroll_schedule", "required": true, "completed": true, "skippable": false, "requirements": []}, {"title": "Sign Documents", "id": "sign_all_forms", "required": true, "completed": true, "skippable": false, "requirements": ["add_employees", "federal_tax_setup", "state_setup", "add_bank_info", "payroll_schedule"]}, {"title": "Verify Your Bank Account", "id": "verify_bank_info", "required": true, "completed": true, "skippable": false, "requirements": ["add_bank_info"]}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-custom_fields:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"custom_fields": [{"uuid": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "selection_options": null}, {"uuid": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "selection_options": null}, {"uuid": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "selection_options": ["apple", "banana", "orange"]}]}
  get-invoices-invoice-period:
    example:
      parameters:
        path:
          invoice_period: "2020-01"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"active_companies": [{"company_uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8", "active_employees": 5, "active_contractors": 3, "initial_invoice_period": "2022-01"}, {"company_uuid": "9b37429c-e540-40fb-86b3-738ca9af65c7", "active_employees": 0, "active_contractors": 1, "initial_invoice_period": "2023-05"}]}
    Basic:
      parameters:
        path:
          invoice_period: "2020-01"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          invoice_period: "2020-01"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          invoice_period: "2020-01"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-attachment:
    Example:
      parameters:
        path:
          company_id: "<id>"
          company_attachment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "name": "Company_Attachment_File.pdf", "category": "gep_notice", "upload_time": "2022-02-01T00:00:00.000Z"}
  get-v1-companies-attachment-url:
    Example:
      parameters:
        path:
          company_id: "<id>"
          company_attachment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"url": "https://s3.amazonaws.com/static.gusto.com/assets/uploaded_files/334721.pdf?parameter=daer8r3432423djklsdafaso"}
  get-v1-companies-attachments:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "5de11791-98fd-4587-9ed0-d5d804b8e647", "name": "Company_Attachment_File1.pdf", "category": "gep_notice", "upload_time": "2022-02-01T00:00:00.000Z"}, {"uuid": "987058cc-23ee-46e9-81ef-5cee086cceca", "name": "Company_Attachment_File2.pdf", "category": "gep_notice", "upload_time": "2022-02-01T00:00:00.000Z"}]
  post-v1-companies-attachment:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        multipart/form-data: {"document": {"": "x-file: example.file"}, "category": "gep_notice"}
      responses:
        "201":
          application/json: {"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "name": "Company_Attachment_File.pdf", "category": "gep_notice", "upload_time": "2022-02-01T00:00:00.000Z"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        multipart/form-data: {"document": {"": "x-file: example.file"}, "category": "compliance"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        multipart/form-data: {"document": {"": "x-file: example.file"}, "category": "gep_notice"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        multipart/form-data: {"document": {"": "x-file: example.file"}, "category": "gep_notice"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-federal_tax_details:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "5521489cc7c93732300805dcf87a5fd3", "tax_payer_type": "S-Corporation", "taxable_as_scorp": true, "filing_form": "941", "has_ein": true, "ein_verified": true, "legal_name": "Company Name LLC", "effective_date": "2024-01-01", "deposit_schedule": "Semiweekly"}
  put-v1-companies-company_id-federal_tax_details:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"legal_name": "Acme Corp.", "tax_payer_type": "LLP", "filing_form": "944", "taxable_as_scorp": false, "version": "6cb95e00540706ca48d4577b3c839fbe"}
      responses:
        "200":
          application/json: {"version": "5521489cc7c93732300805dcf87a5fd3", "tax_payer_type": "S-Corporation", "taxable_as_scorp": true, "filing_form": "941", "has_ein": true, "ein_verified": true, "legal_name": "Company Name LLC", "effective_date": "2024-01-01", "deposit_schedule": "Semiweekly"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-company-industry:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"company_uuid": "423dd616-6dbc-4724-938a-403f6217a933", "naics_code": "611420", "sic_codes": ["8243"], "title": "Computer Training"}
  put-v1-company-industry:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "Computer Training", "naics_code": "611420", "sic_codes": ["8243"]}
      responses:
        "200":
          application/json: {"company_uuid": "423dd616-6dbc-4724-938a-403f6217a933", "naics_code": "611420", "sic_codes": ["8243"], "title": "Computer Training"}
        "201":
          application/json: {"company_uuid": "423dd616-6dbc-4724-938a-403f6217a933", "naics_code": "611420", "sic_codes": ["8243"], "title": "Computer Training"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"naics_code": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"naics_code": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"naics_code": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-company-signatories:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"ssn": "<value>", "first_name": "Jed", "last_name": "Johnson", "email": "Annie.Wiegand16@gmail.com", "title": "<value>", "phone": "857-932-0220 x31016", "birthday": "<value>", "home_address": {"street_1": "<value>", "city": "North Lilly", "state": "North Carolina", "zip": "05065"}}
      responses:
        "201":
          application/json: {"uuid": "f8c653dc-0094-41fb-8670-45d6399afade", "first_name": "Bob", "last_name": "Johnson", "title": "Owner", "phone": "4239879876", "email": "olin.okuneva@denesik.us", "birthday": "2002-10-31", "is_admin": false, "has_ssn": true, "version": "49ea586f528411f5cfadfd54452b2423", "identity_verification_status": "Skipped", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}
        "200":
          application/json: {"uuid": "f8c653dc-0094-41fb-8670-45d6399afade", "first_name": "Bob", "last_name": "Johnson", "title": "Owner", "phone": "4239879876", "email": "olin.okuneva@denesik.us", "birthday": "2002-10-31", "is_admin": false, "has_ssn": true, "version": "49ea586f528411f5cfadfd54452b2423", "identity_verification_status": "Skipped", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"ssn": "<value>", "first_name": "Sven", "last_name": "Kunze", "email": "Otho78@gmail.com", "title": "<value>", "phone": "545.244.3901", "birthday": "<value>", "home_address": {"street_1": "<value>", "city": "New Josiane", "state": "Kentucky", "zip": "11880"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"ssn": "<value>", "first_name": "Tania", "last_name": "Lindgren", "email": "Clotilde.Hermann67@gmail.com", "title": "<value>", "phone": "(952) 347-9826 x26246", "birthday": "<value>", "home_address": {"street_1": "<value>", "city": "Montanafield", "state": "Colorado", "zip": "82730-9658"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"ssn": "<value>", "first_name": "Winfield", "last_name": "Grady-Cruickshank", "email": "Paula_Weber@hotmail.com", "title": "<value>", "phone": "(773) 321-8929", "birthday": "<value>", "home_address": {"street_1": "<value>", "city": "Lakeland", "state": "Louisiana", "zip": "12614-6739"}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_uuid-signatories:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "f8c653dc-0094-41fb-8670-45d6399afade", "first_name": "Bob", "last_name": "Johnson", "title": "Owner", "phone": "4239879876", "email": "olin.okuneva@denesik.us", "birthday": "2002-10-31", "is_admin": false, "has_ssn": true, "version": "49ea586f528411f5cfadfd54452b2423", "identity_verification_status": "Skipped", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}]
  post-v1-companies-company_uuid-signatories-invite:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Maureen_Wyman@yahoo.com"}
      responses:
        "201":
          application/json: {"uuid": "f8c653dc-0094-41fb-8670-45d6399afade", "first_name": "Bob", "last_name": "Johnson", "title": "Owner", "phone": "4239879876", "email": "olin.okuneva@denesik.us", "birthday": "2002-10-31", "is_admin": false, "has_ssn": true, "version": "49ea586f528411f5cfadfd54452b2423", "identity_verification_status": "Skipped", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Fidel_Witting91@gmail.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "David.Prosacco54@yahoo.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"email": "Cassie.Corwin26@yahoo.com"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-v1-companies-company_uuid-signatories-signatory_uuid:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          signatory_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "f8c653dc-0094-41fb-8670-45d6399afade", "first_name": "Bob", "last_name": "Johnson", "title": "Owner", "phone": "4239879876", "email": "olin.okuneva@denesik.us", "birthday": "2002-10-31", "is_admin": false, "has_ssn": true, "version": "49ea586f528411f5cfadfd54452b2423", "identity_verification_status": "Skipped", "home_address": {"street_1": "524 Roob Divide", "street_2": "Suite 565", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
          signatory_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
          signatory_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
          signatory_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-companies-company_uuid-signatories-signatory_uuid:
    speakeasy-default-delete-v1-companies-company-uuid-signatories-signatory-uuid:
      parameters:
        path:
          company_uuid: "<id>"
          signatory_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-v1-company-flows:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"flow_type": "company_onboarding"}
      responses:
        "201":
          application/json: {"url": "https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ"}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"flow_type": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"flow_type": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"flow_type": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-companies-company_id-locations:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "8009360383", "street_1": "425 2nd Street", "street_2": "Suite 602", "city": "San Francisco", "state": "CA", "zip": "94107"}
      responses:
        "201":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "version": "7d9753112507b9dda4fb97910f39b06e", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "5825710808", "street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "741.279.0107 x857", "street_1": "<value>", "city": "Grand Island", "state": "Illinois", "zip": "22031"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "(263) 266-2050", "street_1": "<value>", "city": "Lubowitzside", "state": "Minnesota", "zip": "27179"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"phone_number": "824-550-4439 x01255", "street_1": "<value>", "city": "South Barrett", "state": "Georgia", "zip": "80985-0183"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-locations:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "version": "7d9753112507b9dda4fb97910f39b06e", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "5825710808", "street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00"}, {"uuid": "fa94a2fd-11a8-4024-87ff-85c587d9d2b4", "version": "15e6b9680e00f3122729e64e3cef3224", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "2866070827", "street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": true, "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00"}]
  get-v1-locations-location_id:
    Example:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "version": "7d9753112507b9dda4fb97910f39b06e", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "5825710808", "street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00"}
  put-v1-locations-location_id:
    Example:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1928d0c378e519e9c03fb959bc959a6b", "phone_number": "8009360383", "street_1": "425 2nd Street", "street_2": "Suite 602", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA"}
      responses:
        "200":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "version": "7d9753112507b9dda4fb97910f39b06e", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "phone_number": "5825710808", "street_1": "412 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "mailing_address": false, "filing_address": false, "created_at": "2023-09-12T16:42:25.000-07:00", "updated_at": "2023-09-12T16:42:25.000-07:00"}
    Basic:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          location_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-locations-location_uuid-minimum_wages:
    Example:
      parameters:
        path:
          location_uuid: "<id>"
        query:
          effective_date: "2020-01-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "70c523ff-c71e-4474-9c83-a4ea51bd54a8", "wage": "13.0", "wage_type": "Regular", "effective_date": "2022-01-01", "authority": "State", "notes": "Employers with 6 or more employees"}]
  post-v1-companies-company_id-bank-accounts:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"routing_number": "115092013", "account_number": "9775014007", "account_type": "Checking"}
      responses:
        "201":
          application/json: {"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36", "account_type": "Checking", "routing_number": "851070439", "hidden_account_number": "XXXX4087", "verification_status": "verified", "verification_type": "bank_deposits", "name": "Employer Funding Account"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-bank-accounts:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36", "account_type": "Checking", "routing_number": "851070439", "hidden_account_number": "XXXX4087", "verification_status": "verified", "verification_type": "bank_deposits", "name": "Employer Funding Account"}]
  put-v1-companies-company_id-bank-accounts-verify:
    Example:
      parameters:
        path:
          bank_account_uuid: "<id>"
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"deposit_1": 0.02, "deposit_2": 0.42}
      responses:
        "200":
          application/json: {"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36", "account_type": "Checking", "routing_number": "851070439", "hidden_account_number": "XXXX4087", "verification_status": "verified", "verification_type": "bank_deposits", "name": "Employer Funding Account"}
    Basic:
      parameters:
        path:
          bank_account_uuid: "<id>"
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"deposit_1": 7888.92, "deposit_2": 1895.95}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          bank_account_uuid: "<id>"
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"deposit_1": 1870.97, "deposit_2": 2271.38}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          bank_account_uuid: "<id>"
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"deposit_1": 7567.55, "deposit_2": 3940.54}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-plaid-processor_token:
    Create a company bank account:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"owner_type": "Company", "owner_id": "ef279fbd-0fc6-4cf1-a977-6939d621c429", "processor_token": "processor-sandbox-0asd1-a92nc"}
      responses:
        "201":
          application/json: {"uuid": "493064d9-7add-4beb-9379-b10d2aea7313"}
        "422": {}
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"owner_type": "Company", "owner_id": "<id>", "processor_token": "<value>"}
      responses:
        "201":
          application/json: {"uuid": "1263eae5-4411-48d9-bd6d-18ed93082e65", "company_uuid": "e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36", "account_type": "Checking", "routing_number": "851070439", "hidden_account_number": "XXXX4087", "verification_status": "verified", "verification_type": "plaid_external", "name": "Employer Funding Account"}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"owner_type": "Company", "owner_id": "<id>", "processor_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"owner_type": "Company", "owner_id": "<id>", "processor_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"owner_type": "Company", "owner_id": "<id>", "processor_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-external-payroll:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2022-06-01", "payment_period_start_date": "2022-05-15", "payment_period_end_date": "2022-05-30"}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9", "check_date": "2022-06-03T00:00:00Z", "payment_period_start_date": "2022-05-15T00:00:00Z", "payment_period_end_date": "2022-05-30T00:00:00Z", "status": "unprocessed", "external_payroll_items": [{"employee_uuid": "44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca", "earnings": [{"amount": "10000.0", "hours": "0.0", "earning_type": "CompanyPayType", "earning_id": 1}, {"amount": "500.0", "hours": "0.0", "earning_type": "CompanyEarningType", "earning_id": 4}], "benefits": [{"benefit_id": 22, "company_contribution_amount": "100.0", "employee_deduction_amount": "50.0"}, {"benefit_id": 25, "company_contribution_amount": "0.0", "employee_deduction_amount": "300.0"}], "taxes": [{"tax_id": 1, "amount": "400.0"}, {"tax_id": 2, "amount": "60.0"}]}], "applicable_earnings": [{"earning_type": "CompanyPayType", "earning_id": 1, "name": "Regular Wages", "input_type": "amount", "category": "default"}, {"earning_type": "CompanyEarningType", "earning_id": 4, "name": "Cash Tips", "input_type": "amount", "category": "default"}], "applicable_benefits": [{"id": 22, "description": "Kaiser", "active": true}, {"id": 25, "description": "HSA", "active": true}], "applicable_taxes": [{"id": 1, "name": "Federal Income Tax", "employer_tax": false, "resident_tax": false}, {"id": 2, "name": "Social Security", "employer_tax": false, "resident_tax": false}], "metadata": {"deletable": true}}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "<value>", "payment_period_start_date": "<value>", "payment_period_end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "<value>", "payment_period_start_date": "<value>", "payment_period_end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "<value>", "payment_period_start_date": "<value>", "payment_period_end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-company-external-payrolls:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9", "check_date": "2022-06-03T00:00:00Z", "payment_period_start_date": "2022-05-15T00:00:00Z", "payment_period_end_date": "2022-05-30T00:00:00Z", "status": "unprocessed"}]
  get-v1-external-payroll:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9", "check_date": "2022-06-03T00:00:00Z", "payment_period_start_date": "2022-05-15T00:00:00Z", "payment_period_end_date": "2022-05-30T00:00:00Z", "status": "unprocessed", "external_payroll_items": [{"employee_uuid": "44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca", "earnings": [{"amount": "10000.0", "hours": "0.0", "earning_type": "CompanyPayType", "earning_id": 1}, {"amount": "500.0", "hours": "0.0", "earning_type": "CompanyEarningType", "earning_id": 4}], "benefits": [{"benefit_id": 22, "company_contribution_amount": "100.0", "employee_deduction_amount": "50.0"}, {"benefit_id": 25, "company_contribution_amount": "0.0", "employee_deduction_amount": "300.0"}], "taxes": [{"tax_id": 1, "amount": "400.0"}, {"tax_id": 2, "amount": "60.0"}]}], "applicable_earnings": [{"earning_type": "CompanyPayType", "earning_id": 1, "name": "Regular Wages", "input_type": "amount", "category": "default"}, {"earning_type": "CompanyEarningType", "earning_id": 4, "name": "Cash Tips", "input_type": "amount", "category": "default"}], "applicable_benefits": [{"id": 22, "description": "Kaiser", "active": true}, {"id": 25, "description": "HSA", "active": true}], "applicable_taxes": [{"id": 1, "name": "Federal Income Tax", "employer_tax": false, "resident_tax": false}, {"id": 2, "name": "Social Security", "employer_tax": false, "resident_tax": false}], "metadata": {"deletable": true}}
  delete-v1-external-payroll:
    speakeasy-default-delete-v1-external-payroll:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  put-v1-external-payroll:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"replace_fields": true, "external_payroll_items": [{"employee_uuid": "403c6ee3-5f58-40ef-a117-ff7175cd9ee3", "earnings": [{"hours": "0.0", "amount": "200.00", "earning_id": 1, "earning_type": "CompanyPayType"}, {"hours": "0.0", "amount": "5000.00", "earning_id": 2, "earning_type": "CompanyEarningType"}], "benefits": [{"company_contribution_amount": "300.0", "employee_deduction_amount": "300.0", "benefit_id": 10}, {"company_contribution_amount": "50.0", "employee_deduction_amount": "100.0", "benefit_id": 21}], "taxes": [{"amount": "20.0", "tax_id": 1}, {"amount": "100.0", "tax_id": 2}]}]}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "company_uuid": "bcb305b0-2855-4025-8d22-e484a9e6b7c9", "check_date": "2022-06-03T00:00:00Z", "payment_period_start_date": "2022-05-15T00:00:00Z", "payment_period_end_date": "2022-05-30T00:00:00Z", "status": "unprocessed", "external_payroll_items": [{"employee_uuid": "44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca", "earnings": [{"amount": "10000.0", "hours": "0.0", "earning_type": "CompanyPayType", "earning_id": 1}, {"amount": "500.0", "hours": "0.0", "earning_type": "CompanyEarningType", "earning_id": 4}], "benefits": [{"benefit_id": 22, "company_contribution_amount": "100.0", "employee_deduction_amount": "50.0"}, {"benefit_id": 25, "company_contribution_amount": "0.0", "employee_deduction_amount": "300.0"}], "taxes": [{"tax_id": 1, "amount": "400.0"}, {"tax_id": 2, "amount": "60.0"}]}], "applicable_earnings": [{"earning_type": "CompanyPayType", "earning_id": 1, "name": "Regular Wages", "input_type": "amount", "category": "default"}, {"earning_type": "CompanyEarningType", "earning_id": 4, "name": "Cash Tips", "input_type": "amount", "category": "default"}], "applicable_benefits": [{"id": 22, "description": "Kaiser", "active": true}, {"id": 25, "description": "HSA", "active": true}], "applicable_taxes": [{"id": 1, "name": "Federal Income Tax", "employer_tax": false, "resident_tax": false}, {"id": 2, "name": "Social Security", "employer_tax": false, "resident_tax": false}], "metadata": {"deletable": true}}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-external-payroll-calculate-taxes:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          external_payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"employee_uuid": "d21848d5-446f-48a8-9430-30fbefeabda4", "tax_suggestions": [{"tax_id": 1, "amount": "500.0"}, {"tax_id": 2, "amount": "100.0"}, {"tax_id": 4, "amount": "30.0"}]}]
  get-v1-tax-liabilities:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [[{"tax_id": 1, "tax_name": "Federal Income Tax", "last_unpaid_external_payroll_uuid": null, "possible_liabilities": [{"liability_amount": "0.0", "payroll_check_date": null, "external_payroll_uuid": null}, {"liability_amount": "3000.0", "payroll_check_date": "2022-06-01T00:00:00Z", "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"}]}], [{"tax_id": 2, "tax_name": "Social Security", "last_unpaid_external_payroll_uuid": null, "possible_liabilities": [{"liability_amount": "0.0", "payroll_check_date": null, "external_payroll_uuid": null}, {"liability_amount": "50.0", "payroll_check_date": "2022-06-01T00:00:00Z", "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"}]}]]
  put-v1-tax-liabilities:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"liability_selections": [{"tax_id": 1, "last_unpaid_external_payroll_uuid": "7985032c-ee3a-4e98-af27-d56551eb5f1c", "unpaid_liability_amount": 50}, {"tax_id": 2, "last_unpaid_external_payroll_uuid": "5ed14dbb-958f-47c8-b16e-c4fed82dc486", "unpaid_liability_amount": 400}, {"tax_id": 8, "last_unpaid_external_payroll_uuid": null, "unpaid_liability_amount": 0}]}
      responses:
        "200":
          application/json: [[{"tax_id": 1, "tax_name": "Federal Income Tax", "last_unpaid_external_payroll_uuid": null, "possible_liabilities": [{"liability_amount": "0.0", "payroll_check_date": null, "external_payroll_uuid": null}, {"liability_amount": "3000.0", "payroll_check_date": "2022-06-01T00:00:00Z", "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"}]}], [{"tax_id": 2, "tax_name": "Social Security", "last_unpaid_external_payroll_uuid": null, "possible_liabilities": [{"liability_amount": "0.0", "payroll_check_date": null, "external_payroll_uuid": null}, {"liability_amount": "50.0", "payroll_check_date": "2022-06-01T00:00:00Z", "external_payroll_uuid": "1bf1efe1-72d4-4e6e-a181-611f3ea66435"}]}]]
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-v1-tax-liabilities-finish:
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-company-payment-configs:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"company_uuid": "423dd616-6dbc-4724-938a-403f6217a933", "partner_uuid": "556f05d0-48e0-4c47-bce5-db9aea923043", "fast_payment_limit": "5000", "payment_speed": "2-day"}
  put-v1-company-payment-configs:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fast_payment_limit": "5000", "payment_speed": "2-day"}
      responses:
        "200":
          application/json: {"company_uuid": "423dd616-6dbc-4724-938a-403f6217a933", "partner_uuid": "556f05d0-48e0-4c47-bce5-db9aea923043", "fast_payment_limit": "5000", "payment_speed": "2-day"}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_speed": "2-day"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fast_payment_limit": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_speed": "2-day"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-companies-company_id-pay_schedules:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"frequency": "Twice per month", "anchor_pay_date": "2021-10-15", "anchor_end_of_pay_period": "2021-10-15", "day_1": 15, "day_2": 31, "custom_name": "demo pay schedule"}
      responses:
        "200":
          application/json: {"uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052", "frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08", "day_1": 15, "day_2": 31, "name": "Engineering", "custom_name": "A new monthly pay schedule", "auto_pilot": false, "active": true}
        "201":
          application/json: {"uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052", "frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08", "day_1": 15, "day_2": 31, "name": "Engineering", "custom_name": "A new monthly pay schedule", "auto_pilot": false, "active": true}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"frequency": "Every other week", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"frequency": "Every other week", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"frequency": "Every week", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-pay_schedules:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "2097fe08-407a-46d7-b35c-a32402a2355e", "frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08", "day_1": 15, "day_2": 31, "name": "Engineering", "custom_name": "Engineering department pay schedule", "auto_pilot": false, "active": true, "version": "68934a3e9455fa72420237eb05902327"}, {"uuid": "8fc9f556-74fa-4271-97f6-4bfbfc5a5352", "frequency": "Monthly", "anchor_pay_date": "2020-05-31", "day_1": 31, "day_2": null, "name": "Sales", "custom_name": "Sales department monthly schedule", "auto_pilot": false, "active": false, "version": "68934a3e9455fa72420237eb05902320"}, {"uuid": "0e07d35a-af11-4123-bfcb-4dd5f2f12ee1", "frequency": "Monthly", "anchor_pay_date": "2020-05-31", "day_1": 31, "day_2": null, "name": "Staff", "custom_name": "Staff department pay schedule", "auto_pilot": true, "active": false, "version": "68934a3e9455fa72420237eb05902323"}]
  get-v1-companies-company_id-pay_schedules-preview:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          frequency: "Monthly"
          anchor_pay_date: "2020-05-15"
          anchor_end_of_pay_period: "2020-05-08"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"pay_periods": [{"check_date": "2023-12-15T00:00:00Z", "run_payroll_by": "2023-12-13T00:00:00Z", "start_date": "2023-10-01T00:00:00Z", "end_date": "2023-12-31T00:00:00Z"}, {"check_date": "2024-03-15T00:00:00Z", "run_payroll_by": "2024-03-13T00:00:00Z", "start_date": "2024-01-01T00:00:00Z", "end_date": "2024-03-31T00:00:00Z"}, {"check_date": "2024-06-14T00:00:00Z", "run_payroll_by": "2024-06-12T00:00:00Z", "start_date": "2024-04-01T00:00:00Z", "end_date": "2024-06-30T00:00:00Z"}, {"check_date": "2024-09-13T00:00:00Z", "run_payroll_by": "2024-09-11T00:00:00Z", "start_date": "2024-07-01T00:00:00Z", "end_date": "2024-09-30T00:00:00Z"}], "holidays": ["2023-10-09T00:00:00Z", "2023-11-11T00:00:00Z", "2023-11-23T00:00:00Z", "2023-12-25T00:00:00Z", "2024-01-01T00:00:00Z", "2024-01-15T00:00:00Z", "2024-02-19T00:00:00Z", "2024-05-27T00:00:00Z", "2024-06-19T00:00:00Z", "2024-07-04T00:00:00Z", "2024-09-02T00:00:00Z"]}
  get-v1-companies-company_id-pay_schedules-pay_schedule_id:
    Example:
      parameters:
        path:
          company_id: "<id>"
          pay_schedule_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052", "frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08", "day_1": 15, "day_2": 31, "name": "Engineering", "custom_name": "A new monthly pay schedule", "auto_pilot": false, "active": true, "version": "68934a3e9455fa72420237eb05902327"}
  put-v1-companies-company_id-pay_schedules-pay_schedule_id:
    Example:
      parameters:
        path:
          company_id: "<id>"
          pay_schedule_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "68934a3e9455fa72420237eb05902327", "frequency": "Twice per month", "anchor_pay_date": "2021-10-15", "anchor_end_of_pay_period": "2021-10-15", "day_1": 15, "day_2": 31, "custom_name": "demo pay schedule", "auto_pilot": true}
      responses:
        "200":
          application/json: {"uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052", "frequency": "Twice per month", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08", "day_1": 15, "day_2": 31, "name": "Engineering", "custom_name": "A new monthly pay schedule", "auto_pilot": false, "active": true}
    Basic:
      parameters:
        path:
          company_id: "<id>"
          pay_schedule_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          pay_schedule_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          pay_schedule_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "anchor_pay_date": "2020-05-15", "anchor_end_of_pay_period": "2020-05-08"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-pay_periods:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          start_date: "2020-01-01"
          end_date: "2020-01-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"start_date": "2020-01-11", "end_date": "2020-01-24", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501", "payroll": {"payroll_uuid": "bfd8aad4-9c3f-4ca3-b072-a1b2b3ea689f", "check_date": "2020-01-30", "processed": true, "payroll_deadline": "2020-01-28", "payroll_type": "regular"}}, {"start_date": "2020-12-12", "end_date": "2020-12-25", "pay_schedule_uuid": "cb53db72-612f-4eb1-9b85-389e79cfa510", "payroll": {"payroll_uuid": "7ed29b45-4bb1-4d38-bd94-4d607d49fd21", "check_date": "2020-12-30", "processed": true, "payroll_deadline": "2020-12-28", "payroll_type": "regular"}}]
  get-v1-companies-company_id-unprocessed_termination_pay_periods:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"start_date": "2023-01-11", "end_date": "2023-01-24", "check_date": "2023-01-28", "debit_date": "2023-01-26", "employee_name": "Mary Warner", "employee_uuid": "094f6ded-a790-4651-87e6-4a7f15dec7c6", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, {"start_date": "2023-01-25", "end_date": "2023-02-07", "check_date": "2023-02-10", "debit_date": "2023-02-08", "employee_name": "Mary Warner", "employee_uuid": "094f6ded-a790-4651-87e6-4a7f15dec7c6", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}]
  get-v1-companies-company_id-pay_schedules-assignments:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"type": "by_employee", "employees": [{"employee_uuid": "f0238368-f2cf-43e2-9a07-b0265f2cec69", "pay_schedule_uuid": "c277ac52-9871-4a96-a1e6-0c449684602a"}]}
  post-v1-companies-company_id-pay_schedules-assignment_preview:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "by_employee", "employees": [{"employee_uuid": "f0238368-f2cf-43e2-9a07-b0265f2cec69", "pay_schedule_uuid": "c277ac52-9871-4a96-a1e6-0c449684602a"}]}
      responses:
        "200":
          application/json: {"type": "hourly_salaried", "employee_changes": [{"employee_uuid": "43b39ada-dc49-4879-9594-fe95f67ae434", "first_name": "Penny", "last_name": "Parker", "pay_frequency": "Twice per month — Salaried pay schedule", "first_pay_period": {"pay_schedule_uuid": "3f029a58-155d-4c30-8361-cc266b2c1f11", "start_date": "2023-07-01T00:00:00Z", "end_date": "2023-08-01T00:00:00Z", "check_date": "2023-08-02T00:00:00Z"}, "transition_pay_period": {"start_date": "2023-06-20T00:00:00Z", "end_date": "2023-06-30T00:00:00Z"}}]}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "hourly_salaried"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "hourly_salaried"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "single"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-companies-company_id-pay_schedules-assign:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "by_employee", "employees": [{"employee_uuid": "f0238368-f2cf-43e2-9a07-b0265f2cec69", "pay_schedule_uuid": "c277ac52-9871-4a96-a1e6-0c449684602a"}]}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "by_department"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "single"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "hourly_salaried"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-employees:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Soren", "middle_initial": "A", "last_name": "Kierkegaard", "preferred_first_name": "Angel", "date_of_birth": "1995-05-05", "email": "knight0faith@example.com", "ssn": "123456294"}
      responses:
        "201":
          application/json: {"uuid": "2593d737-d298-41b9-954f-79fed0af3fb4", "first_name": "Marc", "last_name": "Mertz", "eligible_paid_time_off": [{"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}], "payment_method": "Check"}
        "422": {}
    Create Employee Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Jed", "last_name": "Johnson"}
      responses:
        "201":
          application/json: {"uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e", "first_name": "Isom", "middle_initial": null, "last_name": "Jaskolski", "email": "dane7757869450111550@botsford.net", "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365", "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "version": "1c7ba9d62c8bafbfff998ffccad5d296", "department": "Stage Hand", "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "428a653a-0745-4db4-9c80-558288d416fa", "version": "6c0ed1521e8b86eb36bd4455a63a2dac", "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f", "hire_date": "2020-01-20", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [{"name": "Sick Hours", "policy_name": "Sick Policy", "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_method": "per_hour_worked", "accrual_period": "Year", "accrual_balance": "31.8", "maximum_accrual_balance": "240.0", "paid_at_termination": false}, {"name": "Vacation Hours", "policy_name": "Vacation Policy", "policy_uuid": "ab59de61-239f-4805-933b-0e3360ed291c", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_period": "Year", "accrual_balance": "77.8", "maximum_accrual_balance": "240.0", "paid_at_termination": true}], "terminations": [], "garnishments": [], "custom_fields": [{"id": "ee515986-f3ca-49da-b576-2691b95262f9", "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "value": "2", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "value": "md", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "value": "apple", "selection_options": ["apple", "banana", "orange"]}], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": "1234567890", "preferred_first_name": "Angel", "payment_method": "Check", "work_email": "angel.jaskolski@example.com"}
    Create Historical Employee Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Bria", "last_name": "Schinner"}
      responses:
        "201":
          application/json: {"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "first_name": "Karl", "middle_initial": null, "last_name": "Jaskolski", "email": null, "company_uuid": "3c69d228-a250-49b4-9946-24e4e4294da4", "manager_uuid": null, "version": "dedac972dd28945fcd6cd941723cc71a", "department": null, "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "f0be5480-7a15-4583-b0d0-789c02a1afe4", "version": "1c0722f3e090713b6a0db7c39904693e", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "hire_date": "2023-11-01", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "1a1faa42-274b-4440-b200-a5d81df14af2", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2023-11-01", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [{"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "version": "e6c865df784842196d411c1466b01686", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "active": false, "cancelable": true, "effective_date": "2023-12-31T00:00:00Z", "run_termination_payroll": false}], "garnishments": [], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Check", "work_email": null}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Valerie", "last_name": "Dach"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Astrid", "last_name": "Schumm"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Kyleigh", "last_name": "Will"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-employees:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "9779767c-6044-48e0-bf68-aeb370b9a2e7", "first_name": "Nicole", "middle_initial": "M", "last_name": "Boehm", "email": "kory7757869450111548@barton-hermiston.io", "company_uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2", "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "version": "414dedaca594b77135e0b8d2f398516d", "department": "Stage Hand", "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": "9d5e3ce5-ea8f-4885-90e5-7ebbed03f7c5", "i9_document": true}, "jobs": [{"uuid": "5d5e3ce5-ea8f-4885-90e5-7ebaed03f7c5", "version": "91179081a7309c9fbd31bb3cf7b9893e", "employee_uuid": "a987bce1-6d06-43f8-9978-9db886f479fb", "hire_date": "2020-01-20", "title": "Client Support Manager", "primary": true, "rate": "22.00", "payment_unit": "Hour", "current_compensation_uuid": "798a962f-0fcf-491e-9b71-cfa6a1db114f", "compensations": [{"uuid": "94f17a77-cfe5-436a-af94-422bbf8248ff", "version": "233f0096a8015e62d9795fadf1fd300d", "job_uuid": "64711ac0-83ff-4aaf-bec1-db72f5a44e56", "rate": "22.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [{"name": "Sick Hours", "policy_name": "Sick Policy", "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_method": "per_hour_worked", "accrual_period": "Year", "accrual_balance": "71.0", "maximum_accrual_balance": "240.0", "paid_at_termination": false}, {"name": "Vacation Hours", "policy_name": "Vacation Policy", "policy_uuid": "8b312f0e-30e7-4810-9c06-1177a6484f2d", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_period": "Year", "accrual_balance": "34.0", "maximum_accrual_balance": "240.0", "paid_at_termination": true}], "terminations": [], "garnishments": [], "date_of_birth": "1996-05-08", "has_ssn": true, "ssn": "", "phone": "1234567890", "preferred_first_name": "Vanessa", "payment_method": "Check", "work_email": "vanessa.boehm@example.com"}, {"uuid": "d7cb289a-af62-4120-9cd5-acda324b5c04", "first_name": "Maci", "middle_initial": "M", "last_name": "Cassin", "email": "claud_reinger7757869450111549@gutkowski.net", "company_uuid": "4522d043-5731-406d-a129-de1808042a32", "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "version": "e867459e1360fa71e78b88142923d341", "department": "Band", "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": "1d5e3ce5-ea8f-4885-90e5-7ebbed03f7c5", "i9_document": true}, "jobs": [{"uuid": "62a00cf7-342b-465e-a151-ecd295152be0", "version": "d0e719137f89ca3dd334dd4cc248ffbb", "employee_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "hire_date": "2020-01-20", "title": "Account Director", "primary": true, "rate": "78000.00", "payment_unit": "Year", "current_compensation_uuid": "93e5da92-173b-4faa-a0bd-d1a8dee68be0", "compensations": [{"uuid": "1bad5177-c4ed-432e-ab43-66055d40c3a5", "version": "994b75511d1debac5d7e2ddeae13679f", "job_uuid": "1214875b-f43d-4267-bf2f-a6d2c298ff3d", "rate": "78000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [{"name": "Sick Hours", "policy_name": "Sick Policy", "policy_uuid": "8b312f0e-30e7-4810-9c06-1177a6484f2d", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_method": "per_hour_worked", "accrual_period": "Year", "accrual_balance": "74.0", "maximum_accrual_balance": "240.0", "paid_at_termination": false}, {"name": "Vacation Hours", "policy_name": "Vacation Policy", "policy_uuid": "0d4c755e-50ac-4c54-b46e-81bdfa03da5b", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_period": "Year", "accrual_balance": "16.0", "maximum_accrual_balance": "240.0", "paid_at_termination": true}], "terminations": [], "garnishments": [], "custom_fields": [{"id": "ee515986-f3ca-49da-b576-2691b95262f9", "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "value": "2", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "value": "md", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "value": "apple", "selection_options": ["apple", "banana", "orange"]}], "date_of_birth": "1995-09-21", "has_ssn": true, "ssn": "", "phone": "1234567890", "preferred_first_name": "Denis", "payment_method": "Check", "work_email": "denis.cassin@example.com"}]
  post-v1-historical_employees:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Soren", "middle_initial": "A", "last_name": "Kierkegaard", "preferred_first_name": "Angel", "date_of_birth": "1995-05-05T00:00:00Z", "ssn": "123456294", "work_address": {"location_uuid": "1da85d35-1910-4d5e-8e94-39e8cdfe8c9a"}, "home_address": {"street_1": "300 3rd Street", "street_2": null, "city": "San Francisco", "state": "CA", "zip": "94107"}, "termination": {"effective_date": "2022-09-15T00:00:00Z"}, "job": {"hire_date": "2018-05-09T00:00:00Z"}, "employee_state_taxes": {"wc_covered": true, "wc_class_code": "20992"}}
      responses:
        "201":
          application/json: {"uuid": "c5eac208-191a-4d7d-b286-05f8a2516327", "first_name": "Cordelia", "last_name": "Prosacco", "eligible_paid_time_off": [{"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}], "payment_method": "Check"}
        "422": {}
    Create Historical Employee Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Cortez", "last_name": "Dickens", "date_of_birth": "1995-10-30", "ssn": "<value>", "work_address": {}, "home_address": {"street_1": "<value>", "city": "Port Gustavehaven", "state": "Maine", "zip": "79036-5048"}, "termination": {}, "job": {}}
      responses:
        "201":
          application/json: {"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "first_name": "Karl", "middle_initial": null, "last_name": "Jaskolski", "email": null, "company_uuid": "3c69d228-a250-49b4-9946-24e4e4294da4", "manager_uuid": null, "version": "dedac972dd28945fcd6cd941723cc71a", "department": null, "terminated": true, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "f0be5480-7a15-4583-b0d0-789c02a1afe4", "version": "1c0722f3e090713b6a0db7c39904693e", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "hire_date": "2023-11-01", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "1a1faa42-274b-4440-b200-a5d81df14af2", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2023-11-01", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [{"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "version": "e6c865df784842196d411c1466b01686", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "active": false, "cancelable": true, "effective_date": "2023-12-31T00:00:00Z", "run_termination_payroll": false}], "garnishments": [], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Check", "work_email": null}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Donavon", "last_name": "Baumbach", "date_of_birth": "1990-12-24", "ssn": "<value>", "work_address": {}, "home_address": {"street_1": "<value>", "city": "MacGyverboro", "state": "Mississippi", "zip": "73859"}, "termination": {}, "job": {}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Dorris", "last_name": "Walter", "date_of_birth": "1955-04-16", "ssn": "<value>", "work_address": {}, "home_address": {"street_1": "<value>", "city": "Sophiatown", "state": "North Carolina", "zip": "38339-8459"}, "termination": {}, "job": {}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"first_name": "Rae", "last_name": "Corkery", "date_of_birth": "1947-11-23", "ssn": "<value>", "work_address": {}, "home_address": {"street_1": "<value>", "city": "Gerholdshire", "state": "Nebraska", "zip": "28098-5552"}, "termination": {}, "job": {}}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-v1-historical_employees:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          historical_employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "db0edd04aaac4506f7edab03ac855d56", "first_name": "Soren", "middle_initial": "A", "last_name": "Kierkegaard", "date_of_birth": "1995-05-05T00:00:00Z", "ssn": "123456294", "work_address": {"location_uuid": "1da85d35-1910-4d5e-8e94-39e8cdfe8c9a"}, "home_address": {"street_1": "300 3rd Street", "street_2": null, "city": "San Francisco", "state": "CA", "zip": "94107"}, "termination": {"effective_date": "2022-09-15T00:00:00Z"}, "job": {"hire_date": "2018-05-09T00:00:00Z"}, "employee_state_taxes": {"wc_covered": true, "wc_class_code": "20992"}}
      responses:
        "200":
          application/json: {"uuid": "cd736941-13a7-41a0-9995-88b35305ed27", "first_name": "Allison", "last_name": "Koepp", "eligible_paid_time_off": [{"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}], "payment_method": "Check"}
    Create Historical Employee Example:
      parameters:
        path:
          company_uuid: "<id>"
          historical_employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "first_name": "Sierra", "last_name": "Senger", "date_of_birth": "1983-02-22", "ssn": "<value>", "work_address": {}, "home_address": {"street_1": "<value>", "city": "Topeka", "state": "Alabama", "zip": "50655-6219"}, "termination": {}, "job": {}}
      responses:
        "200":
          application/json: {"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "first_name": "Karl", "middle_initial": null, "last_name": "Jaskolski", "email": null, "company_uuid": "3c69d228-a250-49b4-9946-24e4e4294da4", "manager_uuid": null, "version": "dedac972dd28945fcd6cd941723cc71a", "department": null, "terminated": true, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "f0be5480-7a15-4583-b0d0-789c02a1afe4", "version": "1c0722f3e090713b6a0db7c39904693e", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "hire_date": "2023-11-01", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "1a1faa42-274b-4440-b200-a5d81df14af2", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2023-11-01", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [{"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "version": "e6c865df784842196d411c1466b01686", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "active": false, "cancelable": true, "effective_date": "2023-12-31T00:00:00Z", "run_termination_payroll": false}], "garnishments": [], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Check", "work_email": null}
  get-v1-employees:
    Create Employee Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e", "first_name": "Isom", "middle_initial": null, "last_name": "Jaskolski", "email": "dane7757869450111550@botsford.net", "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365", "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "version": "1c7ba9d62c8bafbfff998ffccad5d296", "department": "Stage Hand", "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "428a653a-0745-4db4-9c80-558288d416fa", "version": "6c0ed1521e8b86eb36bd4455a63a2dac", "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f", "hire_date": "2020-01-20", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [{"name": "Sick Hours", "policy_name": "Sick Policy", "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_method": "per_hour_worked", "accrual_period": "Year", "accrual_balance": "31.8", "maximum_accrual_balance": "240.0", "paid_at_termination": false}, {"name": "Vacation Hours", "policy_name": "Vacation Policy", "policy_uuid": "ab59de61-239f-4805-933b-0e3360ed291c", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_period": "Year", "accrual_balance": "77.8", "maximum_accrual_balance": "240.0", "paid_at_termination": true}], "terminations": [], "garnishments": [], "custom_fields": [{"id": "ee515986-f3ca-49da-b576-2691b95262f9", "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "value": "2", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "value": "md", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "value": "apple", "selection_options": ["apple", "banana", "orange"]}], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": "1234567890", "preferred_first_name": "Angel", "payment_method": "Check", "work_email": "angel.jaskolski@example.com"}
    Create Historical Employee Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "first_name": "Karl", "middle_initial": null, "last_name": "Jaskolski", "email": null, "company_uuid": "3c69d228-a250-49b4-9946-24e4e4294da4", "manager_uuid": null, "version": "dedac972dd28945fcd6cd941723cc71a", "department": null, "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "f0be5480-7a15-4583-b0d0-789c02a1afe4", "version": "1c0722f3e090713b6a0db7c39904693e", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "hire_date": "2023-11-01", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "1a1faa42-274b-4440-b200-a5d81df14af2", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2023-11-01", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [{"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "version": "e6c865df784842196d411c1466b01686", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "active": false, "cancelable": true, "effective_date": "2023-12-31T00:00:00Z", "run_termination_payroll": false}], "garnishments": [], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Check", "work_email": null}
  put-v1-employees:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "db0edd04aaac4506f7edab03ac855d56", "first_name": "Soren", "middle_initial": "A", "last_name": "Kierkegaard", "preferred_first_name": "Angel", "date_of_birth": "1995-05-05", "email": "knight0faith@example.com", "ssn": "123456294", "two_percent_shareholder": false}
      responses:
        "200":
          application/json: {"uuid": "0488dda5-9bd2-4e22-8225-091b969a682e", "first_name": "Daphney", "last_name": "Shanahan", "eligible_paid_time_off": [{"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}, {"accrual_unit": "Hour", "accrual_method": "unlimited", "accrual_period": "Year"}], "payment_method": "Check"}
        "422": {}
    Create Employee Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e", "first_name": "Isom", "middle_initial": null, "last_name": "Jaskolski", "email": "dane7757869450111550@botsford.net", "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365", "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd", "version": "1c7ba9d62c8bafbfff998ffccad5d296", "department": "Stage Hand", "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "428a653a-0745-4db4-9c80-558288d416fa", "version": "6c0ed1521e8b86eb36bd4455a63a2dac", "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f", "hire_date": "2020-01-20", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [{"name": "Sick Hours", "policy_name": "Sick Policy", "policy_uuid": "9940d205-9904-4e55-9fec-652628e84af7", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_method": "per_hour_worked", "accrual_period": "Year", "accrual_balance": "31.8", "maximum_accrual_balance": "240.0", "paid_at_termination": false}, {"name": "Vacation Hours", "policy_name": "Vacation Policy", "policy_uuid": "ab59de61-239f-4805-933b-0e3360ed291c", "accrual_unit": "Hour", "accrual_rate": "208.0", "accrual_period": "Year", "accrual_balance": "77.8", "maximum_accrual_balance": "240.0", "paid_at_termination": true}], "terminations": [], "garnishments": [], "custom_fields": [{"id": "ee515986-f3ca-49da-b576-2691b95262f9", "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "value": "2", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "value": "md", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "value": "apple", "selection_options": ["apple", "banana", "orange"]}], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": "1234567890", "preferred_first_name": "Angel", "payment_method": "Check", "work_email": "angel.jaskolski@example.com"}
    Create Historical Employee Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "first_name": "Karl", "middle_initial": null, "last_name": "Jaskolski", "email": null, "company_uuid": "3c69d228-a250-49b4-9946-24e4e4294da4", "manager_uuid": null, "version": "dedac972dd28945fcd6cd941723cc71a", "department": null, "terminated": false, "two_percent_shareholder": false, "onboarded": true, "onboarding_status": "onboarding_completed", "onboarding_documents_config": {"uuid": null, "i9_document": false}, "jobs": [{"uuid": "f0be5480-7a15-4583-b0d0-789c02a1afe4", "version": "1c0722f3e090713b6a0db7c39904693e", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "hire_date": "2023-11-01", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "1a1faa42-274b-4440-b200-a5d81df14af2", "compensations": [{"uuid": "145660ed-6fcc-4211-8915-18e2786290a2", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2023-11-01", "adjust_for_minimum_wage": false, "minimum_wages": []}]}], "eligible_paid_time_off": [], "terminations": [{"uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "version": "e6c865df784842196d411c1466b01686", "employee_uuid": "ad85459f-8bf5-4a8f-9079-3b3fa790799e", "active": false, "cancelable": true, "effective_date": "2023-12-31T00:00:00Z", "run_termination_payroll": false}], "garnishments": [], "date_of_birth": "1986-06-25", "has_ssn": false, "ssn": "", "phone": null, "preferred_first_name": null, "payment_method": "Check", "work_email": null}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-employee:
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employees-employee_id-custom_fields:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"custom_fields": [{"id": "ee515986-f3ca-49da-b576-2691b95262f9", "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0", "name": "employee_level", "type": "text", "description": "Employee Level", "value": "2", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba", "name": "t-shirt size", "type": "text", "description": "What is your t-shirt size?", "value": "md", "selection_options": null}, {"id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59", "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6", "name": "favorite fruit", "type": "radio", "description": "Which is your favorite fruit?", "value": "apple", "selection_options": ["apple", "banana", "orange"]}]}
  put-v1-employees-employee_id-onboarding_documents_config:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"i9_document": true}
      responses:
        "200":
          application/json: {"i9_document": "true"}
  get-v1-employees-employee_id-onboarding_status:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2", "onboarding_status": "admin_onboarding_incomplete", "onboarding_steps": [{"title": "Personal details", "id": "personal_details", "required": true, "completed": false, "requirements": []}, {"title": "Enter compensation details", "id": "compensation_details", "required": true, "completed": false, "requirements": []}, {"title": "Add work address", "id": "add_work_address", "required": true, "completed": false, "requirements": []}, {"title": "Add home address", "id": "add_home_address", "required": true, "completed": false, "requirements": []}, {"title": "Enter federal tax withholdings", "id": "federal_tax_setup", "required": true, "completed": false, "requirements": []}, {"title": "Enter state tax information", "id": "state_tax_setup", "required": true, "completed": false, "requirements": ["add_work_address", "add_home_address"]}, {"title": "Direct deposit setup", "id": "direct_deposit_setup", "required": false, "completed": false, "requirements": []}, {"title": "Employee form signing", "id": "employee_form_signing", "required": true, "completed": false, "requirements": ["federal_tax_setup", "state_tax_setup"]}]}
  put-v1-employees-employee_id-onboarding_status:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2", "onboarding_status": "admin_onboarding_incomplete", "onboarding_steps": [{"title": "Personal details", "id": "personal_details", "required": true, "completed": false, "requirements": []}, {"title": "Enter compensation details", "id": "compensation_details", "required": true, "completed": false, "requirements": []}, {"title": "Add work address", "id": "add_work_address", "required": true, "completed": false, "requirements": []}, {"title": "Add home address", "id": "add_home_address", "required": true, "completed": false, "requirements": []}, {"title": "Enter federal tax withholdings", "id": "federal_tax_setup", "required": true, "completed": false, "requirements": []}, {"title": "Enter state tax information", "id": "state_tax_setup", "required": true, "completed": false, "requirements": ["add_work_address", "add_home_address"]}, {"title": "Direct deposit setup", "id": "direct_deposit_setup", "required": false, "completed": false, "requirements": []}, {"title": "Employee form signing", "id": "employee_form_signing", "required": true, "completed": false, "requirements": ["federal_tax_setup", "state_tax_setup"]}]}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-version-employees-time_off_activities:
    example:
      parameters:
        path:
          employee_uuid: "<id>"
        query:
          time_off_type: "<value>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-departments:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "Stage Hand"}
      responses:
        "201":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-companies-departments:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": []}, {"version": "34f39a30b45d077cb83aed2df4810d74", "uuid": "ec5c8a85-3233-4f39-a9f5-fb1ab7b5f5f3", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Actors", "employees": [{"uuid": "7ee4aca1-814b-4034-b0f8-07f93cc679d1"}], "contractors": []}, {"version": "1fe3076d35ef7c97d0ae68c5f4df0acd", "uuid": "1802465d-4f68-4865-920c-1307ab095f12", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Band", "employees": [{"uuid": "a73955be-c009-44dc-915e-6246e2bdedbb"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}]
  get-department:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
  put-departments:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "db0edd04aaac4506f7edab03ac855d56", "title": "Backup Dancer"}
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
    Basic:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-department:
    Basic:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-add-people-to-department:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
  put-remove-people-from-department:
    Example:
      parameters:
        path:
          department_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"version": "d90440dd464601d1c8f4e9e240dfb7a6", "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "title": "Stage Hand", "employees": [{"uuid": "41199375-a999-4414-9f40-d9bf596b134d"}], "contractors": [{"uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"}]}
  post-v1-employees-employee_id-terminations:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "2020-06-30", "run_termination_payroll": true}
      responses:
        "201":
          application/json: {"uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "version": "d487dd0b55dfcacdd920ccbdaeafa351", "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": true, "cancelable": true, "effective_date": "2020-03-10", "run_termination_payroll": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employees-employee_id-terminations:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "version": "d487dd0b55dfcacdd920ccbdaeafa351", "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": true, "cancelable": true, "effective_date": "2020-03-10", "run_termination_payroll": false}]
  delete-v1-employees-employee_id-terminations:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "404":
          application/json: {"errors": [{"error_key": "employment", "category": "incorrect_state", "message": "The employee's employment is not in the right state."}]}
  put-v1-terminations-employee_id:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1928d0c378e519e9c03fb959bc959a6b", "effective_date": "2020-06-30", "run_termination_payroll": true}
      responses:
        "200":
          application/json: {"uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "version": "d487dd0b55dfcacdd920ccbdaeafa351", "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": true, "cancelable": true, "effective_date": "2020-03-10", "run_termination_payroll": false}
        "404":
          application/json: {"errors": [{"error_key": "employment", "category": "incorrect_state", "message": "The employee's employment is not in the right state."}]}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "2023-06-30", "file_new_hire_report": true, "work_location_uuid": "b6ae9d93-d4b8-4119-8c96-dba595dd8c30"}
      responses:
        "201":
          application/json: {"version": "2e930d43acbdb241f8f14a2d531fa417", "effective_date": "2024-01-01", "file_new_hire_report": false, "work_location_uuid": "d2c80d44-857b-4d4d-bce4-23ae52cc863b,", "employment_status": "full_time", "two_percent_shareholder": false, "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>", "file_new_hire_report": false, "work_location_uuid": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1928d0c378e519e9c03fb959bc959a6b", "effective_date": "2023-06-30", "file_new_hire_report": true, "work_location_uuid": "b6ae9d93-d4b8-4119-8c96-dba595dd8c30"}
      responses:
        "200":
          application/json: {"version": "2e930d43acbdb241f8f14a2d531fa417", "effective_date": "2024-01-01", "file_new_hire_report": false, "work_location_uuid": "d2c80d44-857b-4d4d-bce4-23ae52cc863b,", "employment_status": "full_time", "two_percent_shareholder": false, "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": false}
        "404":
          application/json: {"errors": [{"error_key": "employment", "category": "incorrect_state", "message": "The employee's employment is not in the right state."}]}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "effective_date": "<value>", "file_new_hire_report": true, "work_location_uuid": "<id>"}
      responses:
        "404":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "2e930d43acbdb241f8f14a2d531fa417", "effective_date": "2024-01-01", "file_new_hire_report": false, "work_location_uuid": "d2c80d44-857b-4d4d-bce4-23ae52cc863b,", "employment_status": "full_time", "two_percent_shareholder": false, "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0", "active": false}
        "404":
          application/json: {"errors": [{"error_key": "employment", "category": "incorrect_state", "message": "The employee's employment is not in the right state."}]}
  delete-v1-employees-employee_id-rehire:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "404":
          application/json: {"errors": [{"error_key": "employment", "category": "incorrect_state", "message": "The employee's employment is not in the right state."}]}
  get-v1-employees-employee_id-employment_history:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"hire_date": "2023-05-30", "termination_date": "<value>", "file_new_hire_report": true, "two_percent_shareholder": false, "employment_status": "seasonal"}, {"hire_date": "2021-02-02", "termination_date": "2023-03-01", "file_new_hire_report": false, "two_percent_shareholder": false, "employment_status": "full_time"}]
  get-v1-employees-employee_id-home_addresses:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "effective_date": "2021-01-01", "courtesy_withholding": true}, {"street_1": "100 5th Ave", "street_2": "Suite 555", "city": "New York", "state": "NY", "zip": "10001", "country": "USA", "active": true, "uuid": "d9f74049-8769-4fba-8e0f-eceef2da4e6b", "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "effective_date": "2022-03-03", "courtesy_withholding": true}]
  post-v1-employees-employee_id-home_addresses:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"street_1": "300 3rd Street", "street_2": null, "city": "San Francisco", "state": "CA", "zip": "94107", "effective_date": "2021-01-01", "courtesy_withholding": true}
      responses:
        "200":
          application/json: {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "courtesy_withholding": true}
        "201":
          application/json: {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "courtesy_withholding": true}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-home_addresses-home_address_uuid:
    Example:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "courtesy_withholding": true}
  put-v1-home_addresses-home_address_uuid:
    Example:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "fe75bd065ff48b91c35fe8ff842f986c", "street_1": "300 3rd Street", "street_2": null, "city": "San Francisco", "state": "CA", "zip": "94107", "effective_date": "2021-01-01", "courtesy_withholding": true}
      responses:
        "200":
          application/json: {"street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA", "active": false, "uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "courtesy_withholding": true}
    Basic:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-home_addresses-home_address_uuid:
    Basic:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          home_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employees-employee_id-work_addresses:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "fc5b87dc-8d88-400d-b2da-c3587a7e5b15", "effective_date": "2022-01-01", "active": false, "location_uuid": "d9456c94-f561-40d2-afec-919da5f59196", "employee_uuid": "7597f3e3-31d4-4953-83a5-f95be78d2fe2", "version": "139f9769a2e543e6a1259173e1ee3b8d", "street_1": "800 Adolfo Gardens", "street_2": "Suite 419", "city": "Bremen", "state": "AL", "zip": "35033", "country": "USA"}, {"uuid": "be1c2e24-af86-4c36-b34e-3a55dbcdbdab", "effective_date": "2023-01-01", "active": true, "location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635", "employee_uuid": "7597f3e3-31d4-4953-83a5-f95be78d2fe2", "version": "bbe8d4c741339c6b9e0e2e1c1b120816", "street_1": "2216 Icie Villages", "street_2": "Apt. 798", "city": "Big Delta", "state": "AK", "zip": "99737", "country": "USA"}]
  post-v1-employees-employee_id-work_addresses:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635", "effective_date": "2023-05-15"}
      responses:
        "201":
          application/json: {"uuid": "56260b3d-c375-415c-b77a-75d99f717193", "effective_date": "2021-01-01", "active": false, "location_uuid": "6a27753a-3093-41c1-9f25-ea64f15e8266", "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e", "version": "<value>", "street_1": "644 Fay Vista", "street_2": "Suite 842", "city": "Richmond", "state": "VA", "zip": "23218", "country": "USA"}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-work_addresses-work_address_uuid:
    Example:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "34925ef7-6234-440d-83b8-788a24d0d69a", "effective_date": "2023-05-15", "active": true, "location_uuid": "aba6d0fd-7294-4997-b1a4-bc9268c45932", "employee_uuid": "2363b9c0-6625-4425-9261-47627fd68783", "version": "6a22da647ed391f184a212e6e83a541d", "street_1": "977 Marks Viaduct", "street_2": null, "city": "Pink Hill", "state": "NC", "zip": "28572", "country": "USA"}
  put-v1-work_addresses-work_address_uuid:
    Example:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635", "effective_date": "2023-05-15", "version": "e6db1baa29d3df1eb307ff6a12c778da"}
      responses:
        "200":
          application/json: {"uuid": "34925ef7-6234-440d-83b8-788a24d0d69a", "effective_date": "2023-05-15", "active": true, "location_uuid": "aba6d0fd-7294-4997-b1a4-bc9268c45932", "employee_uuid": "2363b9c0-6625-4425-9261-47627fd68783", "version": "6a22da647ed391f184a212e6e83a541d", "street_1": "977 Marks Viaduct", "street_2": null, "city": "Pink Hill", "state": "NC", "zip": "28572", "country": "USA"}
    Basic:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-work_addresses-work_address_uuid:
    Basic:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          work_address_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employees-employee_id-federal_taxes:
    Example:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "56a489ce86ed6c1b0f0cecc4050a0b01", "filing_status": "Single", "extra_withholding": "0.0", "two_jobs": true, "dependents_amount": "0.0", "other_income": "0.0", "deductions": "0.0", "w4_data_type": "rev_2020_w4"}
  put-v1-employees-employee_id-federal_taxes:
    Example:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "56a489ce86ed6c1b0f0cecc4050a0b01", "filing_status": "Single", "extra_withholding": "0.0", "two_jobs": true, "dependents_amount": "0.0", "other_income": "0.0", "deductions": "0.0", "w4_data_type": "rev_2020_w4"}
      responses:
        "200":
          application/json: {"version": "56a489ce86ed6c1b0f0cecc4050a0b01", "filing_status": "Single", "extra_withholding": "0.0", "two_jobs": true, "dependents_amount": "0.0", "other_income": "0.0", "deductions": "0.0", "w4_data_type": "rev_2020_w4"}
    Basic:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employees-employee_id-state_taxes:
    Employee-State-Taxes-List-Example:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"employee_uuid": "92fa4d30-e284-43d0-a26e-605619c04beb", "state": "CA", "file_new_hire_report": false, "is_work_state": true, "questions": [{"label": "Filing Status", "description": "The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.\n", "key": "filing_status", "input_question_format": {"type": "Select", "options": [{"value": "S", "label": "Single"}, {"value": "M", "label": "Married one income"}, {"value": "MD", "label": "Married dual income"}, {"value": "H", "label": "Head of household"}, {"value": "E", "label": "Do Not Withhold"}]}, "answers": [{"value": "S", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "Withholding Allowance", "description": "This value is needed to calculate the employee's CA income tax withholding. If unsure, use the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'>CA DE-4 form</a> to calculate the value manually.\n", "key": "withholding_allowance", "input_question_format": {"type": "Number"}, "answers": [{"value": 1, "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "Additional Withholding", "description": "You can withhold an additional amount of California income taxes here.", "key": "additional_withholding", "input_question_format": {"type": "Currency"}, "answers": [{"value": "0.0", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "File a New Hire Report?", "description": "State law requires you to file a new hire report within 20 days of hiring or re-hiring an employee.", "key": "file_new_hire_report", "input_question_format": {"type": "Select"}, "answers": [{"value": true, "valid_from": "2010-01-01", "valid_up_to": null}]}]}]
  put-v1-employees-employee_id-state_taxes:
    Employee-State-Taxes-Update-Example:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"states": [{"state": "CA", "questions": [{"key": "filing_status", "answers": [{"value": "M", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"key": "withholding_allowance", "answers": [{"value": 2, "valid_from": "2010-01-01", "valid_up_to": null}]}, {"key": "additional_withholding", "answers": [{"value": "25.0", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"key": "file_new_hire_report", "answers": [{"value": true, "valid_from": "2010-01-01", "valid_up_to": null}]}]}]}
      responses:
        "200":
          application/json: [{"employee_uuid": "<id>", "state": "Ohio", "questions": [{"label": "<value>", "description": "which difficult really", "key": "<key>", "input_question_format": {"type": "<value>"}, "answers": [{}, {}]}]}, {"employee_uuid": "<id>", "state": "Alabama", "questions": []}, {"employee_uuid": "<id>", "state": "Tennessee", "questions": [{"label": "<value>", "description": "notwithstanding yippee now cinch against however unearth outside stiff", "key": "<key>", "input_question_format": {"type": "<value>"}, "answers": [{}, {}, {}]}, {"label": "<value>", "description": "incidentally shadowy cleverly", "key": "<key>", "input_question_format": {"type": "<value>"}, "answers": [{}, {}, {}]}, {"label": "<value>", "description": "off frizz yowza huzzah whose", "key": "<key>", "input_question_format": {"type": "<value>"}, "answers": [{}, {}]}]}]
        "422": {}
    Employee-State-Taxes-List-Example:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"states": [{"state": "Minnesota"}]}
      responses:
        "200":
          application/json: [{"employee_uuid": "92fa4d30-e284-43d0-a26e-605619c04beb", "state": "CA", "file_new_hire_report": false, "is_work_state": true, "questions": [{"label": "Filing Status", "description": "The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.\n", "key": "filing_status", "input_question_format": {"type": "Select", "options": [{"value": "S", "label": "Single"}, {"value": "M", "label": "Married one income"}, {"value": "MD", "label": "Married dual income"}, {"value": "H", "label": "Head of household"}, {"value": "E", "label": "Do Not Withhold"}]}, "answers": [{"value": "S", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "Withholding Allowance", "description": "This value is needed to calculate the employee's CA income tax withholding. If unsure, use the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'>CA DE-4 form</a> to calculate the value manually.\n", "key": "withholding_allowance", "input_question_format": {"type": "Number"}, "answers": [{"value": 1, "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "Additional Withholding", "description": "You can withhold an additional amount of California income taxes here.", "key": "additional_withholding", "input_question_format": {"type": "Currency"}, "answers": [{"value": "0.0", "valid_from": "2010-01-01", "valid_up_to": null}]}, {"label": "File a New Hire Report?", "description": "State law requires you to file a new hire report within 20 days of hiring or re-hiring an employee.", "key": "file_new_hire_report", "input_question_format": {"type": "Select"}, "answers": [{"value": true, "valid_from": "2010-01-01", "valid_up_to": null}]}]}]
    Employee-State-Taxes-Error-Response:
      parameters:
        path:
          employee_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"states": [{"state": "Minnesota"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "states", "category": "nested_errors"}]}
  post-v1-employees-employee_id-bank_accounts:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "BoA Checking Account", "routing_number": "266905059", "account_number": "5809431207", "account_type": "Checking"}
      responses:
        "201":
          application/json: {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "account_type": "Checking", "name": "BoA Checking Account", "routing_number": "266905059", "hidden_account_number": "XXXX1207"}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Checking"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Savings"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Savings"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-employees-employee_id-bank_accounts-bank_account_id:
    speakeasy-default-delete-v1-employees-employee-id-bank-accounts-bank-account-id:
      parameters:
        path:
          employee_id: "<id>"
          bank_account_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  put-v1-employees-employee_id-bank_accounts:
    Example:
      parameters:
        path:
          employee_id: "<id>"
          bank_account_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "BoA Checking Account", "routing_number": "266905059", "account_number": "5809431207", "account_type": "Checking"}
      responses:
        "200":
          application/json: {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "account_type": "Checking", "name": "BoA Checking Account", "routing_number": "266905059", "hidden_account_number": "XXXX1207"}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
          bank_account_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Checking"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
          bank_account_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Checking"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
          bank_account_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Checking"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employees-employee_id-payment_method:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Amount", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "priority": 1, "split_amount": 500}, {"uuid": "0d2b7f73-05d6-4184-911d-269edeecc30a", "name": "Chase Checking Account", "priority": 2, "split_amount": 1000}, {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "name": "US Bank Checking Account", "priority": 3, "split_amount": null}]}
  put-v1-employees-employee_id-payment_method:
    example-1:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Amount", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "priority": 1, "split_amount": 500}, {"uuid": "0d2b7f73-05d6-4184-911d-269edeecc30a", "name": "Chase Checking Account", "priority": 2, "split_amount": 1000}, {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "name": "US Bank Checking Account", "priority": 3, "split_amount": null}]}
    example-2:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Percentage", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "priority": 1, "split_amount": 60}, {"uuid": "0d2b7f73-05d6-4184-911d-269edeecc30a", "name": "Chase Checking Account", "priority": 2, "split_amount": 40}]}
    example-3:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Check"}
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "200":
          application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Amount", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "priority": 1, "split_amount": 500}, {"uuid": "0d2b7f73-05d6-4184-911d-269edeecc30a", "name": "Chase Checking Account", "priority": 2, "split_amount": 1000}, {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "name": "US Bank Checking Account", "priority": 3, "split_amount": null}]}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Direct Deposit"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-jobs-job_id:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "Regional Manager", "hire_date": "2020-12-21"}
      responses:
        "201":
          application/json: {"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "d0e719137f89ca3dd334dd4cc248ffbb", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Account Director", "primary": true, "rate": "78000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": "null,", "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "994b75511d1debac5d7e2ddeae13679f", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "78000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "<value>", "hire_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "<value>", "hire_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"title": "<value>", "hire_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employees-employee_id-jobs:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "6c0ed1521e8b86eb36bd4455a63a2dac", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Client Support Director", "primary": true, "rate": "70000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": "null,", "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "2cd4b18662395eb53bcf80d5b5447f36", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "70000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}]
  get-v1-jobs-job_id:
    Example:
      parameters:
        path:
          job_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "d0e719137f89ca3dd334dd4cc248ffbb", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Account Director", "primary": true, "rate": "78000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": "null,", "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "994b75511d1debac5d7e2ddeae13679f", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "78000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}
  put-v1-jobs-job_id:
    Example:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "gr78930htutrz444kuytr3s5hgxykuveb523fwl8sir", "title": "Regional Manager", "hire_date": "2020-12-21"}
      responses:
        "200":
          application/json: {"uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "version": "d0e719137f89ca3dd334dd4cc248ffbb", "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22", "hire_date": "2020-01-20", "title": "Account Director", "primary": true, "rate": "78000.00", "payment_unit": "Year", "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "state_wc_covered": "null,", "state_wc_class_code": "null,", "compensations": [{"uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a", "version": "994b75511d1debac5d7e2ddeae13679f", "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97", "rate": "78000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2021-01-20", "adjust_for_minimum_wage": false, "minimum_wages": []}]}
    Basic:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-jobs-job_id:
    speakeasy-default-delete-v1-jobs-job-id:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-jobs-job_id-compensations:
    Example:
      parameters:
        path:
          job_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "70.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}, {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}]
  post-v1-compensations-compensation_id:
    Exempt:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt"}
      responses:
        "201":
          application/json: {"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}
    Minimum Wage Adjusted:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"rate": "7.00", "payment_unit": "Hour", "effective_date": "2023-01-01", "flsa_status": "Nonexempt", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "340832db-ab28-4112-9e10-28dd1711835f"}]}
      responses:
        "201":
          application/json: {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}
    Basic:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_unit": "Paycheck", "flsa_status": "Commission Only Nonexempt"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_unit": "Hour", "flsa_status": "Commission Only Exempt"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          job_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payment_unit": "Month", "flsa_status": "Commission Only Exempt"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-compensations-compensation_id:
    Exempt:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}
    Minimum Wage Adjusted:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}
  put-v1-compensations-compensation_id:
    Exempt:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt"}
      responses:
        "200":
          application/json: {"uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037", "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "60000.00", "payment_unit": "Year", "flsa_status": "Exempt", "effective_date": "2020-12-11", "adjust_for_minimum_wage": false, "minimum_wages": []}
    Minimum Wage Adjusted:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "rate": "7.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "340832db-ab28-4112-9e10-28dd1711835f"}]}
      responses:
        "200":
          application/json: {"uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a", "version": "cc59bd3879d655fb940a1f6b675f2ad9", "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086", "rate": "5.00", "payment_unit": "Hour", "flsa_status": "Nonexempt", "effective_date": "2018-12-11", "adjust_for_minimum_wage": true, "minimum_wages": [{"uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738", "wage": "7.25", "effective_date": "2018-12-11"}]}
    Basic:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-compensations-compensation_id:
    speakeasy-default-delete-v1-compensations-compensation-id:
      parameters:
        path:
          compensation_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-v1-companies-company_id-earning_types:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Gym Membership Stipend"}
      responses:
        "201":
          application/json: {"name": "Gym Membership Stipend", "uuid": "f4dc8972-8830-4c07-b623-349a04b040d7"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-earning_types:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"default": [{"name": "Bonus", "uuid": "b82e35c5-d7c6-4705-9e16-9f87499ade18"}, {"name": "Cash Tips", "uuid": "f5618c94-ed7d-4366-b2c4-ff05e430064f"}, {"name": "Commission", "uuid": "60191999-004a-49d9-b163-630574433653"}, {"name": "Correction Payment", "uuid": "368226e0-8e8c-48f0-bc91-aee46caafbc9"}, {"name": "Minimum Wage Adjustment", "uuid": "88a2e519-9ff5-4c19-9071-6a709f3c2939"}, {"name": "Paycheck Tips", "uuid": "a3eaf03d-e712-4144-8f9b-71a85528adcf"}, {"name": "Severance", "uuid": "a6a2eba7-6c7d-4ced-bbe8-43452fbc9f63"}], "custom": [{"name": "Gym Membership Stipend", "uuid": "6b4a8efb-db90-4c13-a75f-aae11b3f4ff9"}]}
  put-v1-companies-company_id-earning_types-earning_type_uuid:
    Example:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Gym Membership Stipend"}
      responses:
        "200":
          application/json: {"name": "Gym Membership Stipend", "uuid": "f4dc8972-8830-4c07-b623-349a04b040d7"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-companies-company_id-earning_types-earning_type_uuid:
    speakeasy-default-delete-v1-companies-company-id-earning-types-earning-type-uuid:
      parameters:
        path:
          company_id: "<id>"
          earning_type_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-v1-companies-company_uuid-contractors:
    Create an Individual contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-04-01", "self_onboarding": true, "email": "johnson@johnson.com", "first_name": "Johnson", "last_name": "Johnson", "file_new_hire_report": "true,", "work_state": "CA"}
      responses:
        "201":
          application/json: {"uuid": "45c84535-4779-4ecb-af28-3bb833fa3225", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422": {}
    Create a Business contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Business", "wage_type": "Fixed", "start_date": "2020-04-01", "self_onboarding": false, "file_new_hire_report": false, "business_name": "Johnson-Johnson Contractors"}
      responses:
        "201":
          application/json: {"uuid": "4113dafc-14a6-4275-a15f-9c79a520c8a0", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422": {}
    Individual Contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "201":
          application/json: {"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Hourly", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": null, "hourly_rate": "60.00", "file_new_hire_report": true, "work_state": "FL", "onboarded": true, "onboarding_status": "onboarding_completed", "payment_method": null, "has_ssn": true, "department_uuid": null}
    Business Contractor:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Hourly", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "201":
          application/json: {"uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c", "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": null, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": false, "onboarding_status": "admin_onboarding_incomplete", "payment_method": null, "has_ssn": false}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Hourly", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"type": "Individual", "wage_type": "Hourly", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_uuid-contractors:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Fixed", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": {"street_1": "621 Jast Row", "street_2": "Apt. 281", "city": "Coral Springs", "state": "FL", "zip": "33065", "country": "USA"}, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": true, "onboarding_status": "onboarding_completed", "has_ssn": true, "department_uuid": "1802465d-4f68-4865-920c-1307ab095f12"}, {"uuid": "183a86f4-a803-4b38-9357-cd9b78e2560c", "company_uuid": "afdd5d98-581b-4fc0-b988-706b7d23b2a5", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": {"street_1": "1625 Bednar Center", "street_2": "Apt. 480", "city": "Port Charlotte", "state": "FL", "zip": "33954", "country": "USA"}, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": true, "onboarding_status": "onboarding_completed", "has_ssn": false}, {"uuid": "ea1c2d65-b622-4899-bcb7-5cd0fe0232aa", "company_uuid": "281c763d-a2ba-4f51-b9e8-b1ed61576d62", "wage_type": "Fixed", "is_active": true, "version": "b48c46abfed1487b873b442334b3c4ff", "type": "Individual", "first_name": "Chanel", "last_name": "Boyle", "middle_initial": "X", "business_name": null, "ein": null, "has_ein": false, "email": "loyal@hettinger.biz", "address": {"street_1": "35913 Darrick Run", "street_2": "Apt. 913", "city": "Cypress", "state": "TX", "zip": "77433", "country": "USA"}, "hourly_rate": "0.00", "file_new_hire_report": true, "work_state": "TX", "onboarded": true, "onboarding_status": "onboarding_completed", "has_ssn": true}]
  get-v1-contractors-contractor_uuid:
    Individual Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Hourly", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": {"street_1": "621 Jast Row", "street_2": "Apt. 281", "city": "Coral Springs", "state": "FL", "zip": "33065", "country": "USA"}, "hourly_rate": "60.00", "file_new_hire_report": true, "work_state": "FL", "onboarded": true, "onboarding_status": "onboarding_completed", "payment_method": "Direct Deposit", "has_ssn": true, "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193"}
    Business Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c", "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": null, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": false, "onboarding_status": "admin_onboarding_incomplete", "payment_method": "Direct Deposit", "has_ssn": false}
  put-v1-contractors-contractor_uuid:
    Update an Individual Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "b48c46abfed1487b873b442334b3c4ff", "type": "Individual", "wage_type": "Hourly", "start_date": "2021-01-01", "hourly_rate": "20.00", "self_onboarding": false, "first_name": "Chanel", "last_name": "Boyle", "middle_initial": "X", "file_new_hire_report": false, "is_active": true}
      responses:
        "200":
          application/json: {"uuid": "63ba7bbb-da29-4c1b-827d-792289357acf", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422": {}
    Update a Business Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "b48c46abfed1487b873b442334b3c4ff", "type": "Individual", "wage_type": "Fixed", "start_date": "2020-01-11", "self_onboarding": false, "file_new_hire_report": false, "business_name": "Contracting Solutions", "ein": "991113334", "is_active": false}
      responses:
        "200":
          application/json: {"uuid": "72a92a7e-5b65-4564-908c-30ecaedc35c9", "is_active": true, "hourly_rate": "50.0", "file_new_hire_report": false}
        "422": {}
    Individual Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "200":
          application/json: {"uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07", "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942", "wage_type": "Hourly", "is_active": false, "version": "63859768485e218ccf8a449bb60f14ed", "type": "Individual", "first_name": "Kory", "last_name": "Gottlieb", "middle_initial": "P", "business_name": null, "ein": null, "has_ein": false, "email": "keira.west@mckenzie.org", "start_date": "2022-01-01", "address": {"street_1": "621 Jast Row", "street_2": "Apt. 281", "city": "Coral Springs", "state": "FL", "zip": "33065", "country": "USA"}, "hourly_rate": "60.00", "file_new_hire_report": true, "work_state": "FL", "onboarded": true, "onboarding_status": "onboarding_completed", "payment_method": "Direct Deposit", "has_ssn": true, "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193"}
    Business Contractor:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "200":
          application/json: {"uuid": "c7c0659c-21a6-4b4e-b74c-9252576fc68c", "company_uuid": "0ec4ae6e-e436-460d-b63c-94a14503d16f", "wage_type": "Fixed", "is_active": true, "version": "8aab307f1e8ed788697f8986346af559", "type": "Business", "first_name": null, "last_name": null, "middle_initial": null, "business_name": "Labadie-Stroman", "ein": "XX-XXX0001", "has_ein": true, "email": "jonatan@kerluke.info", "start_date": "2022-01-01", "address": null, "hourly_rate": "0.00", "file_new_hire_report": false, "work_state": null, "onboarded": false, "onboarding_status": "admin_onboarding_incomplete", "payment_method": "Direct Deposit", "has_ssn": false}
    Basic:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Individual", "start_date": "2020-01-11", "hourly_rate": "40.0", "self_onboarding": false, "file_new_hire_report": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-contractors-contractor_uuid:
    speakeasy-default-delete-v1-contractors-contractor-uuid:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-contractors-contractor_uuid-onboarding_status:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037", "onboarding_status": "admin_onboarding_incomplete", "onboarding_steps": [{"title": "Basic details", "id": "basic_details", "required": true, "completed": false, "requirements": []}, {"title": "Enter compensation details", "id": "compensation_details", "required": true, "completed": false, "requirements": []}, {"title": "Add an address", "id": "add_address", "required": true, "completed": false, "requirements": []}, {"title": "Payment details", "id": "payment_details", "required": true, "completed": false, "requirements": []}, {"title": "Sign and acknowledge documents", "id": "sign_documents", "required": false, "completed": false, "requirements": ["basic_details,", "add_address"]}, {"title": "File new hire report", "id": "file_new_hire_report", "required": false, "completed": false, "requirements": ["basic_details"]}]}
  put-v1-contractors-contractor_uuid-onboarding_status:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "onboarding_completed"}
      responses:
        "200":
          application/json: {"uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037", "onboarding_status": "admin_onboarding_incomplete", "onboarding_steps": [{"title": "Basic details", "id": "basic_details", "required": true, "completed": false, "requirements": []}, {"title": "Enter compensation details", "id": "compensation_details", "required": true, "completed": false, "requirements": []}, {"title": "Add an address", "id": "add_address", "required": true, "completed": false, "requirements": []}, {"title": "Payment details", "id": "payment_details", "required": true, "completed": false, "requirements": []}, {"title": "Sign and acknowledge documents", "id": "sign_documents", "required": false, "completed": false, "requirements": ["basic_details,", "add_address"]}, {"title": "File new hire report", "id": "file_new_hire_report", "required": false, "completed": false, "requirements": ["basic_details"]}]}
    Basic:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "onboarding_completed"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "onboarding_completed"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"onboarding_status": "onboarding_completed"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-contractors-contractor_uuid-address:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "23323096a8015e32d9795fadf1fd300d", "street_1": "999 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "contractor_uuid": "9779767c-6044-48e0-bf68-aeb370b9a2e7"}
  put-v1-contractors-contractor_uuid-address:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "fe75bd065ff48b91c35fe8ff842f986c", "street_1": "300 3rd Street", "street_2": "<value>", "city": "San Francisco", "state": "CA", "zip": "94107"}
      responses:
        "200":
          application/json: {"version": "23323096a8015e32d9795fadf1fd300d", "street_1": "999 Kiera Stravenue", "street_2": "Suite 391", "city": "San Francisco", "state": "CA", "zip": "94107", "country": "USA", "active": true, "contractor_uuid": "9779767c-6044-48e0-bf68-aeb370b9a2e7"}
    Basic:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-contractors-contractor_uuid-bank_accounts:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "BoA Checking Account", "routing_number": "266905059", "account_number": "5809431207", "account_type": "Checking"}
      responses:
        "201":
          application/json: {"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "contractor_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "account_type": "Checking", "name": "BoA Checking Account", "routing_number": "266905059", "hidden_account_number": "XXXX1207"}
    Basic:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Checking"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Savings"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "routing_number": "<value>", "account_number": "<value>", "account_type": "Savings"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-contractors-contractor_uuid-bank_accounts:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "contractor_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "account_type": "Checking", "name": "BoA Checking Account", "routing_number": "266905059", "hidden_account_number": "XXXX1207"}]
  get-v1-contractors-contractor_uuid-payment_method:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Percentage", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "hidden_account_number": "XXXX0992", "priority": 1, "split_amount": 100}]}
  put-v1-contractors-contractor_id-payment_method:
    example-1:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit"}
    example-3:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Check"}
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "200":
          application/json: {"version": "63859768485e218ccf8a449bb60f14ed", "type": "Direct Deposit", "split_by": "Percentage", "splits": [{"uuid": "e88f9436-b74e-49a8-87e9-777b9bfe715e", "name": "BoA Checking Account", "hidden_account_number": "XXXX0992", "priority": 1, "split_amount": 100}]}
    Basic:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "type": "Check"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-webhook-subscription:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://partner-app.com/subscriber", "subscription_types": ["Company", "Employee"]}
      responses:
        "201":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://dense-bidet.name/", "subscription_types": ["EmployeeJobCompensation"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://quarterly-omelet.biz", "subscription_types": ["EmployeeJobCompensation", "Notification"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"url": "https://stunning-hope.com", "subscription_types": ["Payroll"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-webhook-subscriptions:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "dcceb38a-46be-4110-9d1d-1b3384c3b906", "url": "https://6116-2603-6000-8900-3d42-58e7-f1e3-b394-1f21.ngrok.io/subscriber", "status": "pending", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}]
  put-v1-webhook-subscription-uuid:
    Example:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": ["Company", "Employee"]}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
    Basic:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": ["Company", "ExternalPayroll", "Payroll"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": []}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"subscription_types": ["EmployeeJobCompensation", "Signatory"]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-webhook-subscription-uuid:
    Example:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
  delete-v1-webhook-subscription-uuid:
    speakeasy-default-delete-v1-webhook-subscription-uuid:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  put-v1-verify-webhook-subscription-uuid:
    Example:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "asefasedfe23e234easd"}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "url": "https://the-partner-app.com/subscriber", "status": "verified", "subscription_types": ["BankAccount", "Company", "CompanyBenefit", "Contractor", "ContractorPayment", "Employee", "EmployeeBenefit", "EmployeeJobCompensation", "ExternalPayroll", "Form", "Location", "Notification", "Payroll", "PaySchedule", "Signatory"]}
    Basic:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"verification_token": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-webhook-subscription-verification-token-uuid:
    speakeasy-default-get-v1-webhook-subscription-verification-token-uuid:
      parameters:
        path:
          webhook_subscription_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-contractor-forms:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "US_1099", "title": "Form 1099: 2020", "description": "Form 1099 records your annual income as a contractor.", "draft": false, "year": 2020, "quarter": null, "requires_signing": false, "document_content_type": "application/pdf", "contractor_uuid": "123dd616-6dbc-4724-938a-403f6217a933"}]
  get-v1-contractor-form:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "US_1099", "title": "Form 1099: 2020", "description": "Form 1099 records your annual income as a contractor.", "draft": false, "year": 2020, "quarter": null, "requires_signing": false, "document_content_type": "application/pdf", "contractor_uuid": "123dd616-6dbc-4724-938a-403f6217a933"}
  get-v1-contractor-form-pdf:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "document_url": "https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020", "document_content_type": "application/pdf"}
  post-v1-sandbox-generate_1099:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_id": "<id>"}
      responses:
        "200":
          application/json: {"uuid": "29afb141-2256-431d-90e0-1c7344222342", "name": "US_1099", "title": "Form 1099: 2022", "description": "Form 1099 records your annual income as a contractor.", "draft": false, "year": 2022, "quarter": null, "requires_signing": false, "contractor_uuid": "b68484a9-4487-4ee5-bafc-4245133a426c"}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-contractor-documents:
    Example:
      parameters:
        path:
          contractor_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b", "title": "Taxpayer Identification (Form W-9)", "name": "taxpayer_identification_form_w_9", "recipient_type": "Contractor", "recipient_uuid": "f079c253-29e2-45e2-b384-2cc615c9c568", "pages": [{"image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/0.jpg", "page_number": 0}, {"image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/1.jpg", "page_number": 1}], "fields": [{"key": "text1596141656513", "value": null, "x": 69, "y": 94, "width": 261, "height": 13, "page_number": 0, "data_type": "text", "required": true}, {"key": "optional_text1596141704672", "value": null, "x": 69, "y": 118, "width": 262, "height": 13, "page_number": 0, "data_type": "text", "required": false}], "signed_at": null, "description": "Form W-9, Request for Taxpayer Identification Number and Certification", "requires_signing": true, "draft": false, "year": null, "quarter": null}]
  get-v1-contractor-document:
    Example:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b", "title": "Taxpayer Identification (Form W-9)", "name": "taxpayer_identification_form_w_9", "recipient_type": "Contractor", "recipient_uuid": "f079c253-29e2-45e2-b384-2cc615c9c568", "pages": [{"image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/0.jpg", "page_number": 0}, {"image_url": "http://app.gusto-dev.com:3000/assets/document_templates/20/unmapped_template/images/1.jpg", "page_number": 1}], "fields": [{"key": "text1596141656513", "value": null, "x": 69, "y": 94, "width": 261, "height": 13, "page_number": 0, "data_type": "text", "required": true}, {"key": "optional_text1596141704672", "value": null, "x": 69, "y": 118, "width": 262, "height": 13, "page_number": 0, "data_type": "text", "required": false}], "signed_at": null, "description": "Form W-9, Request for Taxpayer Identification Number and Certification", "requires_signing": true, "draft": false, "year": null, "quarter": null}
  get-v1-contractor-document-pdf:
    Example:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b", "document_url": "https://app.gusto-demo.com/assets/personal_documents/23/original.pdf?1724367941"}
  put-v1-contractor-document-sign:
    Example:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fields": [{}, {}, {}], "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "e83b3c20-dc4f-4382-bee3-b478fc42c68b", "title": "Taxpayer Identification (Form W-9)", "name": "taxpayer_identification_form_w_9", "recipient_type": "Contractor", "recipient_uuid": "f079c253-29e2-45e2-b384-2cc615c9c568", "signed_at": "2024-09-03T16:39:22.000-07:00", "description": "Form W-9, Request for Taxpayer Identification Number and Certification", "requires_signing": false, "draft": false, "year": null, "quarter": null}
    Basic:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fields": [], "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fields": [{}, {}, {}], "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          document_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"fields": [{}, {}], "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-sandbox-generate_w2:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_id": "<id>"}
      responses:
        "200":
          application/json: {"employee_uuid": "19394e76-a866-4570-b237-9a26b0163907", "uuid": "bf5b2496-26df-436e-b465-eae4ed5c8021", "name": "US_W-2", "title": "Draft Form W-2: 2021", "description": "Form W-2 records your annual wages and taxes.", "draft": false, "requires_signing": false}
    Basic:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_id": "<id>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employee-forms:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}]
  get-v1-employee-form:
    Example:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}
  get-v1-employee-form-pdf:
    Example:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "document_url": "https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020", "document_content_type": "application/pdf"}
  put-v1-employee-form-sign:
    Example:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "Jane Smith", "agree": true, "signed_by_ip_address": "192.168.0.1"}
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": false, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-companies-company_id-payrolls:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"off_cycle": true, "off_cycle_reason": "Dismissed employee", "start_date": "<value>", "end_date": "<value>"}
      responses:
        "200":
          application/json: {"payroll_deadline": "2022-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": true, "off_cycle_reason": "Bonus", "auto_pilot": false, "external": false, "final_termination_payroll": false, "withholding_pay_period": "Every other week", "skip_regular_deductions": true, "fixed_withholding_rate": true, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2022-02-22", "initial_check_date": "2022-02-22", "expected_debit_time": "2022-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "payment_method": "Direct Deposit", "memo": null, "fixed_compensations": [], "hourly_compensations": [{"name": "Regular Hours", "hours": "0.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "0.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "0.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "0.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": []}], "created_at": "2022-02-01T22:00:00Z", "processing_request": null}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"off_cycle": true, "off_cycle_reason": "Bonus", "start_date": "<value>", "end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"off_cycle": true, "off_cycle_reason": "Transition from old pay schedule", "start_date": "<value>", "end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"off_cycle": false, "off_cycle_reason": "Bonus", "start_date": "<value>", "end_date": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-payrolls:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          sort_order: "asc"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": true, "processed_date": "2021-02-18", "calculated_at": "2021-02-18T12:00:00Z", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "totals": {"company_debit": "121747.71", "net_pay_debit": "79283.80", "tax_debit": "42463.91", "reimbursement_debit": "0.00", "child_support_debit": "0.00", "reimbursements": "0.00", "net_pay": "81752.94", "gross_pay": "130635.89", "employee_bonuses": "0.00", "employee_commissions": "18536.37", "employee_cash_tips": "0.00", "employee_paycheck_tips": "0.00", "additional_earnings": "0.00", "owners_draw": "0.00", "check_amount": "2469.14", "employer_taxes": "6917.19", "employee_taxes": "35546.72", "benefits": "0.00", "employee_benefits_deductions": "13336.23", "imputed_pay": "0.00", "deferred_payroll_taxes": "0.00", "other_deductions": "240.00"}, "created_at": "2021-02-01T22:00:00Z"}, {"payroll_deadline": "2021-02-28", "check_date": "2021-03-01", "processed": false, "processed_date": "nil", "calculated_at": "nil", "uuid": "c8a232aa-0b11-4b8a-b005-71e9e705d0e6", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "external": false, "pay_period": {"start_date": "2021-02-16", "end_date": "2021-03-01", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "created_at": "2022-02-01T22:00:00Z"}]
  get-v1-companies-company_id-payroll_reversals:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"reversed_payroll_uuid": "09505984-8d8c-41a3-adbe-5740322ae8e9", "reversal_payroll_uuid": "0424688e-0a2e-4cd0-ac86-42283e788fb3", "reason": "Customer Request", "approved_at": null, "category": "convert_check_ee_requested", "reversed_employee_uuids": ["5f036964-185e-4c85-bbf2-3873e1203b30"]}
  get-v1-companies-company_id-payrolls-payroll_id:
    Unprocessed:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "auto_pilot": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2021-02-22", "initial_check_date": "2021-02-22", "expected_debit_time": "2021-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"}, "created_at": "2022-02-01T22:00:00Z", "submission_blockers": [{"blocker_type": "fast_ach_threshold_exceeded", "blocker_name": "Fast ACH Threshold Exceeded", "unblock_options": [{"unblock_type": "wire_in", "check_date": "2024-06-10T00:00:00Z"}, {"unblock_type": "move_to_four_day", "check_date": "2024-06-12T00:00:00Z", "metadata": {}}], "selected_option": null, "status": "unresolved"}], "processing_request": null}
    Processed:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": true, "processed_date": "2021-02-18", "calculated_at": "2021-02-18T12:00:00Z", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "auto_pilot": true, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2021-02-22", "initial_check_date": "2021-02-22", "expected_debit_time": "2021-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"}, "totals": {"company_debit": "121747.71", "net_pay_debit": "79283.80", "tax_debit": "42463.91", "reimbursement_debit": "0.00", "child_support_debit": "0.00", "reimbursements": "0.00", "net_pay": "81752.94", "gross_pay": "130635.89", "employee_bonuses": "0.00", "employee_commissions": "18536.37", "employee_cash_tips": "0.00", "employee_paycheck_tips": "0.00", "additional_earnings": "0.00", "owners_draw": "0.00", "check_amount": "2469.14", "employer_taxes": "6917.19", "employee_taxes": "35546.72", "benefits": "0.00", "employee_benefits_deductions": "13336.23", "imputed_pay": "0.00", "deferred_payroll_taxes": "0.00", "other_deductions": "240.00"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "15.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "40.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "5.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Commission Only Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}], "company_taxes": [{"name": "MO Compensation Deduction", "employer": true, "amount": "-0.92"}, {"name": "NY MCTMT", "employer": true, "amount": "5.00"}], "created_at": "2022-02-01T22:00:00Z", "credit_blockers": [{"blocker_type": "waiting_for_wire_in", "blocker_name": "Waiting for Wire In", "unblock_options": [{"unblock_type": "submit_wire", "check_date": "2024-06-10T00:00:00Z"}], "selected_option": "submit_wire", "status": "unresolved"}], "processing_request": {"status": "submit_success", "errors": []}}
  put-v1-companies-company_id-payrolls:
    Example:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}, {}, {}]}
      responses:
        "200":
          application/json: {"payroll_deadline": "2022-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "off_cycle_reason": null, "auto_pilot": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2022-02-22", "initial_check_date": "2022-02-22", "expected_debit_time": "2022-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "version": "4ba36d23a78c7393b4900ef38019d8ff", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "15.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "40.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "5.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012", "excluded": false, "version": "ff083257a5583291fb86656ad0df1b42", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Commission Only Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781", "excluded": false, "version": "259816479e3729bf855318af9b9adddf", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}], "created_at": "2022-02-01T22:00:00Z", "fixed_compensation_types": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Anniversary Bonus"}, {"name": "Internet Stipend"}, {"name": "Reimbursement"}], "processing_request": null}
    Basic:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}, {}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_compensations": [{}, {}, {}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-companies-company_id-payrolls:
    speakeasy-default-delete-v1-companies-company-id-payrolls:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
  put-v1-companies-company_id-payrolls-payroll_id-prepare:
    Example:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2022-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "off_cycle_reason": null, "auto_pilot": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2022-02-22", "initial_check_date": "2022-02-22", "expected_debit_time": "2022-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "version": "4ba36d23a78c7393b4900ef38019d8ff", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "15.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "40.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "5.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012", "excluded": false, "version": "ff083257a5583291fb86656ad0df1b42", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Commission Only Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781", "excluded": false, "version": "259816479e3729bf855318af9b9adddf", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}]}], "created_at": "2022-02-01T22:00:00Z", "fixed_compensation_types": [{"name": "Bonus"}, {"name": "Commission"}, {"name": "Paycheck Tips"}, {"name": "Cash Tips"}, {"name": "Correction Payment"}, {"name": "Anniversary Bonus"}, {"name": "Internet Stipend"}, {"name": "Reimbursement"}], "processing_request": null}
  get-v1-payment-receipts-payrolls-payroll_uuid:
    Example:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_uuid": "afccb970-357e-4013-81f5-85dafc74f9b6", "company_uuid": "c827aa0d-3928-4d5a-ab1f-400641a7d2b8", "name_of_sender": "Torp and Sons and Sons", "name_of_recipient": "Payroll Recipients", "recipient_notice": "Payroll recipients include the employees listed below plus the tax agencies for the taxes listed below.", "debit_date": "2022-06-02", "license": "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For more about Gusto’s licenses and your state-specific rights to request information, submit complaints, dispute errors, or cancel transactions, visit our license page.", "license_uri": "https://gusto.com/about/licenses", "right_to_refund": "https://gusto.com/about/licenses", "liability_of_licensee": "https://gusto.com/about/licenses", "totals": {"company_debit": "1080.47", "net_pay_debit": "748.34", "child_support_debit": "100.0", "reimbursement_debit": "50.0", "tax_debit": "182.13"}, "taxes": [{"name": "Federal Income Tax", "amount": "30.36"}, {"name": "Social Security", "amount": "104.54"}, {"name": "Medicare", "amount": "24.46"}, {"name": "Additional Medicare", "amount": "0.0"}, {"name": "TX SUTA", "amount": "22.77"}, {"name": "FUTA", "amount": "0.0"}], "employee_compensations": [{"employee_uuid": "f83d0bd8-7e20-43b9-834c-6d514ef6cb47", "employee_first_name": "Patricia", "employee_last_name": "Hamill", "payment_method": "Direct Deposit", "net_pay": "748.34", "total_tax": "182.13", "total_garnishments": "0.0", "child_support_garnishment": "100.0", "total_reimbursement": "50.0"}], "licensee": {"name": "Gusto, Zenpayroll Inc.", "address": "525 20th St", "city": "San Francisco", "state": "CA", "postal_code": "94107", "phone_number": "4157778888"}}
  get-v1-companies-payroll-blockers-company_uuid:
    Payroll Blockers:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"key": "wc_pending_approval", "message": "Worker's compensation policy needs to be accepted."}, {"key": "eftps_in_error", "message": "We could not make payments to the Electronic Federal Tax Payment System."}, {"key": "geocode_error", "message": "Company or employee address could not be verified. Please ensure all addresses are valid."}, {"key": "geocode_needed", "message": "Company or employee address verification is missing. Please ensure all addresses are entered correctly."}, {"key": "pay_schedule_setup_not_complete", "message": "Some employees don’t have a pay schedule set up yet. Please complete this step to run payroll."}, {"key": "invalid_signatory", "message": "A signatory who is authorized to sign documents on behalf of your company is required. Please ensure their identity verification is successful."}, {"key": "suspended", "message": "Company is suspended and cannot run payroll."}, {"key": "soft_suspended", "message": "Company is placed in a 'soft' suspension state and requires missing/incorrect information to be corrected."}, {"key": "pending_payroll_review", "message": "Payroll is blocked. We are reviewing payroll information in your account. Please contact support if you believe this is an error."}, {"key": "pending_recovery_case", "message": "Payroll is blocked due to an open recovery case. Please contact support if you believe this is an error."}, {"key": "pending_information_request", "message": "Payroll is blocked due to an open information request. Please contact support if you believe this is an error."}, {"key": "needs_approval", "message": "Company needs to be approved to run payroll."}, {"key": "missing_addresses", "message": "Company must add addresses in order to run payroll."}, {"key": "missing_federal_tax_setup", "message": "Company must complete federal tax setup in order to run payroll."}, {"key": "missing_industry_selection", "message": "Company must complete industry selection in order to run payroll."}, {"key": "missing_bank_info", "message": "Company must have a bank account in order to run payroll."}, {"key": "missing_employee_setup", "message": "Company must add employees in order to run payroll."}, {"key": "missing_state_tax_setup", "message": "Company must complete state tax setup in order to run payroll."}, {"key": "missing_pay_schedule", "message": "Company must have a pay schedule in order to run payroll."}, {"key": "missing_forms", "message": "Company forms must be signed in order to run payroll."}, {"key": "missing_bank_verification", "message": "Company bank account must be verified in order to run payroll."}, {"key": "missing_signatory", "message": "Company must have a verified signatory in order to run payroll."}]
  post-companies-payroll-skip-company_uuid:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"payroll_type": "Regular", "start_date": "2023-05-26T00:00:00Z", "end_date": "2023-06-25T00:00:00Z", "pay_schedule_uuid": "85100524-4b42-4d2d-bd62-9d864f9aea64"}
      responses:
        "422":
          application/json: {"": {}}
  post-payrolls-gross-up-payroll_uuid:
    Example:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_uuid": "be48c41e-142d-4116-9430-5aba2313fac7", "net_pay": "1000.00"}
      responses:
        "422":
          application/json: {"": {}}
        "200": {}
  put-v1-companies-company_id-payrolls-payroll_id-calculate:
    Example:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"": {}}
  put-v1-companies-company_id-payrolls-payroll_id-submit:
    Example:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"": {}}
  put-api-v1-companies-company_id-payrolls-payroll_id-cancel:
    Unprocessed:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": false, "processed_date": "<value>", "calculated_at": "<value>", "uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "auto_pilot": false, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2021-02-22", "initial_check_date": "2021-02-22", "expected_debit_time": "2021-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"}, "created_at": "2022-02-01T22:00:00Z", "submission_blockers": [{"blocker_type": "fast_ach_threshold_exceeded", "blocker_name": "Fast ACH Threshold Exceeded", "unblock_options": [{"unblock_type": "wire_in", "check_date": "2024-06-10T00:00:00Z"}, {"unblock_type": "move_to_four_day", "check_date": "2024-06-12T00:00:00Z", "metadata": {}}], "selected_option": null, "status": "unresolved"}], "processing_request": null}
    Processed:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"payroll_deadline": "2021-02-18T22:00:00Z", "check_date": "2021-02-22", "processed": true, "processed_date": "2021-02-18", "calculated_at": "2021-02-18T12:00:00Z", "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777", "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb", "off_cycle": false, "auto_pilot": true, "external": false, "pay_period": {"start_date": "2021-02-01", "end_date": "2021-02-15", "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"}, "payroll_status_meta": {"cancellable": false, "expected_check_date": "2021-02-22", "initial_check_date": "2021-02-22", "expected_debit_time": "2021-02-18T22:00:00Z", "payroll_late": false, "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"}, "totals": {"company_debit": "121747.71", "net_pay_debit": "79283.80", "tax_debit": "42463.91", "reimbursement_debit": "0.00", "child_support_debit": "0.00", "reimbursements": "0.00", "net_pay": "81752.94", "gross_pay": "130635.89", "employee_bonuses": "0.00", "employee_commissions": "18536.37", "employee_cash_tips": "0.00", "employee_paycheck_tips": "0.00", "additional_earnings": "0.00", "owners_draw": "0.00", "check_amount": "2469.14", "employer_taxes": "6917.19", "employee_taxes": "35546.72", "benefits": "0.00", "employee_benefits_deductions": "13336.23", "imputed_pay": "0.00", "deferred_payroll_taxes": "0.00", "other_deductions": "240.00"}, "employee_compensations": [{"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "15.000", "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}, {"name": "Regular Hours", "hours": "40.000", "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a", "compensation_multiplier": 1, "flsa_status": "Nonexempt"}, {"name": "Overtime", "hours": "5.000", "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5", "compensation_multiplier": 1.5, "flsa_status": "Nonexempt"}, {"name": "Double overtime", "hours": "0.000", "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3", "compensation_multiplier": 2, "flsa_status": "Nonexempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Commission Only Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}, {"employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781", "excluded": false, "gross_pay": "2791.25", "net_pay": "1953.31", "check_amount": "1953.31", "payment_method": "Direct Deposit", "fixed_compensations": [{"name": "Bonus", "amount": "100.00", "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"}, {"name": "Reimbursement", "amount": "100.00", "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"}], "hourly_compensations": [{"name": "Regular Hours", "hours": "40.000", "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3", "compensation_multiplier": 1, "flsa_status": "Exempt"}], "paid_time_off": [{"name": "Vacation Hours", "hours": "20.000"}, {"name": "Sick Hours", "hours": "0.000"}, {"name": "Holiday Hours", "hours": "0.000"}], "benefits": [{"name": "Group Term Life", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": true}, {"name": "401K", "employee_deduction": "100.00", "company_contribution": "50.00", "imputed": false}], "deductions": [{"name": "Child Support", "amount": "80.00"}], "taxes": [{"name": "Federal Income Tax", "employer": false, "amount": "646.69"}, {"name": "Social Security", "employer": true, "amount": "191.25"}]}], "company_taxes": [{"name": "MO Compensation Deduction", "employer": true, "amount": "-0.92"}, {"name": "NY MCTMT", "employer": true, "amount": "5.00"}], "created_at": "2022-02-01T22:00:00Z", "credit_blockers": [{"blocker_type": "waiting_for_wire_in", "blocker_name": "Waiting for Wire In", "unblock_options": [{"unblock_type": "submit_wire", "check_date": "2024-06-10T00:00:00Z"}], "selected_option": "submit_wire", "status": "unresolved"}], "processing_request": {"status": "submit_success", "errors": []}}
    Basic:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          payroll_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-payrolls-payroll_uuid-employees-employee_uuid-pay_stub:
    speakeasy-default-get-v1-payrolls-payroll-uuid-employees-employee-uuid-pay-stub:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-employees-employee_uuid-pay_stubs:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "check_date": "2023-11-24T00:00:00Z", "gross_pay": "880", "net_pay": "541.02", "payroll_uuid": "a039cafb-745e-4af4-bf1e-935a86fc18e0", "check_amount": "500.2"}]
  post-v1-payrolls-payroll_uuid-generated_documents-printable_payroll_checks:
    Example:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"printing_format": "bottom"}
      responses:
        "200":
          application/json: {"payroll_uuid": "a83d0bd8-7d20-43b9-834c-6d514ef6cb20", "printing_format": "top", "starting_check_number": "10", "request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20", "status": "pending", "employee_check_number_mapping": [{"employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "check_number": 10}]}
    Basic:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"printing_format": "top"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"printing_format": "bottom"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          payroll_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"printing_format": "bottom"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours:
    Example:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"regular_hours_worked": 30.25, "overtime_hours_worked": 10, "double_overtime_hours_worked": 0, "pto_hours_used": 5.5, "sick_hours_used": 0}
      responses:
        "200":
          application/json: {"hours_earned": []}
    Basic:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          payroll_id: "<id>"
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-time_off_policies-time_off_policy_uuid:
    Unlimited Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "Test Vacation Unlimited Policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 700347, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"}, {"uuid": "3633ce57-abb7-422f-8c5a-455566618e6a"}, {"uuid": "9b37429c-e540-40fb-86b3-738ca9af65c7"}]}
    Fixed Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "2439c13f-f6d7-4a93-af8c-175fd4cc7ce8", "company_uuid": "f5f7b10d-2ddb-42f6-a955-d55320ce5316", "name": "Test Vacation Fixed Policy", "policy_type": "vacation", "accrual_method": "per_anniversary_year", "accrual_rate": "120.0", "accrual_rate_unit": "<value>", "paid_out_on_termination": true, "accrual_waiting_period_days": 0, "carryover_limit_hours": "240.0", "max_accrual_hours_per_year": "120.0", "max_hours": "300.0", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "de7a5fb3-2e0f-460a-abbf-467fe310bf5c"}, {"uuid": "92af03c7-a833-43ae-bae8-f67007a59b37"}]}
    Hourly Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "bd5f354f-12e0-4a5e-ad1f-953bb2685ad4", "company_uuid": "6767445f-5075-4ea4-a7f5-d5b5b93d4d60", "name": "Test Vacation Hourly Policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "1ea2764d-0f1a-4f09-b1d9-3006aecf63c4"}, {"uuid": "a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8"}]}
  put-time_off_policies-time_off_policy_uuid:
    example:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Hourly Vacation Policy", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0"}
      responses:
        "200":
          application/json: {"uuid": "64a9fdcb-6b72-49e9-938f-aad91c34e607", "company_uuid": "<id>", "name": "<value>", "policy_type": "vacation", "accrual_method": "<value>", "is_active": true, "employees": [{}]}
        "422": {}
    Unlimited Vacation Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "Unlimited Vacation Policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 857478, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "is_active": true, "employees": []}
    Hourly Vacation Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "d86223a1-ec67-4204-8d6a-0f36499c02d0", "company_uuid": "f43bcd64-7f57-4d4e-9c1a-7c90bab8a358", "name": "Test Vacation Hourly Policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "is_active": true, "employees": []}
    Basic:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-companies-company_uuid-time_off_policies:
    example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "Test Vacation Unlimited Policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 461008, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"}, {"uuid": "3633ce57-abb7-422f-8c5a-455566618e6a"}, {"uuid": "9b37429c-e540-40fb-86b3-738ca9af65c7"}]}, {"uuid": "2439c13f-f6d7-4a93-af8c-175fd4cc7ce8", "company_uuid": "f5f7b10d-2ddb-42f6-a955-d55320ce5316", "name": "Test Vacation Fixed Policy", "policy_type": "vacation", "accrual_method": "per_anniversary_year", "accrual_rate": "120.0", "accrual_rate_unit": "<value>", "paid_out_on_termination": true, "accrual_waiting_period_days": 0, "carryover_limit_hours": "240.0", "max_accrual_hours_per_year": "120.0", "max_hours": "300.0", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "de7a5fb3-2e0f-460a-abbf-467fe310bf5c"}, {"uuid": "92af03c7-a833-43ae-bae8-f67007a59b37"}]}, {"uuid": "bd5f354f-12e0-4a5e-ad1f-953bb2685ad4", "company_uuid": "6767445f-5075-4ea4-a7f5-d5b5b93d4d60", "name": "Test Vacation Hourly Policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "version": "f5556bce3d75ec2b62bd11990aa7993a", "is_active": true, "employees": [{"uuid": "1ea2764d-0f1a-4f09-b1d9-3006aecf63c4"}, {"uuid": "a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8"}]}]
  post-companies-company_uuid-time_off_policies:
    Unlimited Policy:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Unlimited Vacation Policy", "policy_type": "vacation", "accrual_method": "unlimited"}
      responses:
        "201":
          application/json: {"uuid": "68a1c8b1-cf9c-4f0b-91c3-8910fc125ec7", "company_uuid": "<id>", "name": "<value>", "policy_type": "vacation", "accrual_method": "<value>", "is_active": false, "employees": []}
        "422": {}
    Hourly Policy:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "Test Vacation Hourly Policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0"}
      responses:
        "201":
          application/json: {"uuid": "8b50daa4-883a-45ac-bf16-67931a204633", "company_uuid": "<id>", "name": "<value>", "policy_type": "vacation", "accrual_method": "<value>", "is_active": false, "employees": [{}, {}, {}]}
        "422": {}
    Unlimited Vacation Policy:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "policy_type": "<value>", "accrual_method": "per_anniversary_year"}
      responses:
        "201":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "Unlimited Vacation Policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 486589, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "is_active": true, "employees": []}
    Hourly Vacation Policy:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "policy_type": "<value>", "accrual_method": "per_anniversary_year"}
      responses:
        "201":
          application/json: {"uuid": "d86223a1-ec67-4204-8d6a-0f36499c02d0", "company_uuid": "f43bcd64-7f57-4d4e-9c1a-7c90bab8a358", "name": "Test Vacation Hourly Policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "is_active": true, "employees": []}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "policy_type": "<value>", "accrual_method": "per_pay_period"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "policy_type": "<value>", "accrual_method": "unlimited"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"name": "<value>", "policy_type": "<value>", "accrual_method": "per_hour_paid"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-version-time_off_policies-time_off_policy_uuid-add_employees:
    Unlimited Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "test policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 556955, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "is_active": true, "employees": [{"uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"}]}
    Fixed/Hourly Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "1cb0826f-c6d7-4361-b3e7-5e6d8af6853e", "company_uuid": "<id>", "name": "<value>", "policy_type": "vacation", "accrual_method": "<value>", "is_active": true, "employees": [{}]}
        "422": {}
    Hourly Policy:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "test policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "is_active": true, "employees": [{"uuid": "56c672b4-3918-45cd-a3bb-a62ae0ff1307"}, {"uuid": "28e7a45d-32dd-4925-a82a-9a3ccc6d302c"}, {"uuid": "f60650da-ba18-417a-b2ab-3c9b6f0fe4f2"}]}
    Basic:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-v1-time_off_policies-time_off_policy_uuid-remove_employees:
    example:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "test policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 75298, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "is_active": true, "employees": [{"uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"}]}
    Basic:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-version-time_off_policies-time_off_policy_uuid-balance:
    example:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "test policy", "policy_type": "vacation", "accrual_method": "per_hour_paid", "accrual_rate": "4.0", "accrual_rate_unit": "80.0", "paid_out_on_termination": true, "accrual_waiting_period_days": 30, "carryover_limit_hours": "200.0", "max_accrual_hours_per_year": "120.0", "max_hours": "240.0", "complete": true, "is_active": true, "employees": [{"uuid": "56c672b4-3918-45cd-a3bb-a62ae0ff1307"}, {"uuid": "28e7a45d-32dd-4925-a82a-9a3ccc6d302c"}, {"uuid": "f60650da-ba18-417a-b2ab-3c9b6f0fe4f2"}]}
    Basic:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-v1-time_off_policies-time_off_policy_uuid-deactivate:
    example:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "3f746cd0-dd08-408f-b712-8180c7c621e9", "company_uuid": "de83cff2-8e7a-448e-a28c-14258a9971c3", "name": "test policy", "policy_type": "vacation", "accrual_method": "unlimited", "accrual_rate": "<value>", "accrual_rate_unit": "<value>", "paid_out_on_termination": false, "accrual_waiting_period_days": 340065, "carryover_limit_hours": "<value>", "max_accrual_hours_per_year": "<value>", "max_hours": "<value>", "complete": true, "is_active": false, "employees": [{"uuid": "05ed3150-591e-4f8b-bfd5-55d478edd2d8"}]}
    Basic:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          time_off_policy_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-contractor_payments-contractor_payment_uuid-receipt:
    Example:
      parameters:
        path:
          contractor_payment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"contractor_payment_uuid": "afccb970-357e-4013-81f5-85dafc74f9b6", "company_uuid": "c827aa0d-3928-4d5a-ab1f-400641a7d2b8", "name_of_sender": "Torp and Sons and Sons", "name_of_recipient": "Patricia Hamill", "debit_date": "2022-06-02", "license": "Your payroll provider partners with Gusto Inc. for payments processing. Gusto Inc. is a licensed money transmitter. Learn more on our license page.", "license_uri": "https://gusto.com/about/licenses", "right_to_refund": "https://gusto.com/about/licenses", "liability_of_licensee": "https://gusto.com/about/licenses", "totals": {"company_debit": "748.34"}, "contractor_payments": [{"contractor_uuid": "f83d0bd8-7e20-43b9-834c-6d514ef6cb47", "contractor_first_name": "Patricia", "contractor_last_name": "Hamill", "contractor_business_name": "", "contractor_type": "Individual", "payment_method": "Direct Deposit", "wage": "448.34", "bonus": "248.00", "reimbursement": "100.00"}], "licensee": {"name": "Gusto, Zenpayroll Inc.", "address": "525 20th St", "city": "San Francisco", "state": "CA", "postal_code": "94107", "phone_number": "4157778888"}}
  get-v1-contractor_payments-contractor_payment_uuid-fund:
    Example:
      parameters:
        path:
          contractor_payment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "contractor_uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037", "bonus": "20.0", "date": "2020-10-19", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "100.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": true, "wage": "0.0", "wage_type": "Hourly", "wage_total": "740.00"}
    Basic:
      parameters:
        path:
          contractor_payment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          contractor_payment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_payment_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-companies-company_id-contractor_payments:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_uuid": "<id>", "date": "2020-01-01", "payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}
      responses:
        "200":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "contractor_uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037", "bonus": "20.0", "date": "2020-10-19", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "100.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": true, "wage": "0.0", "wage_type": "Hourly", "wage_total": "740.00"}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_uuid": "<id>", "date": "2020-01-01", "payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_uuid": "<id>", "date": "2020-01-01", "payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"contractor_uuid": "<id>", "date": "2020-01-01", "payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-contractor_payments:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          start_date: "2020-01-01"
          end_date: "2020-12-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {}
  get-v1-companies-company_id-contractor_payment-contractor-payment:
    Example:
      parameters:
        path:
          company_id: "<id>"
          contractor_payment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "04552eb9-7829-4b18-ae96-6983552948df", "contractor_uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037", "bonus": "20.0", "date": "2020-10-19", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "100.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": true, "wage": "0.0", "wage_type": "Hourly", "wage_total": "740.00"}
  delete-v1-companies-company_id-contractor_payment-contractor-payment:
    Basic:
      parameters:
        path:
          company_id: "<id>"
          contractor_payment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
          contractor_payment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
          contractor_payment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-companies-company_id-contractor_payment_groups:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": []}
      responses:
        "200":
          application/json: {"uuid": "f693e034-d833-46e3-88d4-2c820c383c57", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-07T00:00:00Z", "debit_date": "2024-05-01T00:00:00Z", "status": "Unfunded", "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed", "totals": {"amount": "2295.0", "debit_amount": "2295.0", "wage_amount": "2220.0", "reimbursement_amount": "75.0"}, "contractor_payments": [{"uuid": "630dc982-f498-4ebc-a6dc-4d76711027ce", "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4", "bonus": "0.0", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "75.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": false, "wage": "0.0", "wage_type": "Hourly", "wage_total": "720.0"}, {"uuid": "12f51eba-d653-4357-8c05-1f1f8d0fd5e3", "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d", "bonus": "0.0", "hours": "0.0", "payment_method": "Check", "reimbursement": "0.0", "status": "Unfunded", "hourly_rate": "0.0", "may_cancel": false, "wage": "1500.0", "wage_type": "Fixed", "wage_total": "1500.0"}]}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}, {"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}, {"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}, {"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": []}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-contractor_payment_groups:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query:
          start_date: "2020-01-01"
          end_date: "2020-12-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "7f2337f9-9b78-44b9-aeed-be4777b833a8", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-03-15T00:00:00Z", "debit_date": "2024-03-11T00:00:00Z", "status": "Funded", "creation_token": "a51a3500-3200-43af-a738-169d4b66a9db", "totals": {"debit_amount": "740.00", "wage_amount": "720.00", "reimbursement_amount": "20.00"}}, {"uuid": "56260b3d-c375-415c-b77a-75d99f717193", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-02T00:00:00Z", "debit_date": "2024-04-26T00:00:00Z", "status": "Unfunded", "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed", "totals": {"debit_amount": "2365.00", "wage_amount": "2270.00", "reimbursement_amount": "95.00"}}]
  post-v1-companies-company_id-contractor_payment_groups-preview:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "200":
          application/json: {"uuid": "nil", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-07T00:00:00Z", "debit_date": "2024-05-01T00:00:00Z", "status": "Unfunded", "creation_token": "nil", "totals": {"amount": "2295.0", "debit_amount": "2295.0", "wage_amount": "2220.0", "reimbursement_amount": "75.0"}, "contractor_payments": [{"uuid": "nil", "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4", "bonus": "0.0", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "75.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": false, "wage": "0.0", "wage_type": "Hourly", "wage_total": "720.0"}, {"uuid": "nil", "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d", "bonus": "0.0", "hours": "0.0", "payment_method": "Check", "reimbursement": "0.0", "status": "Unfunded", "hourly_rate": "0.0", "may_cancel": false, "wage": "1500.0", "wage_type": "Fixed", "wage_total": "1500.0"}]}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": [{"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}, {"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}, {"payment_method": "Direct Deposit", "wage": 5000, "hours": 40, "bonus": 500, "reimbursement": 20}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"check_date": "2020-01-01", "creation_token": "1d532d13-8f61-4a57-ad3c-b5fac1c6e05e", "contractor_payments": []}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-contractor_payment_groups-contractor_payment_group_id:
    Example:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "f693e034-d833-46e3-88d4-2c820c383c57", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-07T00:00:00Z", "debit_date": "2024-05-01T00:00:00Z", "status": "Unfunded", "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed", "totals": {"amount": "2295.0", "debit_amount": "2295.0", "wage_amount": "2220.0", "reimbursement_amount": "75.0"}, "contractor_payments": [{"uuid": "630dc982-f498-4ebc-a6dc-4d76711027ce", "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4", "bonus": "0.0", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "75.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": false, "wage": "0.0", "wage_type": "Hourly", "wage_total": "720.0"}, {"uuid": "12f51eba-d653-4357-8c05-1f1f8d0fd5e3", "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d", "bonus": "0.0", "hours": "0.0", "payment_method": "Check", "reimbursement": "0.0", "status": "Unfunded", "hourly_rate": "0.0", "may_cancel": false, "wage": "1500.0", "wage_type": "Fixed", "wage_total": "1500.0"}]}
  delete-v1-contractor_payment_groups-contractor_payment_group_id:
    Basic:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-v1-contractor_payment_groups-contractor_payment_group_id-fund:
    Example:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "f693e034-d833-46e3-88d4-2c820c383c57", "company_uuid": "c54046f7-1be4-4c54-8194-f4842c30c86d", "check_date": "2024-05-07T00:00:00Z", "debit_date": "2024-05-01T00:00:00Z", "status": "Unfunded", "creation_token": "45ef81bb-ae24-4ad1-b2c6-6e563a4c30ed", "totals": {"amount": "2295.0", "debit_amount": "2295.0", "wage_amount": "2220.0", "reimbursement_amount": "75.0"}, "contractor_payments": [{"uuid": "630dc982-f498-4ebc-a6dc-4d76711027ce", "contractor_uuid": "2e6d0970-31bf-47ce-bdb4-713e4207ecf4", "bonus": "0.0", "hours": "40.0", "payment_method": "Direct Deposit", "reimbursement": "75.0", "status": "Unfunded", "hourly_rate": "18.0", "may_cancel": false, "wage": "0.0", "wage_type": "Hourly", "wage_total": "720.0"}, {"uuid": "12f51eba-d653-4357-8c05-1f1f8d0fd5e3", "contractor_uuid": "a975fda0-fcf5-469a-a5fd-06e43d1cd99d", "bonus": "0.0", "hours": "0.0", "payment_method": "Check", "reimbursement": "0.0", "status": "Unfunded", "hourly_rate": "0.0", "may_cancel": false, "wage": "1500.0", "wage_type": "Fixed", "wage_total": "1500.0"}]}
    Basic:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          contractor_payment_group_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-company-forms:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}]
  get-v1-company-form:
    Example:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}
  get-v1-company-form-pdf:
    Example:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "document_url": "https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020", "document_content_type": "application/pdf"}
  put-v1-company-form-sign:
    Example:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "Jane Smith", "agree": true, "signed_by_ip_address": "192.168.0.1"}
      responses:
        "200":
          application/json: {"uuid": "48cdd5ec-a4dd-4840-a424-ad79f38d8408", "name": "company_direct_deposit", "title": "Direct Deposit Authorization", "description": "We need you to sign paperwork to authorize us to debit and credit your bank account and file and pay your taxes.", "draft": false, "year": null, "quarter": null, "requires_signing": true, "document_content_type": "application/pdf"}
    Basic:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": false, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          form_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "agree": true, "signed_by_ip_address": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-generated_documents-document_type-request_uuid:
    Example:
      parameters:
        path:
          document_type: "printable_payroll_checks"
          request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20", "status": "succeeded", "document_urls": ["https://document.url.com"]}
  post-companies-company_uuid-reports:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"columns": ["employee_compensation_time_period", "employee_social_security_tax", "bank_account_account_number"], "groupings": ["work_address_state"], "file_type": "csv", "with_totals": false, "start_date": "2024-01-01", "end_date": "2024-04-01", "dismissed_start_date": "2024-01-01", "dismissed_end_date": "2024-04-01"}
      responses:
        "200":
          application/json: {"request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20", "company_uuid": "z83d0ca8-7d41-42a9-834y-7d218ef6cb20", "custom_name": "CustomReport", "file_type": "csv"}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"columns": [], "groupings": ["employee"], "file_type": "json", "with_totals": false, "start_date": "2024-01-01", "end_date": "2024-04-01", "dismissed_start_date": "2024-01-01", "dismissed_end_date": "2024-04-01"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"columns": ["employee_taxes", "check_date"], "groupings": ["work_address", "payroll", "work_address"], "file_type": "json", "with_totals": false, "start_date": "2024-01-01", "end_date": "2024-04-01", "dismissed_start_date": "2024-01-01", "dismissed_end_date": "2024-04-01"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"columns": [], "groupings": ["work_address_state", "work_address"], "file_type": "csv", "with_totals": false, "start_date": "2024-01-01", "end_date": "2024-04-01", "dismissed_start_date": "2024-01-01", "dismissed_end_date": "2024-04-01"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-reports-report_uuid:
    Example:
      parameters:
        path:
          report_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"request_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20", "status": "succeeded", "report_urls": ["https://report.url.com"]}
  get-companies-company_uuid-report-templates-report_type:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          report_type: "<value>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"columns": ["regular_rate", "regular_hours", "regular_earnings"], "groupings": ["payroll", "employee"], "company_uuid": "p83d0ca8-7d41-42a9-834y-7d218ef6cb20", "report_type": "payroll_journal"}
  post-v1-companies-company_id-company_benefits:
    Example:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "yuck vice between gee ugh ha"}
      responses:
        "201":
          application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "company_uuid": "881ce3f2-e3e1-49c9-8ad4-0bcf515f5618", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "benefit_type": 1, "active": true, "description": "Kaiser Permanente", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false}
    Basic:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "bulky electronics through for ick superb nudge embalm simple ouch"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "yahoo until planula conceal pfft partially till distant zowie nasalise"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "description": "down ha who political inside bony procurement funny entwine institute"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_id-company_benefits:
    Example:
      parameters:
        path:
          company_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "company_uuid": "528cc543-8a41-497e-b479-23a4c5ec77ac", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "benefit_type": 1, "active": true, "description": "Kaiser Permanente", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false}]
  get-v1-company_benefits-company_benefit_id:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "active": true, "description": "Kaiser Permanente", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false, "employee_benefits": [{"employee_uuid": "ae44a0b2-3c89-41e1-91c8-5f8224a779ca", "company_benefit_uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "active": true, "deduct_as_percentage": false, "employee_deduction": "3", "company_contribution": "0", "uuid": "9988f241-9aee-4383-bfca-eac79cf58135", "contribution": {"type": "amount", "value": {}}}]}
  put-v1-company_benefits-company_benefit_id:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "active": false}
      responses:
        "200":
          application/json: {"version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872", "company_uuid": "881ce3f2-e3e1-49c9-8ad4-0bcf515f5618", "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9", "benefit_type": 1, "active": true, "description": "Kaiser Permanente", "deletable": true, "supports_percentage_amounts": true, "responsible_for_employer_taxes": false, "responsible_for_employee_w2": false}
    Basic:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-company_benefits-company_benefit_id:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": {"base": [{"type": "error type", "message": "This is an error message", "full_message": "This is a more descriptive error message"}]}, "": {}}
  get-v1-benefits:
    Supported Benefits:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"benefit_type": 1, "name": "Medical Insurance", "description": "Deductions and contributions for Medical Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 2, "name": "Dental Insurance", "description": "Deductions and contributions for Dental Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 3, "name": "Vision Insurance", "description": "Deductions and contributions for Vision Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 6, "name": "Health Savings Account", "description": "Health Savings Accounts (HSA) allow employees to be reimbursed for qualified medical expenses. Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employees' HSA. Remaining balances are carried over in next year.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": true, "category": "Health"}, {"benefit_type": 7, "name": "Health FSA", "description": "Flexible Spending Accounts (FSA) allow employees to be reimbursed for qualified medical expenses. Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employees' FSA. Remaining balances are not carried over in next year.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": true, "category": "Health"}, {"benefit_type": 11, "name": "Dependent Care FSA", "description": "Dependent Care FSA reimburses employees for expenses to care for dependents while the employee is at work (e.g. Daycares). Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employee FSA. Remaining balances are not carried over to the next year. Single parents or Married couples filing a joint return can elect up to $5000 per year. Married couples filing separate returns are limited to $2500 elections each.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": true, "category": "Health"}, {"benefit_type": 8, "name": "SIMPLE IRA", "description": "The SIMPLE IRA is a tax-deferred retirement savings plan for employees. It is often used by small businesses as an alternative to 401(k) due to its relatively low operating cost. Employers are required to contribute a specific percentage to an employee's SIMPLE IRA.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 105, "name": "Roth 401(k)", "description": "Roth 401(k) is an after-tax savings plan for employees. The standard maximum is $18,000, or $24,000 for employees over 50 years old.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 110, "name": "Roth 403(b)", "description": "Roth 403(b) is an after-tax savings plan for certain clerics, employees of public schools, and employees of other types of tax-exempt organizations. Contributions made by employees are taxable for federal and state withholding. Often, employers contribute additional pre-tax dollars to the employee’s Roth account to encourage saving for retirement.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 5, "name": "401(k)", "description": "401(k) is tax-deferred retirement savings plan for employees. The standard maximum is $18,000, or $24,000 for employees over 50 years old.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 9, "name": "403(b)", "description": "403(b) is tax-deferred retirement savings plan for certain clerics, employees of public schools, and employees of other types of tax-exempt organizations.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 108, "name": "SEP-IRA", "description": "A SEP-IRA is a pre-tax retirement savings plan where only the employer contributes. It is often used by small businesses as an alternative to 401(k) due to its relatively low operating cost. Employers are required to contribute the same percentage to all enrolled employees, with a maximum contribution of 25% of the employee’s compensation.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 109, "name": "SARSEP", "description": "A SARSEP is a pre-tax retirement savings plan used by small businesses as an alternative to 401(k) due to its relatively low operating cost. While new SARSEP plans are not available, there are still some companies that are grandfathered into the plan. Employers are required to contribute the same percentage to all enrolled employees, with a maximum contribution of 25% of the employee’s compensation.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": true, "yearly_limit": true, "category": "Savings and Retirement"}, {"benefit_type": 107, "name": "Group-Term Life Insurance", "description": "Group-Term Life Insurance for coverage in excess of $50,000 per employee is a taxable fringe benefit. See IRS Publication 15-B to determine the dollar value of the excess coverage.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 10, "name": "Commuter Benefits (pre-tax)", "description": "Tax-free commuter benefits for transit, vanpooling, bicycling, and work-related parking costs. The annual maximum contribution for this pre-tax benefit is in the IRS publication 15-B.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 106, "name": "Personal Use of Company Car", "description": "When an employee uses a company-owned car for personal matters, it is considered taxable benefit provided in-kind.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 111, "name": "529 College Savings", "description": "529 College Savings is an after-tax savings plan for employees designed to encourage saving for future college costs. This benefit should be reported as a taxable benefit and will therefore be taxed.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Other"}, {"benefit_type": 112, "name": "Student Loan Repayment", "description": "Student Loan Repayment is an after-tax savings plan for employees to pay towards their outstanding student loans. An employee can choose to set aside after-tax dollars towards this benefit. These benefits should be reported as a taxable benefit and will therefore be taxed.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Other"}, {"benefit_type": 998, "name": "Short Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 999, "name": "Long Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 996, "name": "Short Term Disability (pre-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 997, "name": "Long Term Disability (pre-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 991, "name": "Voluntary Short Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 992, "name": "Voluntary Long Term Disability (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 993, "name": "Voluntary Life (post-tax)", "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.", "pretax": false, "posttax": true, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Health"}, {"benefit_type": 113, "name": "Commuter Parking", "description": "Tax-free commuter benefits allow employees to reduce their monthly commuting expenses for transit, carpooling, bicycling, and work-related parking costs. Please note that there is an annual maximum for this pre-tax benefit. The maximum dollar amount is found in IRS Publication 15-B.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 114, "name": "Commuter Transit", "description": "Tax-free commuter benefits allow employees to reduce their monthly commuting expenses for transit, carpooling, bicycling, and work-related parking costs. Please note that there is an annual maximum for this pre-tax benefit. The maximum dollar amount is found in IRS Publication 15-B.", "pretax": true, "posttax": false, "imputed": false, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 100, "name": "Other (taxable)", "description": "Other taxable benefit", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Other"}, {"benefit_type": 201, "name": "Cell Phone (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 202, "name": "Gym & Fitness (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 203, "name": "Housing (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}, {"benefit_type": 204, "name": "Wellness (taxable)", "description": "Employer-sponsored benefits like this are called fringe benefits, and they don’t get special tax treatment—they’ll be reported as taxable wages on your employees’ paystubs.", "pretax": false, "posttax": true, "imputed": true, "healthcare": false, "retirement": false, "yearly_limit": false, "category": "Transportation"}]
  get-v1-benefits-benefit_id:
    Example:
      parameters:
        path:
          benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"benefit_type": 1, "name": "Medical Insurance", "description": "Deductions and contributions for Medical Insurance", "pretax": true, "posttax": false, "imputed": false, "healthcare": true, "retirement": false, "yearly_limit": false}
  get-v1-benefits-company_benefit_id-summary:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        query:
          start_date: "2022-01-01"
          end_date: "2022-12-31"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"start_date": "2022-01-01", "end_date": "2022-12-31", "description": "Simple IRA", "company_benefit_deduction": "60.0", "company_benefit_contribution": "30.0"}
  get-v1-company_benefits-company_benefit_id-employee_benefits:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "100.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}]
  put-v1-company_benefits-company_benefit_id-employee_benefits:
    Example:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "250.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e"}]}
      responses:
        "200":
          application/json: [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "100.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}]
    Basic:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": []}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": [{"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}, {"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}, {"active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "<id>"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"employee_benefits": []}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-benefits-benefits_id-requirements:
    Example:
      parameters:
        path:
          benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"employee_deduction": {"required": true, "editable": true, "choices": ["<value>"]}, "contribution": {"required": true, "editable": true, "default_value": {"value": "2", "type": "percentage"}, "choices": ["percentage"]}, "deduct_as_percentage": {"required": true, "editable": true, "choices": ["<value>", "<value>", "<value>"]}, "catch_up": {"required": true, "editable": true, "choices": ["<value>"]}, "limit_option": {"required": false, "editable": false, "choices": ["<value>"]}, "company_contribution_annual_maximum": {"required": false, "editable": false, "choices": ["<value>", "<value>"]}, "coverage_salary_multiplier": {"required": false, "editable": false, "choices": ["<value>", "<value>"]}, "coverage_amount": {"required": false, "editable": false, "choices": ["<value>", "<value>", "<value>"]}}
  post-v1-employees-employee_id-employee_benefits:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "f68abb42-431e-4392-bc3f-2795627e00f3", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "201":
          application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "908123091820398", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Tiered example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "201":
          application/json: {"version": "string", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "string", "contribution": {"type": "tiered", "value": {"tiers": [{"rate": "5.0", "threshold": "2.0", "threshold_delta": "2.0"}, {"rate": "3.0", "threshold": "5.0", "threshold_delta": "3.0"}]}}, "elective": false, "company_contribution_annual_maximum": "string", "limit_option": "string", "catch_up": false, "coverage_amount": "string", "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"company_benefit_uuid": "<id>", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "elective": false, "catch_up": false, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employees-employee_id-employee_benefits:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "100.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}]
  get-v1-employee_benefits-employee_benefit_id:
    Example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "908123091820398", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Tiered example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "string", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "string", "contribution": {"type": "tiered", "value": {"tiers": [{"rate": "5.0", "threshold": "2.0", "threshold_delta": "2.0"}, {"rate": "3.0", "threshold": "5.0", "threshold_delta": "3.0"}]}}, "elective": false, "company_contribution_annual_maximum": "string", "limit_option": "string", "catch_up": false, "coverage_amount": "string", "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
  put-v1-employee_benefits-employee_benefit_id:
    Example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "employee_deduction": "250.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "200":
          application/json: {"version": "09j3d29jqdpj92109j9j2d90dq", "active": true, "employee_deduction": "100.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "200.00", "contribution": {"type": "amount", "value": "100.00"}, "elective": false, "company_contribution_annual_maximum": "200.00", "limit_option": null, "catch_up": false, "coverage_amount": null, "deduction_reduces_taxable_income": null, "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "908123091820398", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Tiered example:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "200":
          application/json: {"version": "string", "active": true, "employee_deduction": "0.00", "deduct_as_percentage": false, "employee_deduction_annual_maximum": "string", "contribution": {"type": "tiered", "value": {"tiers": [{"rate": "5.0", "threshold": "2.0", "threshold_delta": "2.0"}, {"rate": "3.0", "threshold": "5.0", "threshold_delta": "3.0"}]}}, "elective": false, "company_contribution_annual_maximum": "string", "limit_option": "string", "catch_up": false, "coverage_amount": "string", "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false, "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e", "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be", "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031"}
    Basic:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>", "employee_deduction": "0.00", "elective": false, "catch_up": false, "deduction_reduces_taxable_income": "unset", "coverage_salary_multiplier": "0.00", "company_contribution": "0.00", "contribute_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-employee_benefits-employee_benefit_id:
    speakeasy-default-delete-v1-employee-benefits-employee-benefit-id:
      parameters:
        path:
          employee_benefit_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  post-employee-ytd-benefit-amounts-from-different-company:
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"tax_year": 2422.08, "ytd_employee_deduction_amount": "0.00", "ytd_company_contribution_amount": "0.00"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"tax_year": 3246.52, "ytd_employee_deduction_amount": "0.00", "ytd_company_contribution_amount": "0.00"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"tax_year": 9918.67, "ytd_employee_deduction_amount": "0.00", "ytd_company_contribution_amount": "0.00"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  post-v1-employees-employee_id-garnishments:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "150.00", "description": "Back taxes", "court_ordered": true, "times": null, "recurring": true, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "201":
          application/json: {"uuid": "0648730b-e81b-40fd-b400-179e824ec05f", "active": true, "times": null, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": null, "deduct_as_percentage": false}
    Child-Support-Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "40", "court_ordered": true, "garnishment_type": "child_support", "times": null, "recurring": true, "annual_maximum": null, "pay_period_maximum": "500.00", "deduct_as_percentage": true, "child_support": {"state": "FL", "payment_period": "Monthly", "fips_code": "12011", "case_number": "CS1234"}}
      responses:
        "201":
          application/json: {"uuid": "427b9e5b-95d2-4cfd-b063-45dff43ac8aa", "active": true, "times": null, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": null, "deduct_as_percentage": false}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "<value>", "court_ordered": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "<value>", "court_ordered": false, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "amount": "<value>", "court_ordered": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employees-employee_id-garnishments:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c8a232aa-0b11-4b8a-b005-71e9e705d0e6", "active": true, "times": null, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": null, "deduct_as_percentage": false}, {"uuid": "21e27667-18d6-4d46-812e-0aee1b9ddf12", "active": true, "times": null, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": null, "deduct_as_percentage": false}]
  get-v1-garnishments-garnishment_id:
    Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "a1b1d4d7-9d85-4c0c-970a-7d2676a05c04", "active": true, "times": null, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": null, "deduct_as_percentage": false}
    Child-Support-Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c70f28ce-90e2-4168-b683-1abb1a5f7f21", "active": true, "times": null, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": null, "deduct_as_percentage": false}
  put-v1-garnishments-garnishment_id:
    Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": false, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "52b7c567242cb7452e89ba2bc02cb476"}
      responses:
        "200":
          application/json: {"uuid": "4c044b4e-cf94-4436-a3fb-eaf811f919f4", "active": true, "times": null, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": null, "deduct_as_percentage": false}
    Child-Support-Example:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "b05be711-9e3f-4fc9-8067-cd32e9559970", "active": true, "times": null, "recurring": false, "annual_maximum": null, "total_amount": null, "pay_period_maximum": null, "deduct_as_percentage": false}
    Basic:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          garnishment_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"active": true, "times": null, "recurring": false, "annual_maximum": null, "pay_period_maximum": null, "deduct_as_percentage": false, "version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-garnishments-child_support:
    Example:
      parameters:
        header:
          X-Gusto-API-Version: "2024-04-01"
  get-v1-employees-employee_id-i9_authorization:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "7fe28e4d-1e30-4ebb-8d22-aae768170b82", "version": "<value>", "authorization_status": "permanent_resident", "employer_signed": false, "employee_signed": false}
  put-v1-employees-employee_id-i9_authorization:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"authorization_status": "citizen", "version": "52b7c567242cb7452e89ba2bc02cb476"}
      responses:
        "200":
          application/json: {"uuid": "d95fa7f0-e743-42ce-b47c-b60cc78135dd", "version": "<value>", "authorization_status": "permanent_resident", "employer_signed": false, "employee_signed": true}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"authorization_status": "noncitizen"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"authorization_status": "alien"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"authorization_status": "citizen"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-employees-employee_id-i9_authorization-document_options:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"section": "A", "description": "Foreign passport", "document_type": "foreign_passport_w_i94", "document_title": ["Foreign passport"], "common_choice": true}, {"section": "B", "description": "Driver’s license or state-issued ID card", "document_type": "driver_license", "document_title": ["Driver's license", "State ID card"], "common_choice": true}, {"section": "C", "description": "Social Security card", "document_type": "ssn_card", "document_title": ["Social Security card"], "common_choice": true}]
  get-v1-employees-employee_id-i9_authorization-documents:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "7f2337f9-9b78-44b9-aeed-be4777b833a8", "document_type": "driver_license", "document_title": "Driver's license", "expiration_date": "2027-01-01", "issuing_authority": "USA"}, {"uuid": "9p2337f9-9b78-44b9-aeed-be4777b833a8", "document_type": "ssn_card", "document_title": "Social Security card", "issuing_authority": "USA"}]
  put-v1-employees-employee_id-i9_authorization-documents:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"documents": [{"document_type": "us_passport", "document_title": "US Passport", "document_number": "F12345678", "expiration_date": "2026-01-01", "issuing_authority": "USA"}]}
      responses:
        "200":
          application/json: [{"uuid": "7f2337f9-9b78-44b9-aeed-be4777b833a8", "document_type": "driver_license", "document_title": "Driver's license", "expiration_date": "2027-01-01", "issuing_authority": "USA"}, {"uuid": "9p2337f9-9b78-44b9-aeed-be4777b833a8", "document_type": "ssn_card", "document_title": "Social Security card", "issuing_authority": "USA"}]
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"documents": [{"document_type": "<value>", "document_title": "<value>", "issuing_authority": "<value>"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"documents": [{"document_type": "<value>", "document_title": "<value>", "issuing_authority": "<value>"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"documents": [{"document_type": "<value>", "document_title": "<value>", "issuing_authority": "<value>"}, {"document_type": "<value>", "document_title": "<value>", "issuing_authority": "<value>"}, {"document_type": "<value>", "document_title": "<value>", "issuing_authority": "<value>"}]}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-v1-employees-employee_id-i9_authorization-documents-document_id:
    speakeasy-default-delete-v1-employees-employee-id-i9-authorization-documents-document-id:
      parameters:
        path:
          employee_id: "<id>"
          document_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
  put-v1-employees-employee_id-i9_authorization-employer_sign:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "signer_title": "<value>", "agree": false}
      responses:
        "200":
          application/json: {"uuid": "ab18cec1-6568-4d93-b2ad-8deafd3f650c", "version": "<value>", "authorization_status": "alien", "employer_signed": true, "employee_signed": true}
    Basic:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "signer_title": "<value>", "signed_by_ip_address": "<value>", "agree": true}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "signer_title": "<value>", "signed_by_ip_address": "<value>", "agree": true}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          employee_id: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"signature_text": "<value>", "signer_title": "<value>", "signed_by_ip_address": "<value>", "agree": true}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_uuid-tax_requirements-state:
    Example Tax Requirements for GA:
      parameters:
        path:
          company_uuid: "<id>"
          state: "New Mexico"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"company_uuid": "6c14eac3-0da2-474d-bda1-786b3602d381", "state": "GA", "requirement_sets": [{"state": "GA", "key": "registrations", "label": "Registrations", "effective_from": null, "requirements": [{"key": "71653ec0-00b5-4c66-a58b-22ecf21704c5", "applicable_if": [], "label": "Withholding Number", "description": "If you have run payroll in the past in GA, find your withholding number on notices received from the Georgia Department of Revenue, or call the agency at (877) 423-6711. If you don’t have a number yet, you should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register the business online</a>. The last two characters of your ID must be upper case letters.", "value": "1233214-AB", "metadata": {"type": "text"}}, {"key": "6c0911ab-5860-412e-bdef-6437cd881df5", "applicable_if": [], "label": "DOL Account Number", "description": "If you have run payroll in the past in GA, find your DOL account number on notices received from the Georgia Department of Labor, or call the agency at (404) 232-3300. If you don’t have an account number yet, please <a target='_blank' data-bypass href='https://support.gusto.com/hc/en-us/articles/210139038#registerdol'>follow the instructions here</a> to register your business with the Georgia Dept. of Labor.", "value": "474747-88", "metadata": {"type": "text"}}]}, {"state": "GA", "key": "taxrates", "label": "Tax Rates", "effective_from": "2022-01-01", "requirements": [{"key": "e0ac2284-8d30-4100-ae23-f85f9574868b", "applicable_if": [], "label": "Total Tax Rate", "description": "Haven't received your assigned rate yet? <a target='_blank' data-bypass href='https://support.gusto.com/article/106622236100000/State-unemployment-insurance-(SUI)-tax'>Find the new employer rate</a> and enter it here.", "value": "0.05", "metadata": {"type": "tax_rate", "validation": {"type": "min_max", "min": "0.0004", "max": "0.081"}}}]}, {"state": "GA", "key": "depositschedules", "label": "Deposit Schedules", "effective_from": "2022-01-01", "requirements": [{"key": "6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c", "applicable_if": [], "label": "Deposit Schedule", "description": "Georgia rejects payments made on the wrong schedule. GA employers receive their schedule on a registration verification letter after registering with the Georgia Dept. of Revenue. If you are unsure, call the agency at (877) 423-6711. If you did not register your business yet, please <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#2'>register the business with the Georgia Dept. of Revenue</a>.", "value": "Semi-weekly", "metadata": {"type": "select", "options": [{"label": "Semiweekly", "value": "Semi-weekly"}, {"label": "Monthly", "value": "Monthly"}, {"label": "Quarterly", "value": "Quarterly"}]}}]}]}
  put-v1-companies-company_uuid-tax_requirements-state:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
          state: "New Jersey"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"requirement_sets": [{"key": "registrations", "effective_from": null, "state": "GA", "requirements": [{"key": "71653ec0-00b5-4c66-a58b-22ecf21704c5", "value": "1233214-AB"}, {"key": "6c0911ab-5860-412e-bdef-6437cd881df5", "value": "474747-22"}]}, {"key": "taxrates", "effective_from": "2022-01-01", "state": "GA", "requirements": [{"key": "e0ac2284-8d30-4100-ae23-f85f9574868b", "value": "0.05"}]}, {"key": "depositschedules", "effective_from": "2022-01-01", "state": "GA", "requirements": [{"key": "6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c", "value": "Semi-weekly"}]}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
          state: "West Virginia"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
          state: "Washington"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
          state: "Mississippi"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-v1-companies-company_uuid-tax_requirements:
    Company with requirements in CA and GA:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"state": "CA", "setup_complete": true}, {"state": "GA", "setup_complete": false}]
  get-companies-company_uuid-holiday_pay_policy:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"version": "1b37938b017c7fd7116bada007072290", "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea", "federal_holidays": [{"new_years_day": {"selected": false, "name": "New Year's Day", "date": "January 1"}, "mlk_day": {"selected": true, "name": "Martin Luther King, Jr. Day", "date": "Third Monday in January"}, "presidents_day": {"selected": false, "name": "Presidents' Day", "date": "Third Monday in February"}, "memorial_day": {"selected": true, "name": "Memorial Day", "date": "Last Monday in May"}, "juneteenth": {"selected": false, "name": "Juneteenth", "date": "June 19"}, "independence_day": {"selected": true, "name": "Independence Day", "date": "July 4"}, "labor_day": {"selected": false, "name": "Labor Day", "date": "First Monday in September"}, "columbus_day": {"selected": false, "name": "Columbus Day (Indigenous Peoples' Day)", "date": "Second Monday in October"}, "veterans_day": {"selected": true, "name": "Veterans Day", "date": "November 11"}, "thanksgiving": {"selected": true, "name": "Thanksgiving", "date": "Fourth Thursday in November"}}], "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}]}
  post-companies-company_uuid-holiday_pay_policy:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"federal_holidays": {"mlk_day": {"selected": true}, "memorial_day": {"selected": true}, "independence_day": {"selected": true}, "veterans_day": {"selected": true}, "thanksgiving": {"selected": true}, "christmas_day": {"selected": true}}}
      responses:
        "200":
          application/json: {"version": "1b37938b017c7fd7116bada007072290", "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea", "federal_holidays": [{"new_years_day": {"selected": false, "name": "New Year's Day", "date": "January 1"}, "mlk_day": {"selected": true, "name": "Martin Luther King, Jr. Day", "date": "Third Monday in January"}, "presidents_day": {"selected": false, "name": "Presidents' Day", "date": "Third Monday in February"}, "memorial_day": {"selected": true, "name": "Memorial Day", "date": "Last Monday in May"}, "juneteenth": {"selected": false, "name": "Juneteenth", "date": "June 19"}, "independence_day": {"selected": true, "name": "Independence Day", "date": "July 4"}, "labor_day": {"selected": false, "name": "Labor Day", "date": "First Monday in September"}, "columbus_day": {"selected": false, "name": "Columbus Day (Indigenous Peoples' Day)", "date": "Second Monday in October"}, "veterans_day": {"selected": true, "name": "Veterans Day", "date": "November 11"}, "thanksgiving": {"selected": true, "name": "Thanksgiving", "date": "Fourth Thursday in November"}}], "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-companies-company_uuid-holiday_pay_policy:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1b37938b017c7fd7116bada007072290", "federal_holidays": {"mlk_day": {"selected": true}, "memorial_day": {"selected": true}, "independence_day": {"selected": true}, "veterans_day": {"selected": true}, "thanksgiving": {"selected": true}, "christmas_day": {"selected": true}}}
      responses:
        "200":
          application/json: {"version": "1b37938b017c7fd7116bada007072290", "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea", "federal_holidays": [{"new_years_day": {"selected": false, "name": "New Year's Day", "date": "January 1"}, "mlk_day": {"selected": true, "name": "Martin Luther King, Jr. Day", "date": "Third Monday in January"}, "presidents_day": {"selected": false, "name": "Presidents' Day", "date": "Third Monday in February"}, "memorial_day": {"selected": true, "name": "Memorial Day", "date": "Last Monday in May"}, "juneteenth": {"selected": false, "name": "Juneteenth", "date": "June 19"}, "independence_day": {"selected": true, "name": "Independence Day", "date": "July 4"}, "labor_day": {"selected": false, "name": "Labor Day", "date": "First Monday in September"}, "columbus_day": {"selected": false, "name": "Columbus Day (Indigenous Peoples' Day)", "date": "Second Monday in October"}, "veterans_day": {"selected": true, "name": "Veterans Day", "date": "November 11"}, "thanksgiving": {"selected": true, "name": "Thanksgiving", "date": "Fourth Thursday in November"}}], "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  delete-companies-company_uuid-holiday_pay_policy:
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-companies-company_uuid-holiday_pay_policy-add:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1b37938b017c7fd7116bada007072290", "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}, {"uuid": "fe977550-6621-4cfc-b4af-60b6af58c8ef"}]}
      responses:
        "200":
          application/json: {"version": "1b37938b017c7fd7116bada007072290", "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea", "federal_holidays": [{"new_years_day": {"selected": false, "name": "New Year's Day", "date": "January 1"}, "mlk_day": {"selected": true, "name": "Martin Luther King, Jr. Day", "date": "Third Monday in January"}, "presidents_day": {"selected": false, "name": "Presidents' Day", "date": "Third Monday in February"}, "memorial_day": {"selected": true, "name": "Memorial Day", "date": "Last Monday in May"}, "juneteenth": {"selected": false, "name": "Juneteenth", "date": "June 19"}, "independence_day": {"selected": true, "name": "Independence Day", "date": "July 4"}, "labor_day": {"selected": false, "name": "Labor Day", "date": "First Monday in September"}, "columbus_day": {"selected": false, "name": "Columbus Day (Indigenous Peoples' Day)", "date": "Second Monday in October"}, "veterans_day": {"selected": true, "name": "Veterans Day", "date": "November 11"}, "thanksgiving": {"selected": true, "name": "Thanksgiving", "date": "Fourth Thursday in November"}}], "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  put-companies-company_uuid-holiday_pay_policy-remove:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "1b37938b017c7fd7116bada007072290", "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}, {"uuid": "fe977550-6621-4cfc-b4af-60b6af58c8ef"}]}
      responses:
        "200":
          application/json: {"version": "1b37938b017c7fd7116bada007072290", "company_uuid": "b7845189-f12b-4378-918a-d2b9de3dc4ea", "federal_holidays": [{"new_years_day": {"selected": false, "name": "New Year's Day", "date": "January 1"}, "mlk_day": {"selected": true, "name": "Martin Luther King, Jr. Day", "date": "Third Monday in January"}, "presidents_day": {"selected": false, "name": "Presidents' Day", "date": "Third Monday in February"}, "memorial_day": {"selected": true, "name": "Memorial Day", "date": "Last Monday in May"}, "juneteenth": {"selected": false, "name": "Juneteenth", "date": "June 19"}, "independence_day": {"selected": true, "name": "Independence Day", "date": "July 4"}, "labor_day": {"selected": false, "name": "Labor Day", "date": "First Monday in September"}, "columbus_day": {"selected": false, "name": "Columbus Day (Indigenous Peoples' Day)", "date": "Second Monday in October"}, "veterans_day": {"selected": true, "name": "Veterans Day", "date": "November 11"}, "thanksgiving": {"selected": true, "name": "Thanksgiving", "date": "Fourth Thursday in November"}}], "employees": [{"uuid": "1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a"}]}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-notifications-notification_uuid:
    Example:
      parameters:
        path:
          notification_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "7b1d0df1-6403-4a06-8768-c1dd7d24d27a", "company_uuid": "88f7cca1-dcad-4d20-84db-7fb80303d69f", "title": "Action required: Additional information needed to process payroll", "message": "If we do not receive this information as soon as possible, your payroll may not be processed on time.", "category": "information_request", "actionable": true, "published_at": "2022-01-01T00:00:00.000Z", "due_at": "2022-02-01T00:00:00.000Z", "resources": [{"entity_type": "Employee", "entity_uuid": "21b6f9ce-0ac4-4745-8d8a-127f8c0f00f2"}]}
    Basic:
      parameters:
        path:
          notification_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          notification_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          notification_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-events:
    Example:
      parameters:
        query:
          sort_order: "asc"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "f7397a24-57ad-4fae-b011-d258e8232900", "event_type": "employee.bank_account.created", "resource_type": "Company", "resource_uuid": "92a20431-9489-4bde-ad27-6feb20b969d5", "entity_type": "BankAccount", "entity_uuid": "92a20431-9489-4bde-ad27-6feb20b969d5", "timestamp": 1686784995}]
  get-recovery-cases:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "e83d273e-4ae9-4b61-9c71-4030c2f73093", "company_uuid": "c5e3e3e9-732f-4762-849e-20b5cec9036f", "status": "open", "latest_error_code": "R01", "original_debit_date": "2023-10-11T00:00:00Z", "check_date": "2023-10-13T00:00:00Z", "payroll_uuid": "210f2034-fb4a-4059-b109-6c3b5efe499d", "contractor_payment_uuids": ["<value>", "<value>", "<value>"], "amount_outstanding": "10499.43", "event_total_amount": "5912.07"}]
  redebit-recovery-case:
    Basic:
      parameters:
        path:
          recovery_case_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          recovery_case_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          recovery_case_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-ach-transactions:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "123e4567-e89b-12d3-a456-426655440000", "company_uuid": "456e7890-e12b-34c5-d678-901234567890", "payment_event_type": "Payroll", "payment_event_uuid": "789e0123-e45f-67ab-c890-123456789012", "recipient_type": "Employee", "recipient_uuid": "012e3456-f78d-90ab-12cd-345678901234", "error_code": "<value>", "transaction_type": "Credit employee pay", "payment_status": "submitted", "payment_direction": "credit", "payment_event_check_date": "2023-10-02T00:00:00Z", "payment_date": "2023-10-17T00:00:00Z", "amount": "123.00", "description": "PAY 380654"}]
  get-wire_in_requests-wire_in_request_uuid:
    example:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "status": "awaiting_funds", "origination_bank": "JP Morgan Chase", "origination_bank_address": "1 Chase Plaza, New York, NY 10081", "recipient_name": "Gusto, Inc", "recipient_address": "525 20th Street, San Francisco, CA 94107", "recipient_account_number": "21911761", "recipient_routing_number": "123454321", "additional_notes": "Additional Notes", "bank_name": "JP Morgan Chase", "date_sent": "2024-06-10T00:00:00Z", "unique_tracking_code": "1trvxwxp57zf", "payment_type": "Payroll", "payment_uuid": "payroll", "amount_sent": "1014500.00", "requested_amount": "1014500.00", "wire_in_deadline": "2024-06-21T18:00:00Z"}
  put-wire_in_requests-wire_in_request_uuid:
    Example:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"date_sent": "2024-06-10T00:00:00Z", "bank_name": "Chase", "amount_sent": "314500", "additional_notes": "Wire for 2024-06-15 payroll."}
    example:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"date_sent": "<value>", "bank_name": "<value>", "amount_sent": "<value>"}
      responses:
        "200":
          application/json: {"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "status": "awaiting_funds", "origination_bank": "JP Morgan Chase", "origination_bank_address": "1 Chase Plaza, New York, NY 10081", "recipient_name": "Gusto, Inc", "recipient_address": "525 20th Street, San Francisco, CA 94107", "recipient_account_number": "21911761", "recipient_routing_number": "123454321", "additional_notes": "Additional Notes", "bank_name": "JP Morgan Chase", "date_sent": "2024-06-10T00:00:00Z", "unique_tracking_code": "1trvxwxp57zf", "payment_type": "Payroll", "payment_uuid": "payroll", "amount_sent": "1014500.00", "requested_amount": "1014500.00", "wire_in_deadline": "2024-06-21T18:00:00Z"}
    Basic:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"date_sent": "<value>", "bank_name": "<value>", "amount_sent": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"date_sent": "<value>", "bank_name": "<value>", "amount_sent": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          wire_in_request_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"date_sent": "<value>", "bank_name": "<value>", "amount_sent": "<value>"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
  get-companies-company_uuid-wire_in_request_uuid:
    Example:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4", "status": "rfi", "origination_bank": "JP Morgan Chase", "origination_bank_address": "1 Chase Plaza, New York, NY 10081", "recipient_name": "Gusto, Inc", "recipient_address": "525 20th Street, San Francisco, CA 94107", "recipient_account_number": "21911761", "recipient_routing_number": "5773243", "additional_notes": "Additional Notes", "bank_name": "Chase", "date_sent": "2024-06-10T00:00:00Z", "unique_tracking_code": "1trvxwxp57zf", "payment_type": "Payroll,", "payment_uuid": "payroll", "amount_sent": "1054693.52", "requested_amount": "1054693.52", "wire_in_deadline": "2024-06-21T18:00:00Z"}]
  get-v1-employees-employee_id-bank_accounts:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query: {}
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "1531e824-8d9e-4bd8-9f90-0d04608125d7", "employee_uuid": "9fcf1b1d-8886-4691-9283-383d3bdd4fd9", "account_type": "Checking", "name": "BoA Checking Account", "routing_number": "266905059", "hidden_account_number": "XXXX1207"}]
  get-employee-ytd-benefit-amounts-from-different-company:
    Example:
      parameters:
        path:
          employee_id: "<id>"
        query:
          tax_year: 2024
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{"uuid": "c5fdae57-5483-4529-9aae-f0edceed92d3", "benefit_type": 1, "ytd_employee_deduction_amount": "5000.00", "ytd_company_contribution_amount": "2500.00"}, {"uuid": "1bfdb946-b2be-4909-ac46-9e7f73872d0a", "benefit_type": 5, "ytd_employee_deduction_amount": "2132.00", "ytd_company_contribution_amount": "3345.00"}]
  get-companies-company_uuid-suspensions:
    speakeasy-default-get-companies-company-uuid-suspensions:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      responses:
        "200":
          application/json: [{}]
  post-companies-company_uuid-suspensions:
    Leaving to join another payroll provider:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"file_quarterly_forms": true, "file_yearly_forms": true, "reconcile_tax_method": "pay_taxes", "reason": "switching_provider", "leaving_for": "other"}
    Company is shutting down:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"file_quarterly_forms": true, "file_yearly_forms": true, "reconcile_tax_method": "pay_taxes", "reason": "shutting_down"}
    Basic:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"file_quarterly_forms": true, "file_yearly_forms": true, "reconcile_tax_method": "pay_taxes", "reason": "acquired"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "base", "category": "payroll_blocker", "message": "Company must complete all onboarding requirements in order to run payroll.", "metadata": {"key": "needs_onboarding"}}]}
    Resource:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"file_quarterly_forms": false, "file_yearly_forms": false, "reconcile_tax_method": "refund_taxes", "reason": "shutting_down"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "first_name", "category": "invalid_attribute_value", "message": "First name is required"}, {"error_key": "date_of_birth", "category": "invalid_attribute_value", "message": "Date of birth is not a valid date"}]}
    Nested:
      parameters:
        path:
          company_uuid: "<id>"
        header:
          X-Gusto-API-Version: "2024-04-01"
      requestBody:
        application/json: {"file_quarterly_forms": false, "file_yearly_forms": false, "reconcile_tax_method": "refund_taxes", "reason": "no_more_employees"}
      responses:
        "422":
          application/json: {"errors": [{"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "72ae4617-daa9-4ed7-85e0-18ed5d0ee835"}}, {"error_key": "contractor_payments", "category": "nested_errors", "metadata": {"contractor_uuid": "2d7bf62c-babf-4a12-8292-340e2d9cab28"}}]}
examplesVersion: 1.0.0
generatedTests: {}
