/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  PayrollBlockersError,
  PayrollBlockersError$inboundSchema,
  PayrollBlockersError$Outbound,
  PayrollBlockersError$outboundSchema,
} from "./payrollblockerserror.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
import {
  UnprocessableEntityErrorObject,
  UnprocessableEntityErrorObject$inboundSchema,
  UnprocessableEntityErrorObject$Outbound,
  UnprocessableEntityErrorObject$outboundSchema,
} from "./unprocessableentityerrorobject.js";

/**
 * Unprocessable Entity
 */
export type PostCompaniesPayrollSkipCompanyUuidResponseBody =
  | UnprocessableEntityErrorObject
  | PayrollBlockersError;

/** @internal */
export const PostCompaniesPayrollSkipCompanyUuidResponseBody$inboundSchema:
  z.ZodType<
    PostCompaniesPayrollSkipCompanyUuidResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.union([
    UnprocessableEntityErrorObject$inboundSchema,
    PayrollBlockersError$inboundSchema,
  ]);

/** @internal */
export type PostCompaniesPayrollSkipCompanyUuidResponseBody$Outbound =
  | UnprocessableEntityErrorObject$Outbound
  | PayrollBlockersError$Outbound;

/** @internal */
export const PostCompaniesPayrollSkipCompanyUuidResponseBody$outboundSchema:
  z.ZodType<
    PostCompaniesPayrollSkipCompanyUuidResponseBody$Outbound,
    z.ZodTypeDef,
    PostCompaniesPayrollSkipCompanyUuidResponseBody
  > = z.union([
    UnprocessableEntityErrorObject$outboundSchema,
    PayrollBlockersError$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostCompaniesPayrollSkipCompanyUuidResponseBody$ {
  /** @deprecated use `PostCompaniesPayrollSkipCompanyUuidResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostCompaniesPayrollSkipCompanyUuidResponseBody$inboundSchema;
  /** @deprecated use `PostCompaniesPayrollSkipCompanyUuidResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostCompaniesPayrollSkipCompanyUuidResponseBody$outboundSchema;
  /** @deprecated use `PostCompaniesPayrollSkipCompanyUuidResponseBody$Outbound` instead. */
  export type Outbound =
    PostCompaniesPayrollSkipCompanyUuidResponseBody$Outbound;
}

export function postCompaniesPayrollSkipCompanyUuidResponseBodyToJSON(
  postCompaniesPayrollSkipCompanyUuidResponseBody:
    PostCompaniesPayrollSkipCompanyUuidResponseBody,
): string {
  return JSON.stringify(
    PostCompaniesPayrollSkipCompanyUuidResponseBody$outboundSchema.parse(
      postCompaniesPayrollSkipCompanyUuidResponseBody,
    ),
  );
}

export function postCompaniesPayrollSkipCompanyUuidResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostCompaniesPayrollSkipCompanyUuidResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostCompaniesPayrollSkipCompanyUuidResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostCompaniesPayrollSkipCompanyUuidResponseBody' from JSON`,
  );
}
