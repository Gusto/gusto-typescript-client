/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetV1EmployeesEmployeeIdCustomFieldsRequest = {
  /**
   * The UUID of the employee
   */
  employeeId: string;
  /**
   * The page that is requested. When unspecified, will load all objects unless endpoint forces pagination.
   */
  page?: number | undefined;
  /**
   * Number of objects per page. For majority of endpoints will default to 25
   */
  per?: number | undefined;
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?: components.VersionHeader | undefined;
};

/**
 * OK
 */
export type GetV1EmployeesEmployeeIdCustomFieldsResponseBody = {
  customFields?: Array<components.EmployeeCustomField> | undefined;
};

/** @internal */
export const GetV1EmployeesEmployeeIdCustomFieldsRequest$inboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdCustomFieldsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    employee_id: z.string(),
    page: z.number().optional(),
    per: z.number().optional(),
    "X-Gusto-API-Version": components.VersionHeader$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "employee_id": "employeeId",
      "X-Gusto-API-Version": "xGustoAPIVersion",
    });
  });

/** @internal */
export type GetV1EmployeesEmployeeIdCustomFieldsRequest$Outbound = {
  employee_id: string;
  page?: number | undefined;
  per?: number | undefined;
  "X-Gusto-API-Version"?: string | undefined;
};

/** @internal */
export const GetV1EmployeesEmployeeIdCustomFieldsRequest$outboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdCustomFieldsRequest$Outbound,
    z.ZodTypeDef,
    GetV1EmployeesEmployeeIdCustomFieldsRequest
  > = z.object({
    employeeId: z.string(),
    page: z.number().optional(),
    per: z.number().optional(),
    xGustoAPIVersion: components.VersionHeader$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      employeeId: "employee_id",
      xGustoAPIVersion: "X-Gusto-API-Version",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1EmployeesEmployeeIdCustomFieldsRequest$ {
  /** @deprecated use `GetV1EmployeesEmployeeIdCustomFieldsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV1EmployeesEmployeeIdCustomFieldsRequest$inboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdCustomFieldsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV1EmployeesEmployeeIdCustomFieldsRequest$outboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdCustomFieldsRequest$Outbound` instead. */
  export type Outbound = GetV1EmployeesEmployeeIdCustomFieldsRequest$Outbound;
}

export function getV1EmployeesEmployeeIdCustomFieldsRequestToJSON(
  getV1EmployeesEmployeeIdCustomFieldsRequest:
    GetV1EmployeesEmployeeIdCustomFieldsRequest,
): string {
  return JSON.stringify(
    GetV1EmployeesEmployeeIdCustomFieldsRequest$outboundSchema.parse(
      getV1EmployeesEmployeeIdCustomFieldsRequest,
    ),
  );
}

export function getV1EmployeesEmployeeIdCustomFieldsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1EmployeesEmployeeIdCustomFieldsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1EmployeesEmployeeIdCustomFieldsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1EmployeesEmployeeIdCustomFieldsRequest' from JSON`,
  );
}

/** @internal */
export const GetV1EmployeesEmployeeIdCustomFieldsResponseBody$inboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdCustomFieldsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    custom_fields: z.array(components.EmployeeCustomField$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "custom_fields": "customFields",
    });
  });

/** @internal */
export type GetV1EmployeesEmployeeIdCustomFieldsResponseBody$Outbound = {
  custom_fields?: Array<components.EmployeeCustomField$Outbound> | undefined;
};

/** @internal */
export const GetV1EmployeesEmployeeIdCustomFieldsResponseBody$outboundSchema:
  z.ZodType<
    GetV1EmployeesEmployeeIdCustomFieldsResponseBody$Outbound,
    z.ZodTypeDef,
    GetV1EmployeesEmployeeIdCustomFieldsResponseBody
  > = z.object({
    customFields: z.array(components.EmployeeCustomField$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      customFields: "custom_fields",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1EmployeesEmployeeIdCustomFieldsResponseBody$ {
  /** @deprecated use `GetV1EmployeesEmployeeIdCustomFieldsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetV1EmployeesEmployeeIdCustomFieldsResponseBody$inboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdCustomFieldsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV1EmployeesEmployeeIdCustomFieldsResponseBody$outboundSchema;
  /** @deprecated use `GetV1EmployeesEmployeeIdCustomFieldsResponseBody$Outbound` instead. */
  export type Outbound =
    GetV1EmployeesEmployeeIdCustomFieldsResponseBody$Outbound;
}

export function getV1EmployeesEmployeeIdCustomFieldsResponseBodyToJSON(
  getV1EmployeesEmployeeIdCustomFieldsResponseBody:
    GetV1EmployeesEmployeeIdCustomFieldsResponseBody,
): string {
  return JSON.stringify(
    GetV1EmployeesEmployeeIdCustomFieldsResponseBody$outboundSchema.parse(
      getV1EmployeesEmployeeIdCustomFieldsResponseBody,
    ),
  );
}

export function getV1EmployeesEmployeeIdCustomFieldsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1EmployeesEmployeeIdCustomFieldsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1EmployeesEmployeeIdCustomFieldsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1EmployeesEmployeeIdCustomFieldsResponseBody' from JSON`,
  );
}
