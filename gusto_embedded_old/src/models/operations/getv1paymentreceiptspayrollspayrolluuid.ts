/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetV1PaymentReceiptsPayrollsPayrollUuidRequest = {
  /**
   * The UUID of the payroll
   */
  payrollUuid: string;
  /**
   * Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
   */
  xGustoAPIVersion?: components.VersionHeader | undefined;
};

/** @internal */
export const GetV1PaymentReceiptsPayrollsPayrollUuidRequest$inboundSchema:
  z.ZodType<
    GetV1PaymentReceiptsPayrollsPayrollUuidRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    payroll_uuid: z.string(),
    "X-Gusto-API-Version": components.VersionHeader$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "payroll_uuid": "payrollUuid",
      "X-Gusto-API-Version": "xGustoAPIVersion",
    });
  });

/** @internal */
export type GetV1PaymentReceiptsPayrollsPayrollUuidRequest$Outbound = {
  payroll_uuid: string;
  "X-Gusto-API-Version"?: string | undefined;
};

/** @internal */
export const GetV1PaymentReceiptsPayrollsPayrollUuidRequest$outboundSchema:
  z.ZodType<
    GetV1PaymentReceiptsPayrollsPayrollUuidRequest$Outbound,
    z.ZodTypeDef,
    GetV1PaymentReceiptsPayrollsPayrollUuidRequest
  > = z.object({
    payrollUuid: z.string(),
    xGustoAPIVersion: components.VersionHeader$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      payrollUuid: "payroll_uuid",
      xGustoAPIVersion: "X-Gusto-API-Version",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1PaymentReceiptsPayrollsPayrollUuidRequest$ {
  /** @deprecated use `GetV1PaymentReceiptsPayrollsPayrollUuidRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV1PaymentReceiptsPayrollsPayrollUuidRequest$inboundSchema;
  /** @deprecated use `GetV1PaymentReceiptsPayrollsPayrollUuidRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV1PaymentReceiptsPayrollsPayrollUuidRequest$outboundSchema;
  /** @deprecated use `GetV1PaymentReceiptsPayrollsPayrollUuidRequest$Outbound` instead. */
  export type Outbound =
    GetV1PaymentReceiptsPayrollsPayrollUuidRequest$Outbound;
}

export function getV1PaymentReceiptsPayrollsPayrollUuidRequestToJSON(
  getV1PaymentReceiptsPayrollsPayrollUuidRequest:
    GetV1PaymentReceiptsPayrollsPayrollUuidRequest,
): string {
  return JSON.stringify(
    GetV1PaymentReceiptsPayrollsPayrollUuidRequest$outboundSchema.parse(
      getV1PaymentReceiptsPayrollsPayrollUuidRequest,
    ),
  );
}

export function getV1PaymentReceiptsPayrollsPayrollUuidRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV1PaymentReceiptsPayrollsPayrollUuidRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV1PaymentReceiptsPayrollsPayrollUuidRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV1PaymentReceiptsPayrollsPayrollUuidRequest' from JSON`,
  );
}
