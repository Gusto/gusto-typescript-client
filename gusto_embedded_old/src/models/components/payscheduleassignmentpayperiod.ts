/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Pay schedule assignment first pay period information.
 */
export type PayScheduleAssignmentPayPeriod = {
  /**
   * The pay schedule UUID.
   */
  payScheduleUuid?: string | undefined;
  /**
   * Pay period start date.
   */
  startDate?: string | undefined;
  /**
   * Pay period end date.
   */
  endDate?: string | undefined;
  /**
   * Pay period check date.
   */
  checkDate?: string | undefined;
};

/** @internal */
export const PayScheduleAssignmentPayPeriod$inboundSchema: z.ZodType<
  PayScheduleAssignmentPayPeriod,
  z.ZodTypeDef,
  unknown
> = z.object({
  pay_schedule_uuid: z.string().optional(),
  start_date: z.string().optional(),
  end_date: z.string().optional(),
  check_date: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "pay_schedule_uuid": "payScheduleUuid",
    "start_date": "startDate",
    "end_date": "endDate",
    "check_date": "checkDate",
  });
});

/** @internal */
export type PayScheduleAssignmentPayPeriod$Outbound = {
  pay_schedule_uuid?: string | undefined;
  start_date?: string | undefined;
  end_date?: string | undefined;
  check_date?: string | undefined;
};

/** @internal */
export const PayScheduleAssignmentPayPeriod$outboundSchema: z.ZodType<
  PayScheduleAssignmentPayPeriod$Outbound,
  z.ZodTypeDef,
  PayScheduleAssignmentPayPeriod
> = z.object({
  payScheduleUuid: z.string().optional(),
  startDate: z.string().optional(),
  endDate: z.string().optional(),
  checkDate: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    payScheduleUuid: "pay_schedule_uuid",
    startDate: "start_date",
    endDate: "end_date",
    checkDate: "check_date",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayScheduleAssignmentPayPeriod$ {
  /** @deprecated use `PayScheduleAssignmentPayPeriod$inboundSchema` instead. */
  export const inboundSchema = PayScheduleAssignmentPayPeriod$inboundSchema;
  /** @deprecated use `PayScheduleAssignmentPayPeriod$outboundSchema` instead. */
  export const outboundSchema = PayScheduleAssignmentPayPeriod$outboundSchema;
  /** @deprecated use `PayScheduleAssignmentPayPeriod$Outbound` instead. */
  export type Outbound = PayScheduleAssignmentPayPeriod$Outbound;
}

export function payScheduleAssignmentPayPeriodToJSON(
  payScheduleAssignmentPayPeriod: PayScheduleAssignmentPayPeriod,
): string {
  return JSON.stringify(
    PayScheduleAssignmentPayPeriod$outboundSchema.parse(
      payScheduleAssignmentPayPeriod,
    ),
  );
}

export function payScheduleAssignmentPayPeriodFromJSON(
  jsonString: string,
): SafeParseResult<PayScheduleAssignmentPayPeriod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PayScheduleAssignmentPayPeriod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PayScheduleAssignmentPayPeriod' from JSON`,
  );
}
