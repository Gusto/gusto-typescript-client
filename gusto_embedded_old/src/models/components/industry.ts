/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Example response
 */
export type Industry = {
  /**
   * Company uuid
   */
  companyUuid?: string | undefined;
  /**
   * North American Industry Classification System (NAICS) is used to classify businesses with a six digit number based on the primary type of work the business performs.
   */
  naicsCode?: string | undefined;
  /**
   * A list of Standard Industrial Classification (SIC) codes, which are four digit number that categorize the industries that companies belong to based on their business activities.
   */
  sicCodes?: Array<string> | undefined;
  /**
   * Industry title
   */
  title?: string | undefined;
};

/** @internal */
export const Industry$inboundSchema: z.ZodType<
  Industry,
  z.ZodTypeDef,
  unknown
> = z.object({
  company_uuid: z.string().optional(),
  naics_code: z.string().optional(),
  sic_codes: z.array(z.string()).optional(),
  title: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "company_uuid": "companyUuid",
    "naics_code": "naicsCode",
    "sic_codes": "sicCodes",
  });
});

/** @internal */
export type Industry$Outbound = {
  company_uuid?: string | undefined;
  naics_code?: string | undefined;
  sic_codes?: Array<string> | undefined;
  title?: string | undefined;
};

/** @internal */
export const Industry$outboundSchema: z.ZodType<
  Industry$Outbound,
  z.ZodTypeDef,
  Industry
> = z.object({
  companyUuid: z.string().optional(),
  naicsCode: z.string().optional(),
  sicCodes: z.array(z.string()).optional(),
  title: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    companyUuid: "company_uuid",
    naicsCode: "naics_code",
    sicCodes: "sic_codes",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Industry$ {
  /** @deprecated use `Industry$inboundSchema` instead. */
  export const inboundSchema = Industry$inboundSchema;
  /** @deprecated use `Industry$outboundSchema` instead. */
  export const outboundSchema = Industry$outboundSchema;
  /** @deprecated use `Industry$Outbound` instead. */
  export type Outbound = Industry$Outbound;
}

export function industryToJSON(industry: Industry): string {
  return JSON.stringify(Industry$outboundSchema.parse(industry));
}

export function industryFromJSON(
  jsonString: string,
): SafeParseResult<Industry, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Industry$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Industry' from JSON`,
  );
}
