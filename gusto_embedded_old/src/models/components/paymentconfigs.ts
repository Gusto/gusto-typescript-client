/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Example response
 */
export type PaymentConfigs = {
  /**
   * Company uuid
   */
  companyUuid?: string | undefined;
  /**
   * Partner uuid
   */
  partnerUuid?: string | undefined;
  /**
   * Payment limit for 1-day or 2-day payroll
   */
  fastPaymentLimit?: string | undefined;
  /**
   * Payment speed for 1-day, 2-day, 4-day
   */
  paymentSpeed?: string | undefined;
};

/** @internal */
export const PaymentConfigs$inboundSchema: z.ZodType<
  PaymentConfigs,
  z.ZodTypeDef,
  unknown
> = z.object({
  company_uuid: z.string().optional(),
  partner_uuid: z.string().optional(),
  fast_payment_limit: z.string().optional(),
  payment_speed: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "company_uuid": "companyUuid",
    "partner_uuid": "partnerUuid",
    "fast_payment_limit": "fastPaymentLimit",
    "payment_speed": "paymentSpeed",
  });
});

/** @internal */
export type PaymentConfigs$Outbound = {
  company_uuid?: string | undefined;
  partner_uuid?: string | undefined;
  fast_payment_limit?: string | undefined;
  payment_speed?: string | undefined;
};

/** @internal */
export const PaymentConfigs$outboundSchema: z.ZodType<
  PaymentConfigs$Outbound,
  z.ZodTypeDef,
  PaymentConfigs
> = z.object({
  companyUuid: z.string().optional(),
  partnerUuid: z.string().optional(),
  fastPaymentLimit: z.string().optional(),
  paymentSpeed: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    companyUuid: "company_uuid",
    partnerUuid: "partner_uuid",
    fastPaymentLimit: "fast_payment_limit",
    paymentSpeed: "payment_speed",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentConfigs$ {
  /** @deprecated use `PaymentConfigs$inboundSchema` instead. */
  export const inboundSchema = PaymentConfigs$inboundSchema;
  /** @deprecated use `PaymentConfigs$outboundSchema` instead. */
  export const outboundSchema = PaymentConfigs$outboundSchema;
  /** @deprecated use `PaymentConfigs$Outbound` instead. */
  export type Outbound = PaymentConfigs$Outbound;
}

export function paymentConfigsToJSON(paymentConfigs: PaymentConfigs): string {
  return JSON.stringify(PaymentConfigs$outboundSchema.parse(paymentConfigs));
}

export function paymentConfigsFromJSON(
  jsonString: string,
): SafeParseResult<PaymentConfigs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentConfigs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentConfigs' from JSON`,
  );
}
